{"version":3,"file":"index.js","sources":["../webpack://update-cloudflare-dns/./.build/helpers.js","../webpack://update-cloudflare-dns/./.build/main.js","../webpack://update-cloudflare-dns/./node_modules/@actions/core/lib/command.js","../webpack://update-cloudflare-dns/./node_modules/@actions/core/lib/core.js","../webpack://update-cloudflare-dns/./node_modules/@actions/core/lib/file-command.js","../webpack://update-cloudflare-dns/./node_modules/@actions/core/lib/utils.js","../webpack://update-cloudflare-dns/./node_modules/agent-base/dist/src/index.js","../webpack://update-cloudflare-dns/./node_modules/agent-base/dist/src/promisify.js","../webpack://update-cloudflare-dns/./node_modules/autocreate/autocreate.js","../webpack://update-cloudflare-dns/./node_modules/capture-stack-trace/index.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/index.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/Client.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/Getter.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/Resource.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/method.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/proxy.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/DNSRecords.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/EnterpriseZoneWorkersKV.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/EnterpriseZoneWorkersKVNamespaces.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/EnterpriseZoneWorkersRoutes.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/EnterpriseZoneWorkersScripts.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/IPs.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/User.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/ZoneCustomHostNames.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/ZoneSettings.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/ZoneWorkers.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/ZoneWorkersRoutes.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/ZoneWorkersScript.js","../webpack://update-cloudflare-dns/./node_modules/cloudflare/lib/resources/Zones.js","../webpack://update-cloudflare-dns/./node_modules/create-error-class/index.js","../webpack://update-cloudflare-dns/./node_modules/debug/src/browser.js","../webpack://update-cloudflare-dns/./node_modules/debug/src/common.js","../webpack://update-cloudflare-dns/./node_modules/debug/src/index.js","../webpack://update-cloudflare-dns/./node_modules/debug/src/node.js","../webpack://update-cloudflare-dns/./node_modules/dotenv/lib/main.js","../webpack://update-cloudflare-dns/./node_modules/duplexer3/index.js","../webpack://update-cloudflare-dns/./node_modules/es-class/build/es-class.npm.js","../webpack://update-cloudflare-dns/./node_modules/fp-ts/lib/Apply.js","../webpack://update-cloudflare-dns/./node_modules/fp-ts/lib/Chain.js","../webpack://update-cloudflare-dns/./node_modules/fp-ts/lib/Eq.js","../webpack://update-cloudflare-dns/./node_modules/fp-ts/lib/Functor.js","../webpack://update-cloudflare-dns/./node_modules/fp-ts/lib/Magma.js","../webpack://update-cloudflare-dns/./node_modules/fp-ts/lib/Ord.js","../webpack://update-cloudflare-dns/./node_modules/fp-ts/lib/ReadonlyNonEmptyArray.js","../webpack://update-cloudflare-dns/./node_modules/fp-ts/lib/Semigroup.js","../webpack://update-cloudflare-dns/./node_modules/fp-ts/lib/function.js","../webpack://update-cloudflare-dns/./node_modules/fp-ts/lib/internal.js","../webpack://update-cloudflare-dns/./node_modules/fp-ts/lib/string.js","../webpack://update-cloudflare-dns/./node_modules/get-stream/buffer-stream.js","../webpack://update-cloudflare-dns/./node_modules/get-stream/index.js","../webpack://update-cloudflare-dns/./node_modules/got/index.js","../webpack://update-cloudflare-dns/./node_modules/has-flag/index.js","../webpack://update-cloudflare-dns/./node_modules/hjson/lib/hjson-comments.js","../webpack://update-cloudflare-dns/./node_modules/hjson/lib/hjson-common.js","../webpack://update-cloudflare-dns/./node_modules/hjson/lib/hjson-dsf.js","../webpack://update-cloudflare-dns/./node_modules/hjson/lib/hjson-parse.js","../webpack://update-cloudflare-dns/./node_modules/hjson/lib/hjson-stringify.js","../webpack://update-cloudflare-dns/./node_modules/hjson/lib/hjson-version.js","../webpack://update-cloudflare-dns/./node_modules/hjson/lib/hjson.js","../webpack://update-cloudflare-dns/./node_modules/https-proxy-agent/dist/agent.js","../webpack://update-cloudflare-dns/./node_modules/https-proxy-agent/dist/index.js","../webpack://update-cloudflare-dns/./node_modules/https-proxy-agent/dist/parse-proxy-response.js","../webpack://update-cloudflare-dns/./node_modules/is-redirect/index.js","../webpack://update-cloudflare-dns/./node_modules/is-retry-allowed/index.js","../webpack://update-cloudflare-dns/./node_modules/is-stream/index.js","../webpack://update-cloudflare-dns/./node_modules/lowercase-keys/index.js","../webpack://update-cloudflare-dns/./node_modules/ms/index.js","../webpack://update-cloudflare-dns/./node_modules/object-assign/index.js","../webpack://update-cloudflare-dns/./node_modules/prepend-http/index.js","../webpack://update-cloudflare-dns/./node_modules/safe-buffer/index.js","../webpack://update-cloudflare-dns/./node_modules/should-proxy/index.js","../webpack://update-cloudflare-dns/./node_modules/supports-color/index.js","../webpack://update-cloudflare-dns/./node_modules/timed-out/index.js","../webpack://update-cloudflare-dns/./node_modules/unzip-response/index.js","../webpack://update-cloudflare-dns/./node_modules/url-parse-lax/index.js","../webpack://update-cloudflare-dns/./node_modules/url-pattern/lib/url-pattern.js","../webpack://update-cloudflare-dns/external \"assert\"","../webpack://update-cloudflare-dns/external \"buffer\"","../webpack://update-cloudflare-dns/external \"events\"","../webpack://update-cloudflare-dns/external \"fs\"","../webpack://update-cloudflare-dns/external \"http\"","../webpack://update-cloudflare-dns/external \"https\"","../webpack://update-cloudflare-dns/external \"net\"","../webpack://update-cloudflare-dns/external \"os\"","../webpack://update-cloudflare-dns/external \"path\"","../webpack://update-cloudflare-dns/external \"process\"","../webpack://update-cloudflare-dns/external \"querystring\"","../webpack://update-cloudflare-dns/external \"stream\"","../webpack://update-cloudflare-dns/external \"tls\"","../webpack://update-cloudflare-dns/external \"tty\"","../webpack://update-cloudflare-dns/external \"url\"","../webpack://update-cloudflare-dns/external \"util\"","../webpack://update-cloudflare-dns/external \"zlib\"","../webpack://update-cloudflare-dns/webpack/bootstrap","../webpack://update-cloudflare-dns/webpack/runtime/compat","../webpack://update-cloudflare-dns/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.partitionRecords = exports.printConfigRecord = exports.printRemoteRecord = exports.recordTTL = exports.recordContent = exports.sameRecord = exports.remoteRecordToConfigRecord = exports.niceRecordName = void 0;\nconst string_1 = require(\"fp-ts/lib/string\");\nconst niceRecordName = (rec) => {\n    const removeZone = rec.name.replace(rec.zone_name, '');\n    if (removeZone === '')\n        return '@';\n    return removeZone.slice(0, -1);\n};\nexports.niceRecordName = niceRecordName;\nconst setCommonStuff = (rec) => {\n    return {\n        name: exports.niceRecordName(rec),\n        proxied: rec.proxied,\n        ttl: rec.ttl,\n    };\n};\nconst remoteRecordToConfigRecord = (rec) => {\n    var _c;\n    switch (rec.type) {\n        case 'A':\n            return Object.assign(Object.assign({}, setCommonStuff(rec)), { type: 'A', ipv4: rec.content });\n        case 'AAAA':\n            return Object.assign(Object.assign({}, setCommonStuff(rec)), { type: 'AAAA', ipv6: string_1.toLowerCase(rec.content) });\n        case 'CNAME':\n            return Object.assign(Object.assign({}, setCommonStuff(rec)), { type: 'CNAME', target: rec.content });\n        // case 'HTTPS':\n        // \treturn {\n        // \t\t...setCommonStuff(rec),\n        // \t\ttype: 'HTTPS',\n        // \t\tipv6: toLowerCase(rec.content),\n        // \t}\n        case 'TXT':\n            return Object.assign(Object.assign({ type: rec.type }, setCommonStuff(rec)), { content: rec.content });\n        case 'MX':\n            return {\n                type: rec.type,\n                name: exports.niceRecordName(rec),\n                mailServer: rec.content,\n                priority: (_c = rec.priority) !== null && _c !== void 0 ? _c : 1,\n            };\n    }\n    // return absurd(rec.type)\n    return Object.assign(Object.assign({}, setCommonStuff(rec)), { type: 'A', ipv4: 'OH NO!' });\n};\nexports.remoteRecordToConfigRecord = remoteRecordToConfigRecord;\nconst sameRecord = (remoteRecord, configRecord) => {\n    var _c, _d;\n    if (remoteRecord.type !== configRecord.type)\n        return false;\n    const niceName = exports.niceRecordName(remoteRecord);\n    if (niceName !== configRecord.name)\n        return false;\n    switch (configRecord.type) {\n        case 'A':\n            if (remoteRecord.content !== configRecord.ipv4)\n                return false;\n            if (remoteRecord.proxied !== ((_c = configRecord.proxied) !== null && _c !== void 0 ? _c : true))\n                return false;\n            break;\n        case 'AAAA':\n            if (remoteRecord.content.toLowerCase() !== configRecord.ipv6.toLowerCase())\n                return false;\n            if (remoteRecord.proxied !== ((_d = configRecord.proxied) !== null && _d !== void 0 ? _d : true))\n                return false;\n            break;\n        case 'TXT':\n            if (remoteRecord.content !== configRecord.content)\n                return false;\n            if (remoteRecord.ttl !== configRecord.ttl)\n                return false;\n            break;\n        case 'MX':\n            if (remoteRecord.content !== configRecord.mailServer)\n                return false;\n            if (remoteRecord.priority !== configRecord.priority)\n                return false;\n            break;\n        case 'CNAME':\n            if (remoteRecord.content !== configRecord.target)\n                return false;\n            if (remoteRecord.ttl !== configRecord.ttl)\n                return false;\n            break;\n    }\n    return true;\n};\nexports.sameRecord = sameRecord;\nconst recordContent = (record) => {\n    switch (record.type) {\n        case 'A':\n            return record.ipv4;\n        case 'AAAA':\n            return record.ipv6;\n        case 'TXT':\n            return record.content;\n        case 'MX':\n            return record.mailServer;\n        case 'CNAME':\n            return record.target;\n    }\n    // return absurd(record)\n    return 'OH NO';\n};\nexports.recordContent = recordContent;\nconst recordTTL = (record) => {\n    var _c;\n    if (record.type === 'TXT') {\n        return (_c = record.ttl) !== null && _c !== void 0 ? _c : 1;\n    }\n    return 1;\n};\nexports.recordTTL = recordTTL;\nconst printRemoteRecord = (record, full = false) => {\n    const name = full ? `${record.name}.` : exports.niceRecordName(record);\n    return `${name}\\t${record.ttl}\\tIN\\t${record.type}\\t${record.priority !== undefined ? `${record.priority} ` : ''}${record.content}${record.type === 'MX' ? '.' : ''}`;\n};\nexports.printRemoteRecord = printRemoteRecord;\nconst printConfigRecord = (record, zone, full = false) => {\n    const fullName = `${record.name === '@' ? zone : `${record.name}.${zone}`}.`;\n    const name = full ? fullName : record.name;\n    let content = exports.recordContent(record);\n    const ttl = exports.recordTTL(record);\n    switch (record.type) {\n        case 'TXT':\n            content = `\"${content}\"`;\n            break;\n        case 'MX':\n            content = `${record.priority} ${content}.`;\n            break;\n    }\n    return `${name}\\t${ttl}\\tIN\\t${record.type}\\t${content}`;\n};\nexports.printConfigRecord = printConfigRecord;\nconst partitionRecords = (remote, local, comparator) => {\n    const toBeDeleted = remote.filter((rec) => local.findIndex((possiblySameRec) => comparator(rec, possiblySameRec)) ===\n        -1);\n    const toBeKept = remote.filter((rec) => local.findIndex((possiblySameRec) => comparator(rec, possiblySameRec)) !==\n        -1);\n    const toBeAdded = local.filter((rec) => remote.findIndex((possiblySameRec) => comparator(possiblySameRec, rec)) === -1);\n    return { toBeDeleted, toBeKept, toBeAdded };\n};\nexports.partitionRecords = partitionRecords;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = __importStar(require(\"@actions/core\"));\n// import * as github from '@actions/github'\nconst process_1 = require(\"process\");\nconst hjson_1 = __importDefault(require(\"hjson\"));\nconst fs_1 = __importDefault(require(\"fs\"));\nconst cloudflare_1 = __importDefault(require(\"cloudflare\"));\nconst helpers_1 = require(\"./helpers\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nrequire('dotenv').config();\nconst inputOrEnv = (inputName, envName) => {\n    const input = core.getInput(inputName);\n    if (input !== '')\n        return input;\n    const env = process.env[envName];\n    return env;\n};\nconst main = () => __awaiter(void 0, void 0, void 0, function* () {\n    const ZONE = inputOrEnv('zone', 'ZONE');\n    if (ZONE === undefined) {\n        console.log('Zone not set. Make sure to provide one in the GitHub action.');\n        core.setFailed('Zone not set.');\n        process_1.exit(-1);\n    }\n    //   const time = (new Date()).toTimeString();\n    ///   core.setOutput(\"time\", time);\n    // Get the JSON webhook payload for the event that triggered the workflow\n    //   const payload = JSON.stringify(github.context.payload, undefined, 2)\n    //   console.log(`The event payload: ${payload}`);\n    const TOKEN = inputOrEnv('cloudflareToken', 'CLOUDFLARE_TOKEN');\n    if (TOKEN === undefined) {\n        console.log('Cloudflare token not found. Make sure to add one in GitHub environments.');\n        core.setFailed('Cloudflare token not found.');\n        process_1.exit(-1);\n    }\n    const cf = new cloudflare_1.default({\n        token: TOKEN,\n    });\n    const DRY_RUN = Boolean(process.env.DRY_RUN);\n    const rawText = fs_1.default.readFileSync('./DNS-RECORDS.hjson').toString();\n    const config = hjson_1.default.parse(rawText);\n    // Find the right zone\n    let zoneId = '';\n    try {\n        const response = yield cf.zones.browse();\n        const zones = response.result;\n        const theZones = zones\n            .filter((zone) => zone.name === ZONE)\n            .map((zone) => zone.id);\n        if (theZones.length === 0) {\n            console.log(`No zones found with name: ${ZONE}.`);\n            console.log('Make sure you have it right in DNS-RECORDS.hjson.');\n            core.setFailed('Zone not found.');\n            process_1.exit(-1);\n        }\n        zoneId = theZones[0];\n    }\n    catch (err) {\n        console.log(err);\n        core.setFailed(err);\n        process_1.exit(-1);\n    }\n    // Check which records need to be deleted, kept, or added\n    const currentRecords = (yield cf.dnsRecords.browse(zoneId)).result;\n    const { toBeDeleted, toBeKept, toBeAdded } = helpers_1.partitionRecords(currentRecords, config.records, helpers_1.sameRecord);\n    console.log('Records that will be deleted:');\n    yield Promise.all(toBeDeleted.map((rec) => __awaiter(void 0, void 0, void 0, function* () {\n        if (!DRY_RUN) {\n            try {\n                yield cf.dnsRecords.del(zoneId, rec.id);\n                console.log('✔ ', helpers_1.printRemoteRecord(rec));\n            }\n            catch (err) {\n                console.log('❌ ', helpers_1.printRemoteRecord(rec));\n                console.log(err);\n            }\n        }\n    })));\n    console.log('Records that will be kept:');\n    toBeKept.forEach((rec) => {\n        console.log('✔ ', helpers_1.printRemoteRecord(rec));\n    });\n    console.log('Records that will be added:');\n    yield Promise.all(toBeAdded.map((rec) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a, _b;\n        if (!DRY_RUN) {\n            try {\n                const content = helpers_1.recordContent(rec);\n                switch (rec.type) {\n                    case 'A':\n                    case 'AAAA':\n                        yield cf.dnsRecords.add(zoneId, {\n                            type: rec.type,\n                            name: rec.name,\n                            content,\n                            ttl: 14400,\n                            proxied: (_a = rec.proxied) !== null && _a !== void 0 ? _a : true,\n                        });\n                        break;\n                    case 'TXT':\n                        yield cf.dnsRecords.add(zoneId, {\n                            type: rec.type,\n                            name: rec.name,\n                            content,\n                            ttl: 1,\n                        });\n                        break;\n                    case 'MX':\n                        yield cf.dnsRecords.add(zoneId, {\n                            type: rec.type,\n                            name: rec.name,\n                            content: rec.mailServer,\n                            priority: (_b = rec.priority) !== null && _b !== void 0 ? _b : 10,\n                            ttl: 1,\n                        });\n                        break;\n                    case 'CNAME':\n                        yield cf.dnsRecords.add(zoneId, {\n                            type: rec.type,\n                            name: rec.name,\n                            content: rec.target,\n                            ttl: 1,\n                        });\n                        break;\n                    default:\n                        // absurd(rec)\n                        break;\n                }\n                console.log('✔ ', helpers_1.printConfigRecord(rec, ZONE));\n            }\n            catch (err) {\n                console.log('❌ ', helpers_1.printConfigRecord(rec, ZONE));\n                console.log(err);\n            }\n        }\n    })));\n    // make sure it errors out if something is missing\n    // add some tests for niceName, sameRec\n    // make typescript\n    // make sure to allow for DNS only or cached\n});\nmain();\n// make into a github action, And make this repo into a template with just a hjson and the github action and env setup\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    return inputs;\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n */\nfunction error(message) {\n    command_1.issue('error', message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n */\nfunction warning(message) {\n    command_1.issue('warning', message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issueCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst events_1 = require(\"events\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst promisify_1 = __importDefault(require(\"./promisify\"));\nconst debug = debug_1.default('agent-base');\nfunction isAgent(v) {\n    return Boolean(v) && typeof v.addRequest === 'function';\n}\nfunction isSecureEndpoint() {\n    const { stack } = new Error();\n    if (typeof stack !== 'string')\n        return false;\n    return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n}\nfunction createAgent(callback, opts) {\n    return new createAgent.Agent(callback, opts);\n}\n(function (createAgent) {\n    /**\n     * Base `http.Agent` implementation.\n     * No pooling/keep-alive is implemented by default.\n     *\n     * @param {Function} callback\n     * @api public\n     */\n    class Agent extends events_1.EventEmitter {\n        constructor(callback, _opts) {\n            super();\n            let opts = _opts;\n            if (typeof callback === 'function') {\n                this.callback = callback;\n            }\n            else if (callback) {\n                opts = callback;\n            }\n            // Timeout for the socket to be returned from the callback\n            this.timeout = null;\n            if (opts && typeof opts.timeout === 'number') {\n                this.timeout = opts.timeout;\n            }\n            // These aren't actually used by `agent-base`, but are required\n            // for the TypeScript definition files in `@types/node` :/\n            this.maxFreeSockets = 1;\n            this.maxSockets = 1;\n            this.maxTotalSockets = Infinity;\n            this.sockets = {};\n            this.freeSockets = {};\n            this.requests = {};\n            this.options = {};\n        }\n        get defaultPort() {\n            if (typeof this.explicitDefaultPort === 'number') {\n                return this.explicitDefaultPort;\n            }\n            return isSecureEndpoint() ? 443 : 80;\n        }\n        set defaultPort(v) {\n            this.explicitDefaultPort = v;\n        }\n        get protocol() {\n            if (typeof this.explicitProtocol === 'string') {\n                return this.explicitProtocol;\n            }\n            return isSecureEndpoint() ? 'https:' : 'http:';\n        }\n        set protocol(v) {\n            this.explicitProtocol = v;\n        }\n        callback(req, opts, fn) {\n            throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\n        }\n        /**\n         * Called by node-core's \"_http_client.js\" module when creating\n         * a new HTTP request with this Agent instance.\n         *\n         * @api public\n         */\n        addRequest(req, _opts) {\n            const opts = Object.assign({}, _opts);\n            if (typeof opts.secureEndpoint !== 'boolean') {\n                opts.secureEndpoint = isSecureEndpoint();\n            }\n            if (opts.host == null) {\n                opts.host = 'localhost';\n            }\n            if (opts.port == null) {\n                opts.port = opts.secureEndpoint ? 443 : 80;\n            }\n            if (opts.protocol == null) {\n                opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';\n            }\n            if (opts.host && opts.path) {\n                // If both a `host` and `path` are specified then it's most\n                // likely the result of a `url.parse()` call... we need to\n                // remove the `path` portion so that `net.connect()` doesn't\n                // attempt to open that as a unix socket file.\n                delete opts.path;\n            }\n            delete opts.agent;\n            delete opts.hostname;\n            delete opts._defaultAgent;\n            delete opts.defaultPort;\n            delete opts.createConnection;\n            // Hint to use \"Connection: close\"\n            // XXX: non-documented `http` module API :(\n            req._last = true;\n            req.shouldKeepAlive = false;\n            let timedOut = false;\n            let timeoutId = null;\n            const timeoutMs = opts.timeout || this.timeout;\n            const onerror = (err) => {\n                if (req._hadError)\n                    return;\n                req.emit('error', err);\n                // For Safety. Some additional errors might fire later on\n                // and we need to make sure we don't double-fire the error event.\n                req._hadError = true;\n            };\n            const ontimeout = () => {\n                timeoutId = null;\n                timedOut = true;\n                const err = new Error(`A \"socket\" was not created for HTTP request before ${timeoutMs}ms`);\n                err.code = 'ETIMEOUT';\n                onerror(err);\n            };\n            const callbackError = (err) => {\n                if (timedOut)\n                    return;\n                if (timeoutId !== null) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                }\n                onerror(err);\n            };\n            const onsocket = (socket) => {\n                if (timedOut)\n                    return;\n                if (timeoutId != null) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                }\n                if (isAgent(socket)) {\n                    // `socket` is actually an `http.Agent` instance, so\n                    // relinquish responsibility for this `req` to the Agent\n                    // from here on\n                    debug('Callback returned another Agent instance %o', socket.constructor.name);\n                    socket.addRequest(req, opts);\n                    return;\n                }\n                if (socket) {\n                    socket.once('free', () => {\n                        this.freeSocket(socket, opts);\n                    });\n                    req.onSocket(socket);\n                    return;\n                }\n                const err = new Error(`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``);\n                onerror(err);\n            };\n            if (typeof this.callback !== 'function') {\n                onerror(new Error('`callback` is not defined'));\n                return;\n            }\n            if (!this.promisifiedCallback) {\n                if (this.callback.length >= 3) {\n                    debug('Converting legacy callback function to promise');\n                    this.promisifiedCallback = promisify_1.default(this.callback);\n                }\n                else {\n                    this.promisifiedCallback = this.callback;\n                }\n            }\n            if (typeof timeoutMs === 'number' && timeoutMs > 0) {\n                timeoutId = setTimeout(ontimeout, timeoutMs);\n            }\n            if ('port' in opts && typeof opts.port !== 'number') {\n                opts.port = Number(opts.port);\n            }\n            try {\n                debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);\n                Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);\n            }\n            catch (err) {\n                Promise.reject(err).catch(callbackError);\n            }\n        }\n        freeSocket(socket, opts) {\n            debug('Freeing socket %o %o', socket.constructor.name, opts);\n            socket.destroy();\n        }\n        destroy() {\n            debug('Destroying agent %o', this.constructor.name);\n        }\n    }\n    createAgent.Agent = Agent;\n    // So that `instanceof` works correctly\n    createAgent.prototype = createAgent.Agent.prototype;\n})(createAgent || (createAgent = {}));\nmodule.exports = createAgent;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction promisify(fn) {\n    return function (req, opts) {\n        return new Promise((resolve, reject) => {\n            fn.call(this, req, opts, (err, rtn) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(rtn);\n                }\n            });\n        });\n    };\n}\nexports.default = promisify;\n//# sourceMappingURL=promisify.js.map","(function() {\n  var auto, copyProps, defProp, getDesc, mkAuto, named,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = auto = function(cons) {\n    return mkAuto(cons);\n  };\n\n  mkAuto = function(cons, name, copier) {\n    var cls, create;\n    if (name == null) {\n      name = cons.name;\n    }\n    if (copier == null) {\n      copier = copyProps;\n    }\n    if (/^class/.test(cons.toString())) {\n      cls = copier(cons, named(name, cons, function() {\n        var args, cc;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        if (this instanceof cls || !(cc = cls.prototype.__class_call__)) {\n          return new (cons.bind.apply(cons, [cons].concat(args)));\n        } else {\n          return cc.apply(cls.prototype, arguments);\n        }\n      }));\n    } else {\n      cls = copier(cons, named(name, cons, function() {\n        var cc, inst, ret;\n        if (this instanceof cls) {\n          return cons.apply(this, arguments);\n        } else if (cc = cls.prototype.__class_call__) {\n          return cc.apply(cls.prototype, arguments);\n        } else {\n          inst = new create();\n          ret = cons.apply(inst, arguments);\n          if (Object(ret) === ret) {\n            return ret;\n          } else {\n            return inst;\n          }\n        }\n      }));\n      (create = function() {}).prototype = cls.prototype;\n    }\n    return cls;\n  };\n\n  getDesc = Object.getOwnPropertyDescriptor;\n\n  defProp = Object.defineProperty;\n\n  copyProps = function(src, dst) {\n    var d, i, k, keys, len, ref, ref1, v;\n    keys = [].concat((ref1 = typeof Object.getOwnPropertyNames === \"function\" ? Object.getOwnPropertyNames(src) : void 0) != null ? ref1 : []).concat((ref = typeof Object.getOwnPropertySymbols === \"function\" ? Object.getOwnPropertySymbols(src) : void 0) != null ? ref : []);\n    if (keys.length && (getDesc != null) && (defProp != null)) {\n      for (i = 0, len = keys.length; i < len; i++) {\n        k = keys[i];\n        d = getDesc(dst, k);\n        if ((d != null ? d.configurable : void 0) === false) {\n          if (d.writable) {\n            dst[k] = src[k];\n          }\n          continue;\n        }\n        try {\n          defProp(dst, k, getDesc(src, k));\n        } catch (_error) {}\n      }\n    } else {\n      for (k in src) {\n        if (!hasProp.call(src, k)) continue;\n        v = src[k];\n        dst[k] = v;\n      }\n      dst.prototype = src.prototype;\n    }\n    if (dst.__proto__ !== src.__proto__) {\n      try {\n        dst.__proto__ = src.__proto__;\n      } catch (_error) {}\n    }\n    dst.prototype.constructor = dst;\n    return dst;\n  };\n\n  auto.subclass = function(name, base, props) {\n    if (typeof name === \"function\") {\n      props = base;\n      base = name;\n      name = base.name;\n    }\n    return mkAuto(base, name, function(src, dst) {\n      dst.prototype = Object.create(base.prototype, props);\n      dst.prototype.constructor = dst;\n      dst.__proto__ = src;\n      return dst;\n    });\n  };\n\n  named = function(name, src, dst) {\n    var args, body, i, j, len, prop, ref, ref1, results;\n    src = {\n      name: name,\n      length: src.length\n    };\n    ref = ['name', 'length'];\n    for (i = 0, len = ref.length; i < len; i++) {\n      prop = ref[i];\n      if (dst[prop] !== src[prop]) {\n        try {\n          dst[prop] = src[prop];\n        } catch (_error) {}\n      }\n      if (dst[prop] !== src[prop]) {\n        try {\n          Object.defineProperty(dst, prop, {\n            value: src[prop]\n          });\n        } catch (_error) {}\n      }\n    }\n    if (dst.name !== name || dst.length !== src.length) {\n      args = \"\";\n      if (src.length) {\n        args = \"arg\" + (function() {\n          results = [];\n          for (var j = 1, ref1 = src.length; 1 <= ref1 ? j <= ref1 : j >= ref1; 1 <= ref1 ? j++ : j--){ results.push(j); }\n          return results;\n        }).apply(this).join(', arg');\n      }\n      try {\n        dst = new Function('$$' + name, body = (\"return function NAME(\" + args + \") {\\n    return $$NAME.apply(this, arguments);\\n}\").replace(/NAME/g, name))(dst);\n      } catch (_error) {}\n    }\n    return dst;\n  };\n\n}).call(this);\n","'use strict';\n\nmodule.exports = Error.captureStackTrace || function (error) {\n\tvar container = new Error();\n\n\tObject.defineProperty(error, 'stack', {\n\t\tconfigurable: true,\n\t\tget: function getStack() {\n\t\t\tvar stack = container.stack;\n\n\t\t\tObject.defineProperty(this, 'stack', {\n\t\t\t\tvalue: stack\n\t\t\t});\n\n\t\t\treturn stack;\n\t\t}\n\t});\n};\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Client = require('./lib/Client');\nconst proxy = require('./lib/proxy');\n\n/* eslint-disable global-require */\nconst resources = {\n  dnsRecords: require('./lib/resources/DNSRecords'),\n  enterpriseZoneWorkersScripts: require('./lib/resources/EnterpriseZoneWorkersScripts'),\n  enterpriseZoneWorkersRoutes: require('./lib/resources/EnterpriseZoneWorkersRoutes'),\n  enterpriseZoneWorkersKVNamespaces: require('./lib/resources/EnterpriseZoneWorkersKVNamespaces'),\n  enterpriseZoneWorkersKV: require('./lib/resources/EnterpriseZoneWorkersKV'),\n  ips: require('./lib/resources/IPs'),\n  zones: require('./lib/resources/Zones'),\n  zoneSettings: require('./lib/resources/ZoneSettings'),\n  zoneCustomHostNames: require('./lib/resources/ZoneCustomHostNames'),\n  zoneWorkers: require('./lib/resources/ZoneWorkers'),\n  zoneWorkersScript: require('./lib/resources/ZoneWorkersScript'),\n  zoneWorkersRoutes: require('./lib/resources/ZoneWorkersRoutes'),\n  user: require('./lib/resources/User'),\n};\n/* eslint-enable global-require */\n\n/**\n * withEnvProxy configures an HTTPS proxy if required to reach the Cloudflare API.\n *\n * @private\n * @param {Object} opts - The current Cloudflare options\n */\nconst withEnvProxy = function withEnvProxy(opts) {\n  /* eslint-disable no-process-env */\n  const httpsProxy = process.env.HTTPS_PROXY || process.env.https_proxy;\n  const noProxy = process.env.NO_PROXY || process.env.no_proxy;\n  /* eslint-enable no-process-env */\n\n  if (httpsProxy) {\n    const agent = proxy.proxyAgent(\n      httpsProxy,\n      noProxy,\n      'https://api.cloudflare.com'\n    );\n\n    if (agent) {\n      opts.agent = agent;\n    }\n  }\n};\n\n/**\n * Constructs and returns a new Cloudflare API client with the specified authentication.\n *\n * @class Cloudflare\n * @param {Object} auth - The API authentication for an account\n * @param {string} auth.email - The account email address\n * @param {string} auth.key - The account API key\n * @param {string} auth.token - The account API token\n *\n * @property {DNSRecords} dnsRecords - DNS Records instance\n * @property {IPs} ips - IPs instance\n * @property {Zones} zones - Zones instance\n * @property {ZoneSettings} zoneSettings - Zone Settings instance\n * @property {ZoneCustomHostNames} zoneCustomHostNames - Zone Custom Host Names instance\n * @property {User} user - User instance\n */\nconst Cloudflare = auto(\n  prototypal({\n    constructor: function constructor(auth) {\n      const opts = {\n        email: auth && auth.email,\n        key: auth && auth.key,\n        token: auth && auth.token,\n      };\n\n      withEnvProxy(opts);\n\n      const client = new Client(opts);\n\n      Object.defineProperty(this, '_client', {\n        value: client,\n        writable: false,\n        enumerable: false,\n        configurable: false,\n      });\n\n      Object.keys(resources).forEach(function(resource) {\n        Object.defineProperty(this, resource, {\n          value: resources[resource](this._client), // eslint-disable-line security/detect-object-injection\n          writable: true,\n          enumerable: false,\n          configurable: true,\n        });\n      }, this);\n    },\n  })\n);\n\nmodule.exports = Cloudflare;\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst pkg = require('../package.json');\nconst Getter = require('./Getter');\n\nconst USER_AGENT = JSON.stringify({\n  bindings_version: pkg.version, // eslint-disable-line camelcase\n  lang: 'node',\n  lang_version: process.version, // eslint-disable-line camelcase\n  platform: process.platform,\n  arch: process.arch,\n  publisher: 'cloudflare',\n});\n\nconst isPlainObject = function isPlainObject(x) {\n  const prototype = Object.getPrototypeOf(x);\n  const toString = Object.prototype.toString;\n\n  return (\n    toString.call(x) === '[object Object]' &&\n    (prototype === null || prototype === Object.getPrototypeOf({}))\n  );\n};\n\nconst isUserServiceKey = function isUserServiceKey(x) {\n  return x && x.substring(0, 5) === 'v1.0-';\n};\n\nmodule.exports = prototypal({\n  constructor: function constructor(options) {\n    this.email = options.email;\n    this.key = options.key;\n    this.token = options.token;\n    this.getter = new Getter(options);\n  },\n  request(requestMethod, requestPath, data, opts) {\n    const uri = `https://api.cloudflare.com/client/v4/${requestPath}`;\n    const key = opts.auth.key || this.key;\n    const token = opts.auth.token || this.token;\n    const email = opts.auth.email || this.email;\n\n    const options = {\n      json: opts.json !== false,\n      timeout: opts.timeout || 1e4,\n      retries: opts.retries,\n      method: requestMethod,\n      headers: {\n        'user-agent': `cloudflare/${pkg.version} node/${process.versions.node}`,\n        'Content-Type': opts.contentType || 'application/json',\n        Accept: 'application/json',\n        'X-Cloudflare-Client-User-Agent': USER_AGENT,\n      },\n    };\n\n    if (isUserServiceKey(key)) {\n      options.headers['X-Auth-User-Service-Key'] = key;\n    } else if (key) {\n      options.headers['X-Auth-Key'] = key;\n      options.headers['X-Auth-Email'] = email;\n    } else if (token) {\n      options.headers.Authorization = `Bearer ${token}`;\n    }\n\n    if (requestMethod === 'GET') {\n      options.query = data;\n    } else {\n      options.body = data;\n    }\n\n    if (\n      options.body &&\n      (isPlainObject(options.body) || Array.isArray(options.body))\n    ) {\n      options.body = JSON.stringify(options.body);\n    }\n\n    return this.getter.got(uri, options).then(res => res.body);\n  },\n});\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst assign = require('object-assign');\nconst got = require('got');\n\nmodule.exports = prototypal({\n  constructor: function constructor(options) {\n    this._agent = options.agent;\n  },\n  got(uri, options) {\n    options = assign({}, options);\n    options.agent = this._agent;\n\n    return got(uri, options);\n  },\n});\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst method = require('./method');\n\nconst BASIC_METHODS = {\n  browse: method({\n    method: 'GET',\n  }),\n  read: method({\n    method: 'GET',\n    path: ':id',\n  }),\n  edit: method({\n    method: 'PATCH',\n    path: ':id',\n  }),\n  add: method({\n    method: 'POST',\n  }),\n  del: method({\n    method: 'DELETE',\n    path: ':id',\n  }),\n};\n\n/**\n * Resource generates basic methods defined on subclasses. It is not intended to\n * be constructed directly.\n *\n * @class Resource\n * @private\n */\nmodule.exports = prototypal(\n  /** @lends Resource.prototype */\n  {\n    constructor: function constructor(client) {\n      Object.defineProperty(this, '_client', {\n        value: client,\n        writable: false,\n        enumerable: false,\n        configurable: false,\n      });\n\n      if (Array.isArray(this.includeBasic)) {\n        this.includeBasic.forEach(function(basicMethod) {\n          Object.defineProperty(this, basicMethod, {\n            value: BASIC_METHODS[basicMethod], // eslint-disable-line security/detect-object-injection\n            writable: true,\n            enumberable: false,\n            configurable: true,\n          });\n        }, this);\n      }\n    },\n    /**\n     * @param {string} methodPath - The path from the {@link method} that should be\n     *        joined with the resource's path.\n     */\n    createFullPath(methodPath) {\n      return (methodPath && [this.path, methodPath].join('/')) || this.path;\n    },\n    path: '',\n    hasBrokenPatch: false,\n  }\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst URLPattern = require('url-pattern');\n\nconst options = ['key', 'email', 'token'];\n\nconst isPlainObject = function isPlainObject(x) {\n  const prototype = Object.getPrototypeOf(x);\n  const toString = Object.prototype.toString;\n\n  return (\n    toString.call(x) === '[object Object]' &&\n    (prototype === null || prototype === Object.getPrototypeOf({}))\n  );\n};\n\nconst isOptionsHash = function isOptionsHash(obj) {\n  const hasProp = function(acc, option) {\n    if (acc) {\n      return acc;\n    }\n\n    return Object.prototype.hasOwnProperty.call(obj, option);\n  };\n\n  return isPlainObject(obj) && options.reduce(hasProp, false);\n};\n\nconst getDataFromArgs = function getDataFromArgs(args) {\n  if (args.length > 0) {\n    if (!isOptionsHash(args[0])) {\n      return args.shift();\n    }\n  }\n\n  return {};\n};\n\nconst getOptionsFromArgs = function getOptionsFromArgs(args) {\n  const opts = {\n    auth: {},\n    headers: {},\n  };\n\n  if (args.length > 0) {\n    const arg = args[args.length - 1];\n\n    if (isOptionsHash(arg)) {\n      const params = args.pop();\n\n      if (params.key) {\n        opts.auth.key = params.key;\n      }\n\n      if (params.email) {\n        opts.auth.email = params.email;\n      }\n    }\n  }\n\n  return opts;\n};\n\nconst identity = function identity(x) {\n  return x;\n};\n\nmodule.exports = function(spec) {\n  const requestMethod = (spec.method || 'GET').toUpperCase();\n  const encode = spec.encode || identity;\n  const json = spec.json !== false;\n  const contentType = spec.contentType || 'application/json';\n\n  return function() {\n    const fullPath = this.createFullPath(spec.path);\n    const urlPattern = new URLPattern(fullPath);\n    const urlParams = urlPattern.names;\n    let err;\n    const args = Array.prototype.slice.call(arguments);\n    const urlData = {};\n\n    for (let i = 0, length = urlParams.length; i < length; i++) {\n      const arg = args[0];\n\n      const param = urlParams[i]; // eslint-disable-line security/detect-object-injection\n\n      if (!arg) {\n        /* eslint-disable security/detect-object-injection */\n        err = new Error(\n          `Cloudflare: Argument \"${\n            urlParams[i]\n          }\" required, but got: ${arg} (on API request to ${requestMethod} ${fullPath})`\n        );\n        /* eslint-enable security/detect-object-injection */\n\n        return Promise.reject(err);\n      }\n\n      urlData[param] = args.shift(); // eslint-disable-line security/detect-object-injection\n    }\n\n    const data = encode(getDataFromArgs(args));\n    const opts = getOptionsFromArgs(args);\n\n    opts.json = json;\n    opts.contentType = contentType;\n\n    if (args.length !== 0) {\n      err = new Error(\n        `Cloudflare: Unknown arguments (${args}). Did you mean to pass an options object? (on API request to ${requestMethod} ${fullPath})`\n      );\n\n      return Promise.reject(err);\n    }\n\n    const requestPath = urlPattern.stringify(urlData);\n\n    if (requestMethod !== 'PATCH' || !this.hasBrokenPatch) {\n      return this._client.request(requestMethod, requestPath, data, opts);\n    }\n\n    const patched = Object.keys(data);\n\n    const sendPatch = function sendPatch() {\n      const patch = patched.pop();\n      const datum = {};\n\n      datum[patch] = data[patch]; // eslint-disable-line security/detect-object-injection\n\n      // noinspection JSPotentiallyInvalidUsageOfThis\n      return this._client\n        .request(requestMethod, requestPath, datum, opts)\n        .then(response => {\n          if (patched.length > 0) {\n            return sendPatch.call(this);\n          }\n\n          return response;\n        });\n    };\n\n    return sendPatch.call(this);\n  };\n};\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst shouldProxy = require('should-proxy');\nconst HttpsProxyAgent = require('https-proxy-agent');\n\n/**\n * proxyAgent returns an HTTPS agent to use to access the base URL.\n *\n * @private\n * @param {string} httpsProxy - HTTPS Proxy URL\n * @param {string} noProxy - URLs that should be excluded from proxying\n * @param {string} base - The client base URL\n * @returns {https.Agent|null} - The HTTPS agent, if required to access the base URL.\n */\nconst proxyAgent = function proxyAgent(httpsProxy, noProxy, base) {\n  if (!httpsProxy) {\n    return null;\n  }\n  noProxy = noProxy || '';\n\n  const ok = shouldProxy(base, {\n    no_proxy: noProxy, // eslint-disable-line camelcase\n  });\n\n  if (!ok) {\n    return null;\n  }\n\n  return new HttpsProxyAgent(httpsProxy);\n};\n\nmodule.exports.proxyAgent = proxyAgent;\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\nconst method = require('../method');\n\n/**\n * DNSRecords represents the /zones/:zoneID/dns_records API endpoint.\n *\n * @class DNSRecords\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'zones/:zoneId/dns_records',\n\n    includeBasic: ['browse', 'read', 'add', 'del'],\n\n    /**\n     * edit allows for modification of the specified DNS Record\n     *\n     * @function edit\n     * @memberof DNSRecords\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {string} id - The DNS record ID being modified\n     * @param {Object} record - The modified dns record object\n     * @returns {Promise<Object>} The DNS record object.\n     */\n    edit: method({\n      method: 'PUT',\n      path: ':id',\n    }),\n\n    /**\n     * export retrieves all of a zone's DNS Records in BIND configuration format.\n     *\n     * @function export\n     * @memberof DNSRecords\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @returns {Promise<Object>} The DNS browser response object.\n     */\n    export: method({\n      method: 'GET',\n      path: 'export',\n      json: false,\n    }),\n\n    /**\n     * browse allows for listing all DNS Records for a zone\n     *\n     * @function browse\n     * @memberof DNSRecords\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @returns {Promise<Object>} The DNS browser response object.\n     */\n    /**\n     * read allows for retrieving the specified DNS Record\n     *\n     * @function read\n     * @memberof DNSRecords\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {string} id - The DNS record ID\n     * @returns {Promise<Object>} The DNS record object.\n     */\n    /**\n     * add allows for creating a new DNS record for a zone.\n     *\n     * @function add\n     * @memberof DNSRecords\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {Object} record - The new DNS record object\n     * @returns {Promise<Object>} The created DNS record object.\n     */\n    /**\n     * del allows for deleting the specified DNS Record\n     *\n     * @function del\n     * @memberof DNSRecords\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {string} id - The DNS record ID to delete\n     * @returns {Promise<Object>} The deleted DNS record object.\n     */\n  })\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\nconst method = require('../method');\n\n/**\n * EnterpriseZoneWorkersKV represents the accounts/:accountId/storage/kv/namespaces API endpoint.\n *\n * @class EnterpriseZoneWorkersKV\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'accounts/:accountId/storage/kv/namespaces/:namespaceId',\n\n    /**\n     * browse allows for listing all the keys of a namespace\n     *\n     * @function browse\n     * @memberof EnterpriseZoneWorkersKV\n     * @instance\n     * @async\n     * @param {string} account_id - The account ID\n     * @param {string} namespace_id - The namespace ID\n     * @returns {Promise<Object>} The KV response object.\n     */\n    browse: method({\n      method: 'GET',\n      path: 'keys',\n    }),\n    /**\n     * add allows for creating a key-value pair in a namespace\n     *\n     * @function add\n     * @memberof EnterpriseZoneWorkersKV\n     * @instance\n     * @async\n     * @param {string} account_id - The account ID\n     * @param {string} namespace_id - The namespace ID\n     * @param {string} value - The value to store\n     * @returns {Promise<Object>} The KV response object\n     */\n    add: method({\n      method: 'PUT',\n      path: 'values/:id',\n    }),\n    /**\n     * read allows for reading the contents of key in a namespace\n     *\n     * @function read\n     * @memberof EnterpriseZoneWorkersKV\n     * @instance\n     * @async\n     * @param {string} account_id - The account ID\n     * @param {string} namespace_id - The namespace ID\n     * @param {string} key_name - The key name\n     * @returns {Promise<Object>} The KV response object\n     */\n    read: method({\n      method: 'GET',\n      path: 'values/:id',\n      json: false,\n      contentType: 'text/plain',\n    }),\n    /**\n     * del allows for deleting a key and its contents in a namespace\n     *\n     * @function del\n     * @memberof EnterpriseZoneWorkersKV\n     * @instance\n     * @async\n     * @param {string} account_id - The account ID\n     * @param {string} namespace_id - The namespace ID\n     * @param {string} key_name - The key name\n     * @returns {Promise<Object>} The KV response object\n     */\n    del: method({\n      method: 'DELETE',\n      path: 'values/:id',\n    }),\n    /**\n     * addMulti allows for creating multiple key-value pairs in a namespace\n     *\n     * @function addMulti\n     * @memberof EnterpriseZoneWorkersKV\n     * @instance\n     * @async\n     * @param {string} account_id - The account ID\n     * @param {string} namespace_id - The namespace ID\n     * @param {Array<Object>} data - An array containing key-vaue pair Objects to add\n     * @returns {Promise<Object>} The KV response object\n     */\n    addMulti: method({\n      method: 'PUT',\n      path: 'bulk',\n    }),\n    /**\n     * delMulti allows for deleting multiple key-value pairs in a namespace\n     *\n     * @function delMulti\n     * @memberof EnterpriseZoneWorkersKV\n     * @instance\n     * @async\n     * @param {string} account_id - The account ID\n     * @param {string} namespace_id - The namespace ID\n     * @param {Array<String>} data - The array with keys to delete\n     * @returns {Promise<Object>} The KV response object\n     */\n    delMulti: method({\n      method: 'DELETE',\n      path: 'bulk',\n    }),\n  })\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\nconst method = require('../method');\n\n/**\n * EnterpriseZoneWorkersKVNamespaces represents the accounts/:accountId/storage/kv/namespaces API endpoint.\n *\n * @class EnterpriseZoneWorkersKVNamespaces\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'accounts/:accountId/storage/kv/namespaces',\n\n    includeBasic: ['browse', 'add', 'del'],\n\n    /**\n     * browse allows for listing all of a zone's workers namespaces\n     *\n     * @function browse\n     * @memberof EnterpriseZoneWorkersKVNamespaces\n     * @instance\n     * @async\n     * @param {string} account_id - The account ID\n     * @returns {Promise<Object>} The namespace response object.\n     */\n    /**\n     * add allows for creating a workers namespace\n     *\n     * @function add\n     * @memberof EnterpriseZoneWorkersKVNamespaces\n     * @instance\n     * @async\n     * @param {string} account_id - The account ID\n     * @param {Object} config - The namespace object\n     * @returns {Promise<Object>} The namespace response object.\n     */\n    /**\n     * del allows for deleting a workers namespace\n     *\n     * @function del\n     * @memberof EnterpriseZoneWorkersKVNamespaces\n     * @instance\n     * @async\n     * @param {string} account_id - The account ID\n     * @param {string} id - The namespace id\n     * @returns {Promise<Object>} The namespace response object.\n     */\n    /**\n     * edit allows for renaming a workers namespace\n     *\n     * @function edit\n     * @memberof EnterpriseZoneWorkersKVNamespaces\n     * @instance\n     * @async\n     * @param {string} account_id - The account ID\n     * @param {string} id - The namespace id\n     * @param {Object} config - The namespace object\n     * @returns {Promise<Object>} The namespace response object.\n     */\n    edit: method({\n      method: 'PUT',\n      path: ':id',\n    }),\n  })\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\nconst method = require('../method');\n\n/**\n * EnterpriseZoneWorkersRoutes represents the zones/:zoneId/workers/routes API endpoint.\n *\n * @class EnterpriseZoneWorkersRoutes\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'zones/:zoneId/workers/routes',\n\n    includeBasic: ['browse', 'read', 'add', 'del'],\n\n    /**\n     * browse allows for listing all of a zone's workers routes\n     *\n     * @function browse\n     * @memberof EnterpriseZoneWorkersRoutes\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @returns {Promise<Object>} The route browse response object.\n     */\n    /**\n     * read allows for retrieving a specific zone's workers route\n     *\n     * @function read\n     * @memberof EnterpriseZoneWorkersRoutes\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {string} id - The route ID\n     * @returns {Promise<Object>} The route response object.\n     */\n    /**\n     * edit allows for modifying a specific zone's workers\n     *\n     * @function edit\n     * @memberof EnterpriseZoneWorkersRoutes\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {string} id - The route ID\n     * @param {Object} config - The modified route object\n     * @returns {Promise<Object>} The custom hostname response object.\n     */\n    edit: method({\n      method: 'PUT',\n      path: ':id',\n    }),\n    /**\n     * add allows for creating a workers route\n     *\n     * @function add\n     * @memberof EnterpriseZoneWorkersRoutes\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {Object} config - The new route object\n     * @returns {Promise<Object>} The custom route response object.\n     */\n    /**\n     * del allows for removing a workers routes\n     *\n     * @function del\n     * @memberof EnterpriseZoneWorkersRoutes\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {string} id - The route ID to delete\n     * @returns {Promise<Object>} The custom route response object.\n     */\n  })\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\nconst method = require('../method');\n\n/**\n * EnterpriseZoneWorkersScripts represents the accounts/:accountId/workers/scripts API endpoint.\n *\n * @class EnterpriseZoneWorkersScripts\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'accounts/:accountId/workers/scripts',\n\n    includeBasic: ['browse', 'del'],\n\n    /**\n     * read retrieves a single workers script\n     *\n     * @function read\n     * @memberof EnterpriseZoneWorkersScripts\n     * @instance\n     * @async\n     * @param {string} account_id - The enterprise account ID\n     * @param {string} name - The script name\n     * @returns {Promise<Object>} The workers script response object.\n     */\n    read: method({\n      method: 'GET',\n      path: ':name',\n      json: false,\n    }),\n\n    /**\n     * edit uploads a new version of a workers script\n     *\n     * @function edit\n     * @memberof EnterpriseZoneWorkersScripts\n     * @instance\n     * @async\n     * @param {string} account_id - The enterprise account ID\n     * @param {string} name - The script name\n     * @param {string} script - The script\n     * @returns {Promise<Object>} The response object\n     */\n    edit: method({\n      method: 'PUT',\n      path: ':name',\n      contentType: 'application/javascript',\n    }),\n\n    /**\n     * browse allows for listing all the workers scripts\n     *\n     * @function browse\n     * @memberof EnterpriseZoneWorkersScripts\n     * @instance\n     * @async\n     * @param {string} account_id - The enterprise account ID\n     * @param {string} name - The script name\n     * @returns {Promise<Object>} The zone workers script response object.\n     */\n    /**\n     * del allows for deleting the specified workers script\n     *\n     * @function del\n     * @memberof EnterpriseZoneWorkersScripts\n     * @instance\n     * @async\n     * @param {string} account_id - The enterprise account ID\n     * @param {string} name - The script name\n     * @returns {Promise<Object>} The deleted zone workers script response object.\n     */\n  })\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\n\n/**\n * IPs represents the /ips API endpoint.\n *\n * @class IPs\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'ips',\n\n    includeBasic: ['browse'],\n\n    /**\n     * browse returns a Promise of the current Cloudflare IPv4 and IPv6 addresses.\n     *\n     * @function browse\n     * @memberof IPs\n     * @instance\n     * @async\n     * @returns {Promise<Object>} The IPv4 and IPv6 addresses\n     * @example\n     * // logs the fetched IP addresses\n     * cf.ips.browse(console.log)\n     */\n  })\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\nconst method = require('../method');\n\n/**\n * User represents the /user API endpoint.\n *\n * @class User\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'user',\n\n    /**\n     * read returns the current user object\n     *\n     * @function read\n     * @memberof User\n     * @instance\n     * @async\n     * @returns {Promise<Object>} The user object\n     */\n    read: method({\n      method: 'GET',\n    }),\n\n    /**\n     * edit allows for modification of the current user\n     *\n     * @function edit\n     * @memberof User\n     * @instance\n     * @async\n     * @param {Object} user - The modified user object\n     * @returns {Promise<Object>} The user object\n     */\n    edit: method({\n      method: 'PATCH',\n    }),\n  })\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\n\n/**\n * ZoneCustomHostNames represents the /zones/:zoneID/custom_hostnames API endpoint.\n *\n * @class ZoneCustomHostNames\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'zones/:zoneId/custom_hostnames',\n\n    includeBasic: ['browse', 'read', 'edit', 'add', 'del'],\n\n    /**\n     * browse allows for listing all of a zone's custom hostanames\n     *\n     * @function browse\n     * @memberof ZoneCustomHostNames\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @returns {Promise<Object>} The custom hostname browse response object.\n     */\n    /**\n     * read allows for retrieving a specific custom hostname\n     *\n     * @function read\n     * @memberof ZoneCustomHostNames\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {string} id - The custom hostname ID\n     * @returns {Promise<Object>} The custom hostname response object.\n     */\n    /**\n     * edit allows for modifying a specific zone\n     *\n     * @function edit\n     * @memberof ZoneCustomHostNames\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {string} id - The custom hostname ID\n     * @param {Object} config - The modified custom hostname object\n     * @returns {Promise<Object>} The custom hostname response object.\n     */\n    /**\n     * add allows for creating a new zone\n     *\n     * @function add\n     * @memberof ZoneCustomHostNames\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {Object} config - The new custom hostname object\n     * @returns {Promise<Object>} The custom hostname response object.\n     */\n    /**\n     * del allows for removing a new zone\n     *\n     * @function del\n     * @memberof ZoneCustomHostNames\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {string} id - The custom hostname ID to delete\n     * @returns {Promise<Object>} The custom hostname response object.\n     */\n  })\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\nconst method = require('../method');\n\n/**\n * ZoneSettings represents the /zones/:zoneID/settings API endpoint.\n *\n * @class ZoneSettings\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'zones/:zoneId/settings',\n\n    includeBasic: ['browse', 'read', 'edit'],\n\n    /**\n     * editAll allows for editing of all the zone settings at once\n     *\n     * @function editAll\n     * @memberof ZoneSettings\n     * @instance\n     * @async\n     * @param {string} id - The zone ID\n     * @param {Object} settings - The modified zone settings\n     * @returns {Promise<Object>} The response object\n     */\n    editAll: method({\n      method: 'PATCH',\n    }),\n\n    /**\n     * browse allows for listing all the zone settings\n     *\n     * @function browse\n     * @memberof ZoneSettings\n     * @instance\n     * @async\n     * @param {string} id - The zone ID\n     * @returns {Promise<Object>} The zone settings response object.\n     */\n    /**\n     * read retrieves a single zone setting\n     *\n     * @function read\n     * @memberof ZoneSettings\n     * @instance\n     * @async\n     * @param {string} id - The zone ID\n     * @param {string} setting = The setting name\n     * @returns {Promise<Object>} The zone settings response object.\n     */\n    /**\n     * edit modifies a single zone setting\n     *\n     * @function edit\n     * @memberof ZoneSettings\n     * @instance\n     * @async\n     * @param {string} id - The zone ID\n     * @param {string} setting = The setting name\n     * @param {string|Object} value - The new zone setting\n     * @returns {Promise<Object>} The zone settings response object.\n     */\n  })\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\nconst method = require('../method');\n\n/**\n * ZoneWorkers represents the /zones/:zoneId/workers API endpoint.\n *\n * @class ZoneWorkers\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'zones/:zoneId/workers',\n\n    /**\n     * validate allows for validating a workers script\n     *\n     * @function validate\n     * @memberof ZoneWorkers\n     * @instance\n     * @async\n     * @param {string} zoneId - The zone ID\n     * @param {string} script - The worker script\n     * @returns {Promise<Object>} The validate response object.\n     */\n    validate: method({\n      method: 'PUT',\n      path: 'validate',\n      contentType: 'application/javascript',\n    }),\n  })\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\nconst method = require('../method');\n\n/**\n * ZoneWorkersRoutes represents the zones/:zoneId/workers/filters API endpoint.\n *\n * @class ZoneWorkersRoutes\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'zones/:zoneId/workers/filters',\n\n    includeBasic: ['browse', 'read', 'add', 'del'],\n\n    /**\n     * edit allows for modifying a specific zone's workers route\n     *\n     * @function edit\n     * @memberof ZoneWorkersRoutes\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {string} id - The route ID\n     * @param {Object} config - The modified route object\n     * @returns {Promise<Object>} The custom hostname response object.\n     */\n    edit: method({\n      method: 'PUT',\n      path: ':id',\n    }),\n\n    /**\n     * browse allows for listing all of a zone's workers routes\n     *\n     * @function browse\n     * @memberof ZoneWorkersRoutes\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @returns {Promise<Object>} The route browse response object.\n     */\n    /**\n     * read allows for retrieving a specific zone's workers route\n     *\n     * @function read\n     * @memberof ZoneWorkersRoutes\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {string} id - The route ID\n     * @returns {Promise<Object>} The route response object.\n     */\n    /**\n     * add allows for creating a workers route\n     *\n     * @function add\n     * @memberof ZoneWorkersRoutes\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {Object} config - The new route object\n     * @returns {Promise<Object>} The custom route response object.\n     */\n    /**\n     * del allows for removing a workers route\n     *\n     * @function del\n     * @memberof ZoneWorkersRoutes\n     * @instance\n     * @async\n     * @param {string} zone_id - The zone ID\n     * @param {string} id - The route ID to delete\n     * @returns {Promise<Object>} The custom route response object.\n     */\n  })\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\nconst method = require('../method');\n\n/**\n * ZoneWorkersScript represents the /zones/:zoneID/workers/script API endpoint.\n *\n * @class ZoneWorkersScript\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'zones/:zoneId/workers/script',\n\n    /**\n     * read retrieves a the current workers script\n     *\n     * @function read\n     * @memberof ZoneWorkersScript\n     * @instance\n     * @async\n     * @param {string} zone_id - The enterprise account ID\n     * @returns {Promise<Object>} The workers script response object.\n     */\n    read: method({\n      method: 'GET',\n      json: false,\n    }),\n\n    /**\n     * read retrieves a the current workers script\n     *\n     * @function read\n     * @memberof ZoneWorkersScript\n     * @instance\n     * @async\n     * @param {string} zone_id - The enterprise account ID\n     * @param {string} script - The script\n     * @returns {Promise<Object>} The workers script response object.\n     */\n    edit: method({\n      method: 'PUT',\n      contentType: 'application/javascript',\n    }),\n\n    /**\n     * del allows for deleting the workers script\n     *\n     * @function del\n     * @memberof ZoneWorkersScript\n     * @instance\n     * @async\n     * @returns {Promise<Object>} The deleted zone workers script response object.\n     */\n    del: method({\n      method: 'DELETE',\n    }),\n  })\n);\n","/*\n * Copyright (C) 2014-present Cloudflare, Inc.\n\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n'use strict';\n\nconst prototypal = require('es-class');\nconst auto = require('autocreate');\n\nconst Resource = require('../Resource');\nconst method = require('../method');\n\n/**\n * Zones represents the /zones API endpoint.\n *\n * @class Zones\n * @hideconstructor\n * @extends Resource\n */\nmodule.exports = auto(\n  prototypal({\n    extends: Resource,\n    path: 'zones',\n    hasBrokenPatch: true,\n\n    includeBasic: ['browse', 'read', 'edit', 'add', 'del'],\n\n    /**\n     * activationCheck initiates another zone activation check\n     *\n     * @function activationCheck\n     * @memberof Zones\n     * @instance\n     * @async\n     * @param {string} id - The zone ID\n     * @returns {Promise<Object>} The response object\n     */\n    activationCheck: method({\n      method: 'PUT',\n      path: ':id/activation_check',\n    }),\n\n    /**\n     * purgeCache purges files from Cloudflare's cache\n     *\n     * @function purgeCache\n     * @memberof Zones\n     * @instance\n     * @async\n     * @param {string} id - The zone ID\n     * @param {Object} [params] - Parameters to restrict purges\n     * @param {string[]|Object[]} [params.files] - Files to purge from the Cloudflare cache\n     * @param {string[]} [params.tags] - Purge files served with these Cache-Tag headers\n     * @param {string[]} [params.hosts] - Purge files that match these hosts\n     * @returns {Promise<Object>} The response object\n     */\n    purgeCache: method({\n      method: 'DELETE',\n      path: ':id/purge_cache',\n    }),\n\n    /**\n     * browse allows for listing all the zones\n     *\n     * @function browse\n     * @memberof Zones\n     * @instance\n     * @async\n     * @returns {Promise<Object>} The zone browse response object.\n     */\n    /**\n     * read allows for retrieving a specific zone\n     *\n     * @function read\n     * @memberof Zones\n     * @instance\n     * @async\n     * @param {string} id - The zone ID\n     * @returns {Promise<Object>} The zone response object.\n     */\n    /**\n     * edit allows for modifying a specific zone\n     *\n     * @function edit\n     * @memberof Zones\n     * @instance\n     * @async\n     * @param {string} id - The zone ID\n     * @param {Object} zone - The modified zone object\n     * @returns {Promise<Object>} The zone response object.\n     */\n    /**\n     * add allows for creating a new zone\n     *\n     * @function add\n     * @memberof Zones\n     * @instance\n     * @async\n     * @param {Object} zone - The new zone object\n     * @returns {Promise<Object>} The zone response object.\n     */\n    /**\n     * del allows for removing a new zone\n     *\n     * @function del\n     * @memberof Zones\n     * @instance\n     * @async\n     * @param {string} id - The zone ID to delete\n     * @returns {Promise<Object>} The zone response object.\n     */\n  })\n);\n","'use strict';\nvar captureStackTrace = require('capture-stack-trace');\n\nfunction inherits(ctor, superCtor) {\n\tctor.super_ = superCtor;\n\tctor.prototype = Object.create(superCtor.prototype, {\n\t\tconstructor: {\n\t\t\tvalue: ctor,\n\t\t\tenumerable: false,\n\t\t\twritable: true,\n\t\t\tconfigurable: true\n\t\t}\n\t});\n}\n\nmodule.exports = function createErrorClass(className, setup) {\n\tif (typeof className !== 'string') {\n\t\tthrow new TypeError('Expected className to be a string');\n\t}\n\n\tif (/[^0-9a-zA-Z_$]/.test(className)) {\n\t\tthrow new Error('className contains invalid characters');\n\t}\n\n\tsetup = setup || function (message) {\n\t\tthis.message = message;\n\t};\n\n\tvar ErrorClass = function () {\n\t\tObject.defineProperty(this, 'name', {\n\t\t\tconfigurable: true,\n\t\t\tvalue: className,\n\t\t\twritable: true\n\t\t});\n\n\t\tcaptureStackTrace(this, this.constructor);\n\n\t\tsetup.apply(this, arguments);\n\t};\n\n\tinherits(ErrorClass, Error);\n\n\treturn ErrorClass;\n};\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\r\\n|\\n|\\r/\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINES_MATCH).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\nfunction resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n","\"use strict\";\n\nvar stream = require(\"stream\");\n\nfunction DuplexWrapper(options, writable, readable) {\n  if (typeof readable === \"undefined\") {\n    readable = writable;\n    writable = options;\n    options = null;\n  }\n\n  stream.Duplex.call(this, options);\n\n  if (typeof readable.read !== \"function\") {\n    readable = (new stream.Readable(options)).wrap(readable);\n  }\n\n  this._writable = writable;\n  this._readable = readable;\n  this._waiting = false;\n\n  var self = this;\n\n  writable.once(\"finish\", function() {\n    self.end();\n  });\n\n  this.once(\"finish\", function() {\n    writable.end();\n  });\n\n  readable.on(\"readable\", function() {\n    if (self._waiting) {\n      self._waiting = false;\n      self._read();\n    }\n  });\n\n  readable.once(\"end\", function() {\n    self.push(null);\n  });\n\n  if (!options || typeof options.bubbleErrors === \"undefined\" || options.bubbleErrors) {\n    writable.on(\"error\", function(err) {\n      self.emit(\"error\", err);\n    });\n\n    readable.on(\"error\", function(err) {\n      self.emit(\"error\", err);\n    });\n  }\n}\n\nDuplexWrapper.prototype = Object.create(stream.Duplex.prototype, {constructor: {value: DuplexWrapper}});\n\nDuplexWrapper.prototype._write = function _write(input, encoding, done) {\n  this._writable.write(input, encoding, done);\n};\n\nDuplexWrapper.prototype._read = function _read() {\n  var buf;\n  var reads = 0;\n  while ((buf = this._readable.read()) !== null) {\n    this.push(buf);\n    reads++;\n  }\n  if (reads === 0) {\n    this._waiting = true;\n  }\n};\n\nmodule.exports = function duplex2(options, writable, readable) {\n  return new DuplexWrapper(options, writable, readable);\n};\n\nmodule.exports.DuplexWrapper = DuplexWrapper;\n","/*!\nCopyright (C) 2015 by Andrea Giammarchi - @WebReflection\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\nvar Class = Class || (function (Object) {\n  'use strict';\n\n  /*! (C) Andrea Giammarchi - MIT Style License */\n\n  var\n    // shortcuts for minifiers and ES3 private keywords too\n    CONSTRUCTOR = 'constructor',\n    EXTENDS = 'extends',\n    IMPLEMENTS = 'implements',\n    INIT = 'init',\n    PROTOTYPE = 'prototype',\n    STATIC = 'static',\n    SUPER = 'super',\n    TO_STRING = 'toString',\n    VALUE = 'value',\n    WITH = 'with',\n\n    // infamous property used as fallback\n    // for IE8 and lower only\n    PROTO = '__proto__',\n\n    // used to copy non enumerable properties on IE\n    nonEnumerables = [\n      'hasOwnProperty',\n      'isPrototypeOf',\n      'propertyIsEnumerable',\n      'toLocaleString',\n      TO_STRING,\n      'valueOf'\n    ],\n\n    // common shortcuts\n    ObjectPrototype = Object[PROTOTYPE],\n    hOP = ObjectPrototype[nonEnumerables[0]],\n    toString = ObjectPrototype[TO_STRING],\n\n    // Espruino 1.7x does not have (yet) Object.prototype.propertyIsEnumerable\n    propertyIsEnumerable = ObjectPrototype[nonEnumerables[2]] || function (p) {\n      for (var k in this) if (p === k) return hOP.call(this, p);\n      return false;\n    },\n\n    // IE < 9 bug only\n    hasIEEnumerableBug = !propertyIsEnumerable.call({toString: 0}, TO_STRING),\n\n    // basic ad-hoc private fallback for old browsers\n    // use es5-shim if you want a properly patched polyfill\n    create = Object.create || function (proto) {\n      /*jshint newcap: false */\n      var isInstance = this instanceof create;\n      create[PROTOTYPE] = isInstance ? createPrototype : (proto || ObjectPrototype);\n      return isInstance ? this : new create();\n    },\n\n    // very old browsers actually work better\n    // without assigning null as prototype\n    createPrototype = create[PROTOTYPE],\n\n    // redefined if not present\n    defineProperty = Object.defineProperty,\n\n    // redefined if not present\n    gOPD = Object.getOwnPropertyDescriptor,\n\n    // basic ad-hoc private fallback for old browsers\n    // use es5-shim if you want a properly patched polyfill\n    gOPN = Object.getOwnPropertyNames || function (object) {\n        var names = [], i, key;\n        for (key in object) {\n          if (hOP.call(object, key)) {\n            names.push(key);\n          }\n        }\n        if (hasIEEnumerableBug) {\n          for (i = 0; i < nonEnumerables.length; i++) {\n            key = nonEnumerables[i];\n            if (hOP.call(object, key)) {\n              names.push(key);\n            }\n          }\n        }\n        return names;\n    },\n\n    // basic ad-hoc private fallback for old browsers\n    // returns empty Array if nonexistent\n    gOPS = Object.getOwnPropertySymbols || function () {\n      return [];\n    },\n\n    // needed to verify the existence\n    getPrototypeOf = Object.getPrototypeOf,\n\n    // needed to allow Classes as traits\n    gPO = getPrototypeOf || function (o) {\n      return o[PROTO] || null;\n    },\n\n    // equivalent of Reflect.ownKeys\n    oK = function (o) {\n      return gOPN(o).concat(gOPS(o));\n    },\n\n    // used to filter mixin  Symbol\n    isArray = Array.isArray || function (a) {\n      return toString.call(a) === '[object Array]';\n    },\n\n    // used to avoid setting `arguments` and other function properties\n    // when public static are copied over\n    nativeFunctionOPN = gOPN(function () {}).concat('arguments'),\n    indexOf = nativeFunctionOPN.indexOf || function (v) {\n      for (var i = this.length; i-- && this[i] !== v;) {}\n      return i;\n    },\n\n    // used to flag classes\n    isClassDescriptor = {value: true},\n\n    trustSuper = ('' + function () {\n      // this test should never be minifier sensitive\n      // or the indexOf check after will fail\n      this['super']();\n    }).indexOf(SUPER) < 0 ?\n      // In 2010 Opera 10.5 for Linux Debian 6\n      // goes nut with methods to string representation,\n      // truncating pieces of text in an unpredictable way.\n      // If you are targeting such browser\n      // be aware that super invocation might fail.\n      // This is the only exception I could find\n      // from year 2000 to modern days browsers\n      // plus everything else would work just fine.\n      function () { return true; } :\n      // all other JS engines should be just fine\n      function (method) {\n        var\n          str = '' + method,\n          i = str.indexOf(SUPER)\n        ;\n        return i < 0 ?\n          false :\n          isBoundary(str.charCodeAt(i - 1)) &&\n          isBoundary(str.charCodeAt(i + 5));\n      }\n  ;\n\n  // verified broken IE8 or older browsers\n  try {\n    defineProperty({}, '{}', {});\n  } catch(o_O) {\n    if ('__defineGetter__' in {}) {\n      defineProperty = function (object, name, descriptor) {\n        if (hOP.call(descriptor, VALUE)) {\n          object[name] = descriptor[VALUE];\n        } else {\n          if (hOP.call(descriptor, 'get')) {\n            object.__defineGetter__(name, descriptor.get);\n          }\n          if (hOP.call(descriptor, 'set')) {\n            object.__defineSetter__(name, descriptor.set);\n          }\n        }\n        return object;\n      };\n      gOPD = function (object, key) {\n        var\n          get = object.__lookupGetter__(key),\n          set = object.__lookupSetter__(key),\n          descriptor = {}\n        ;\n        if (get || set) {\n          if (get) {\n            descriptor.get = get;\n          }\n          if (set) {\n            descriptor.set = set;\n          }\n        } else {\n          descriptor[VALUE] = object[key];\n        }\n        return descriptor;\n      };\n    } else {\n      defineProperty = function (object, name, descriptor) {\n        object[name] = descriptor[VALUE];\n        return object;\n      };\n      gOPD = function (object, key) {\n        return {value: object[key]};\n      };\n    }\n  }\n\n  // copy all imported enumerable methods and properties\n  function addMixins(mixins, target, inherits, isNOTExtendingNative) {\n    for (var\n      source,\n      init = [],\n      i = 0; i < mixins.length; i++\n    ) {\n      source = transformMixin(mixins[i]);\n      if (hOP.call(source, INIT)) {\n        init.push(source[INIT]);\n      }\n      copyOwn(source, target, inherits, false, false, isNOTExtendingNative);\n    }\n    return init;\n  }\n\n  // deep copy all properties of an object (static objects only)\n  function copyDeep(source) {\n    for (var\n      key, descriptor, value,\n      target = create(gPO(source)),\n      names = oK(source),\n      i = 0; i < names.length; i++\n    ) {\n      key = names[i];\n      descriptor = gOPD(source, key);\n      if (hOP.call(descriptor, VALUE)) {\n        copyValueIfObject(descriptor, copyDeep);\n      }\n      defineProperty(target, key, descriptor);\n    }\n    return target;\n  }\n\n  // given two objects, performs a deep copy\n  // per each property not present in the target\n  // otherwise merges, without overwriting,\n  // all properties within the object\n  function copyMerged(source, target) {\n    for (var\n      key, descriptor, value, tvalue,\n      names = oK(source),\n      i = 0; i < names.length; i++\n    ) {\n      key = names[i];\n      descriptor = gOPD(source, key);\n      // target already has this property\n      if (hOP.call(target, key)) {\n        // verify the descriptor can  be merged\n        if (hOP.call(descriptor, VALUE)) {\n          value = descriptor[VALUE];\n          // which means, verify it's an object\n          if (isObject(value)) {\n            // in such case, verify the target can be modified\n            descriptor = gOPD(target, key);\n            // meaning verify it's a data descriptor\n            if (hOP.call(descriptor, VALUE)) {\n              tvalue = descriptor[VALUE];\n              // and it's actually an object\n              if (isObject(tvalue)) {\n                copyMerged(value, tvalue);\n              }\n            }\n          }\n        }\n      } else {\n        // target has no property at all\n        if (hOP.call(descriptor, VALUE)) {\n          // copy deep if it's an object\n          copyValueIfObject(descriptor, copyDeep);\n        }\n        defineProperty(target, key, descriptor);\n      }\n    }\n  }\n\n  // configure source own properties in the target\n  function copyOwn(source, target, inherits, publicStatic, allowInit, isNOTExtendingNative) {\n    for (var\n      key,\n      noFunctionCheck = typeof source !== 'function',\n      names = oK(source),\n      i = 0; i < names.length; i++\n    ) {\n      key = names[i];\n      if (\n        (noFunctionCheck || indexOf.call(nativeFunctionOPN, key) < 0) &&\n        isNotASpecialKey(key, allowInit)\n      ) {\n        if (hOP.call(target, key)) {\n          warn('duplicated: ' + key.toString());\n        }\n        setProperty(inherits, target, key, gOPD(source, key), publicStatic, isNOTExtendingNative);\n      }\n    }\n  }\n\n  // shortcut to copy objects into descriptor.value\n  function copyValueIfObject(where, how) {\n    var what = where[VALUE];\n    if (isObject(what)) {\n      where[VALUE] = how(what);\n    }\n  }\n\n\n  // return the right constructor analyzing the parent.\n  // if the parent is empty there is no need to call it.\n  function createConstructor(hasParentPrototype, parent) {\n    var Class = function Class() {};\n    return hasParentPrototype && ('' + parent) !== ('' + Class) ?\n      function Class() {\n        return parent.apply(this, arguments);\n      } :\n      Class\n    ;\n  }\n\n  // common defineProperty wrapper\n  function define(target, key, value, publicStatic) {\n    var configurable = isConfigurable(key, publicStatic);\n    defineProperty(target, key, {\n      enumerable: false, // was: publicStatic,\n      configurable: configurable,\n      writable: configurable,\n      value: value\n    });\n  }\n\n  // verifies a specific char code is not in [A-Za-z_]\n  // used to avoid RegExp for non RegExp aware environment\n  function isBoundary(code) {\n    return code ?\n      (code < 65 || 90 < code) &&\n      (code < 97 || 122 < code) &&\n      code !== 95 :\n      true;\n  }\n\n  // if key is UPPER_CASE and the property is public static\n  // it will define the property as non configurable and non writable\n  function isConfigurable(key, publicStatic) {\n    return publicStatic ? !isPublicStatic(key) : true;\n  }\n\n  // verifies a key is not special for the class\n  function isNotASpecialKey(key, allowInit) {\n    return  key !== CONSTRUCTOR &&\n            key !== EXTENDS &&\n            key !== IMPLEMENTS &&\n            // Blackberry 7 and old WebKit bug only:\n            //  user defined functions have\n            //  enumerable prototype and constructor\n            key !== PROTOTYPE &&\n            key !== STATIC &&\n            key !== SUPER &&\n            key !== WITH &&\n            (allowInit || key !== INIT);\n  }\n\n  // verifies a generic value is actually an object\n  function isObject(value) {\n    /*jshint eqnull: true */\n    return value != null && typeof value === 'object';\n  }\n\n  // verifies the entire string is upper case\n  // and contains eventually an underscore\n  // used to avoid RegExp for non RegExp aware environment\n  function isPublicStatic(key) {\n    for(var c, i = 0; i < key.length; i++) {\n      c = key.charCodeAt(i);\n      if ((c < 65 || 90 < c) && c !== 95) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // will eventually convert classes or constructors\n  // into trait objects, before assigning them as such\n  function transformMixin(trait) {\n    if (isObject(trait)) return trait;\n    else {\n      var i, key, keys, object, proto;\n      if (trait.isClass) {\n        if (trait.length) {\n          warn((trait.name || 'Class') + ' should not expect arguments');\n        }\n        for (\n          object = {init: trait},\n          proto = trait.prototype;\n          proto && proto !== Object.prototype;\n          proto = gPO(proto)\n        ) {\n          for (i = 0, keys = oK(proto); i < keys.length; i++) {\n            key = keys[i];\n            if (isNotASpecialKey(key, false) && !hOP.call(object, key)) {\n              defineProperty(object, key, gOPD(proto, key));\n            }\n          }\n        }\n      } else {\n        for (\n          i = 0,\n          object = {},\n          proto = trait({}),\n          keys = oK(proto);\n          i < keys.length; i++\n        ) {\n          key = keys[i];\n          if (key !== INIT) {\n            // if this key is the mixin one\n            if (~key.toString().indexOf('mixin:init') && isArray(proto[key])) {\n              // set the init simply as own method\n              object.init = proto[key][0];\n            } else {\n              // simply assign the descriptor\n              defineProperty(object, key, gOPD(proto, key));\n            }\n          }\n        }\n      }\n      return object;\n    }\n  }\n\n  // set a property via defineProperty using a common descriptor\n  // only if properties where not defined yet.\n  // If publicStatic is true, properties are both non configurable and non writable\n  function setProperty(inherits, target, key, descriptor, publicStatic, isNOTExtendingNative) {\n    var\n      hasValue = hOP.call(descriptor, VALUE),\n      configurable,\n      value\n    ;\n    if (publicStatic) {\n      if (hOP.call(target, key)) {\n        // in case the value is not a static one\n        if (\n          inherits &&\n          isObject(target[key]) &&\n          isObject(inherits[CONSTRUCTOR][key])\n        ) {\n          copyMerged(inherits[CONSTRUCTOR][key], target[key]);\n        }\n        return;\n      } else if (hasValue) {\n        // in case it's an object perform a deep copy\n        copyValueIfObject(descriptor, copyDeep);\n      }\n    } else if (hasValue) {\n      value = descriptor[VALUE];\n      if (typeof value === 'function' && trustSuper(value)) {\n        descriptor[VALUE] = wrap(inherits, key, value, publicStatic);\n      }\n    } else if (isNOTExtendingNative) {\n      wrapGetOrSet(inherits, key, descriptor, 'get');\n      wrapGetOrSet(inherits, key, descriptor, 'set');\n    }\n    configurable = isConfigurable(key, publicStatic);\n    descriptor.enumerable = false; // was: publicStatic;\n    descriptor.configurable = configurable;\n    if (hasValue) {\n      descriptor.writable = configurable;\n    }\n    defineProperty(target, key, descriptor);\n  }\n\n  // basic check against expected properties or methods\n  // used when `implements` is used\n  function verifyImplementations(interfaces, target) {\n    for (var\n      current,\n      key,\n      i = 0; i < interfaces.length; i++\n    ) {\n      current = interfaces[i];\n      for (key in current) {\n        if (hOP.call(current, key) && !hOP.call(target, key)) {\n          warn(key.toString() + ' is not implemented');\n        }\n      }\n    }\n  }\n\n  // warn if something doesn't look right\n  // such overwritten public statics\n  // or traits / mixins assigning twice same thing\n  function warn(message) {\n    try {\n      console.warn(message);\n    } catch(meh) {\n      /*\\_(ツ)_*/\n    }\n  }\n\n  // lightweight wrapper for methods that requires\n  // .super(...) invokaction - inspired by old klass.js\n  function wrap(inherits, key, method, publicStatic) {\n    return function () {\n      if (!hOP.call(this, SUPER)) {\n        // define it once in order to use\n        // fast assignment every other time\n        define(this, SUPER, null, publicStatic);\n      }\n      var\n        previous = this[SUPER],\n        current = (this[SUPER] = inherits[key]),\n        result = method.apply(this, arguments)\n      ;\n      this[SUPER] = previous;\n      return result;\n    };\n  }\n\n  // get/set shortcut for the eventual wrapper\n  function wrapGetOrSet(inherits, key, descriptor, gs, publicStatic) {\n    if (hOP.call(descriptor, gs) && trustSuper(descriptor[gs])) {\n      descriptor[gs] = wrap(\n        gOPD(inherits, key),\n        gs,\n        descriptor[gs],\n        publicStatic\n      );\n    }\n  }\n\n  // the actual Class({ ... }) definition\n  return function (description) {\n    var\n      hasConstructor = hOP.call(description, CONSTRUCTOR),\n      hasParent = hOP.call(description, EXTENDS),\n      parent = hasParent && description[EXTENDS],\n      hasParentPrototype = hasParent && typeof parent === 'function',\n      inherits = hasParentPrototype ? parent[PROTOTYPE] : parent,\n      constructor = hasConstructor ?\n        description[CONSTRUCTOR] :\n        createConstructor(hasParentPrototype, parent),\n      hasSuper = hasParent && hasConstructor && trustSuper(constructor),\n      prototype = hasParent ? create(inherits) : constructor[PROTOTYPE],\n      // do not wrap getters and setters in GJS extends\n      isNOTExtendingNative = toString.call(inherits).indexOf(' GObject_') < 0,\n      mixins,\n      length\n    ;\n    if (hasSuper && isNOTExtendingNative) {\n      constructor = wrap(inherits, CONSTRUCTOR, constructor, false);\n    }\n    // add modules/mixins (that might swap the constructor)\n    if (hOP.call(description, WITH)) {\n      mixins = addMixins([].concat(description[WITH]), prototype, inherits, isNOTExtendingNative);\n      length = mixins.length;\n      if (length) {\n        constructor = (function (parent) {\n          return function () {\n            var i = 0;\n            while (i < length) mixins[i++].call(this);\n            return parent.apply(this, arguments);\n          };\n        }(constructor));\n        constructor[PROTOTYPE] = prototype;\n      }\n    }\n    if (hOP.call(description, STATIC)) {\n      // add new public static properties first\n      copyOwn(description[STATIC], constructor, inherits, true, true, isNOTExtendingNative);\n    }\n    if (hasParent) {\n      // in case it's a function\n      if (parent !== inherits) {\n        // copy possibly inherited statics too\n        copyOwn(parent, constructor, inherits, true, true, isNOTExtendingNative);\n      }\n      constructor[PROTOTYPE] = prototype;\n    }\n    if (prototype[CONSTRUCTOR] !== constructor) {\n      define(prototype, CONSTRUCTOR, constructor, false);\n    }\n    // enrich the prototype\n    copyOwn(description, prototype, inherits, false, true, isNOTExtendingNative);\n    if (hOP.call(description, IMPLEMENTS)) {\n      verifyImplementations([].concat(description[IMPLEMENTS]), prototype);\n    }\n    if (hasParent && !getPrototypeOf) {\n      define(prototype, PROTO, inherits, false);\n    }\n    return defineProperty(constructor, 'isClass', isClassDescriptor);\n  };\n\n}(Object));\nmodule.exports = Class;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sequenceS = exports.sequenceT = exports.getApplySemigroup = exports.apS = exports.apSecond = exports.apFirst = exports.ap = void 0;\nvar function_1 = require(\"./function\");\nfunction ap(F, G) {\n    return function (fa) { return function (fab) {\n        return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n    }; };\n}\nexports.ap = ap;\nfunction apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexports.apFirst = apFirst;\nfunction apSecond(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n    }; };\n}\nexports.apSecond = apSecond;\nfunction apS(F) {\n    return function (name, fb) { return function (fa) {\n        return F.ap(F.map(fa, function (a) { return function (b) {\n            var _a;\n            return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n        }; }), fb);\n    }; };\n}\nexports.apS = apS;\nfunction getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nexports.getApplySemigroup = getApplySemigroup;\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!tupleConstructors.hasOwnProperty(len)) {\n        tupleConstructors[len] = curried(function_1.tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nfunction sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nexports.sequenceT = sequenceT;\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nfunction sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\nexports.sequenceS = sequenceS;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bind = exports.chainFirst = void 0;\nfunction chainFirst(M) {\n    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };\n}\nexports.chainFirst = chainFirst;\nfunction bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\nexports.bind = bind;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eqDate = exports.eqNumber = exports.eqString = exports.eqBoolean = exports.eq = exports.strictEqual = exports.getStructEq = exports.getTupleEq = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.eqStrict = exports.URI = exports.contramap = exports.tuple = exports.struct = exports.fromEquals = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\nexports.fromEquals = fromEquals;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar struct = function (eqs) {\n    return exports.fromEquals(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\nexports.struct = struct;\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return exports.fromEquals(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\nexports.tuple = tuple;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return exports.fromEquals(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (x, y) { return exports.fromEquals(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @category instances\n * @since 2.6.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleEq = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructEq = exports.struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.strictEqual = exports.eqStrict.equals;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eq = exports.Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqBoolean = exports.eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqString = exports.eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqNumber = exports.eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctorComposition = exports.bindTo = exports.flap = exports.map = void 0;\n/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nfunction map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexports.map = map;\nfunction flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexports.flap = flap;\nfunction bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nexports.bindTo = bindTo;\n/** @deprecated */\nfunction getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return function_1.pipe(fga, _map(f)); }\n    };\n}\nexports.getFunctorComposition = getFunctorComposition;\n","\"use strict\";\n/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.concatAll = exports.endo = exports.filterSecond = exports.filterFirst = exports.reverse = void 0;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @category combinators\n * @since 2.11.0\n */\nvar reverse = function (M) { return ({\n    concat: function (first, second) { return M.concat(second, first); }\n}); };\nexports.reverse = reverse;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar filterFirst = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(first) ? M.concat(first, second) : second); }\n}); }; };\nexports.filterFirst = filterFirst;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar filterSecond = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(second) ? M.concat(first, second) : first); }\n}); }; };\nexports.filterSecond = filterSecond;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar endo = function (f) { return function (M) { return ({\n    concat: function (first, second) { return M.concat(f(first), f(second)); }\n}); }; };\nexports.endo = endo;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\nvar concatAll = function (M) { return function (startWith) { return function (as) {\n    return as.reduce(function (a, acc) { return M.concat(a, acc); }, startWith);\n}; }; };\nexports.concatAll = concatAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ordDate = exports.ordNumber = exports.ordString = exports.ordBoolean = exports.ord = exports.getDualOrd = exports.getTupleOrd = exports.between = exports.clamp = exports.max = exports.min = exports.geq = exports.leq = exports.gt = exports.lt = exports.equals = exports.trivial = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.URI = exports.contramap = exports.reverse = exports.tuple = exports.fromCompare = exports.equalsDefault = void 0;\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nvar equalsDefault = function (compare) { return function (first, second) {\n    return first === second || compare(first, second) === 0;\n}; };\nexports.equalsDefault = equalsDefault;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromCompare = function (compare) { return ({\n    equals: exports.equalsDefault(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\nexports.fromCompare = fromCompare;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return exports.fromCompare(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\nexports.tuple = tuple;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar reverse = function (O) { return exports.fromCompare(function (first, second) { return O.compare(second, first); }); };\nexports.reverse = reverse;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return exports.fromCompare(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return exports.fromCompare(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: exports.fromCompare(function () { return 0; })\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexports.trivial = {\n    equals: function_1.constTrue,\n    compare: function_1.constant(0)\n};\n/**\n * @since 2.11.0\n */\nvar equals = function (O) { return function (second) { return function (first) {\n    return first === second || O.compare(first, second) === 0;\n}; }; };\nexports.equals = equals;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nvar lt = function (O) { return function (first, second) { return O.compare(first, second) === -1; }; };\nexports.lt = lt;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar gt = function (O) { return function (first, second) { return O.compare(first, second) === 1; }; };\nexports.gt = gt;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nvar leq = function (O) { return function (first, second) { return O.compare(first, second) !== 1; }; };\nexports.leq = leq;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar geq = function (O) { return function (first, second) { return O.compare(first, second) !== -1; }; };\nexports.geq = geq;\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar min = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) < 1 ? first : second;\n}; };\nexports.min = min;\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar max = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) > -1 ? first : second;\n}; };\nexports.max = max;\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nvar clamp = function (O) {\n    var minO = exports.min(O);\n    var maxO = exports.max(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\nexports.clamp = clamp;\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nvar between = function (O) {\n    var ltO = exports.lt(O);\n    var gtO = exports.gt(O);\n    return function (low, hi) { return function (a) { return (ltO(a, low) || gtO(a, hi) ? false : true); }; };\n};\nexports.between = between;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleOrd = exports.tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualOrd = exports.reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ord = exports.Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: Eq_1.eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordDate = \n/*#__PURE__*/\nfunction_1.pipe(exports.ordNumber, \n/*#__PURE__*/\nexports.contramap(function (date) { return date.valueOf(); }));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reduceRight = exports.foldMap = exports.reduce = exports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.of = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.modifyAt = exports.updateAt = exports.sort = exports.groupBy = exports.group = exports.reverse = exports.concat = exports.concatW = exports.fromArray = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromReadonlyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = exports.empty = void 0;\nexports.uncons = exports.filterWithIndex = exports.filter = exports.groupSort = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.foldMapWithIndex = exports.reduceWithIndex = void 0;\nexports.readonlyNonEmptyArray = exports.fold = exports.prependToAll = exports.insertAt = exports.snoc = exports.cons = exports.unsnoc = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Ord_1 = require(\"./Ord\");\nvar Se = __importStar(require(\"./Semigroup\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexports.empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\nexports.isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prependW = function (head) { return function (tail) { return __spreadArray([head], tail); }; };\nexports.prependW = prependW;\n/**\n * @internal\n */\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\nvar appendW = function (end) { return function (init) { return __spreadArray(__spreadArray([], init), [end]); }; };\nexports.appendW = appendW;\n/**\n * @internal\n */\nexports.append = exports.appendW;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if (exports.isNonEmpty(as)) {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs[i] = a;\n        return xs;\n    }\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar uniq = function (E) { return function (as) {\n    if (as.length === 1) {\n        return as;\n    }\n    var out = [exports.head(as)];\n    var rest = exports.tail(as);\n    var _loop_1 = function (a) {\n        if (out.every(function (o) { return !E.equals(o, a); })) {\n            out.push(a);\n        }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n        var a = rest_1[_i];\n        _loop_1(a);\n    }\n    return out;\n}; };\nexports.uniq = uniq;\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar sortBy = function (ords) {\n    if (exports.isNonEmpty(ords)) {\n        var M = Ord_1.getMonoid();\n        return exports.sort(ords.reduce(M.concat, M.empty));\n    }\n    return function_1.identity;\n};\nexports.sortBy = sortBy;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar union = function (E) {\n    var uniqE = exports.uniq(E);\n    return function (second) { return function (first) { return uniqE(function_1.pipe(first, concat(second))); }; };\n};\nexports.union = union;\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar rotate = function (n) { return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {\n        return as;\n    }\n    if (m < 0) {\n        var _a = exports.splitAt(-m)(as), f = _a[0], s = _a[1];\n        return function_1.pipe(s, concat(f));\n    }\n    else {\n        return exports.rotate(m - len)(as);\n    }\n}; };\nexports.rotate = rotate;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category constructors\n * @since 2.5.0\n */\nvar fromReadonlyArray = function (as) {\n    return exports.isNonEmpty(as) ? _.some(as) : _.none;\n};\nexports.fromReadonlyArray = fromReadonlyArray;\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar makeBy = function (f) { return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n        out.push(f(i));\n    }\n    return out;\n}; };\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar replicate = function (a) { return exports.makeBy(function () { return a; }); };\nexports.replicate = replicate;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar range = function (start, end) {\n    return start <= end ? exports.makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\nexports.range = range;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [exports.head(as), exports.tail(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unappend = function (as) { return [exports.init(as), exports.last(as)]; };\nexports.unappend = unappend;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nvar fromArray = function (as) { return exports.fromReadonlyArray(as.slice()); };\nexports.fromArray = fromArray;\nfunction concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexports.concatW = concatW;\nfunction concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\nexports.concat = concat;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar reverse = function (as) {\n    return as.length === 1 ? as : __spreadArray([exports.last(as)], as.slice(0, -1).reverse());\n};\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return exports.empty;\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\nexports.group = group;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.5.0\n */\nvar groupBy = function (f) { return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n        var a = as_1[_i];\n        var k = f(a);\n        if (out.hasOwnProperty(k)) {\n            out[k].push(a);\n        }\n        else {\n            out[k] = [a];\n        }\n    }\n    return out;\n}; };\nexports.groupBy = groupBy;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length === 1 ? as : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) { return function (as) { return (exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as))); }; };\nexports.modifyAt = modifyAt;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) { return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n        out.push(middle, as[i]);\n    }\n    return out;\n}; };\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) { return function (as) {\n    var rest = exports.tail(as);\n    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : as;\n}; };\nexports.intersperse = intersperse;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = _.fromReadonlyNonEmptyArray(f(0, exports.head(as)));\n    for (var i = 1; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar chop = function (f) { return function (as) {\n    var _a = f(as), b = _a[0], rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (exports.isNonEmpty(next)) {\n        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n        out.push(b_1);\n        next = rest_2;\n    }\n    return out;\n}; };\nexports.chop = chop;\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar splitAt = function (n) { return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [as, exports.empty] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return exports.chop(exports.splitAt(n)); };\nexports.chunksOf = chunksOf;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.5.0\n */\nexports.of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (as) { return function_1.pipe(as, concatW(that())); }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (as) { return exports.chain(function (f) { return function_1.pipe(as, exports.map(f)); }); };\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) { return exports.chainWithIndex(function (_, a) { return f(a); }); };\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (as) {\n    var next = exports.tail(as);\n    var out = [f(as)];\n    while (exports.isNonEmpty(next)) {\n        out.push(f(next));\n        next = exports.tail(next);\n    }\n    return out;\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) {\n    return exports.mapWithIndex(function (_, a) { return f(a); });\n};\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (as) {\n    var out = [f(0, exports.head(as))];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i]));\n    }\n    return out;\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (S) { return function (f) { return function (as) {\n    return as.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(as[0]));\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return exports.reduceRightWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (as) {\n    return as.reduce(function (b, a, i) { return f(i, b, a); }, b);\n}; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (S) { return function (f) { return function (as) { return as.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, as[0])); }; }; };\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (as) { return as.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return exports.traverseWithIndex(F)(function_1.SK); };\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) { return function (as) {\n    var out = F.map(f(0, exports.head(as)), exports.of);\n    for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, as[i]));\n    }\n    return out;\n}; }; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Comonad\n * @since 2.6.3\n */\nexports.extract = _.head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n}); };\nexports.getShow = getShow;\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return Eq_1.fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = exports.union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexports.head = exports.extract;\n/**\n * @since 2.5.0\n */\nexports.tail = _.tail;\n/**\n * @since 2.5.0\n */\nvar last = function (as) { return as[as.length - 1]; };\nexports.last = last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.5.0\n */\nvar min = function (O) {\n    var S = Se.min(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.min = min;\n/**\n * @since 2.5.0\n */\nvar max = function (O) {\n    var S = Se.max(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.max = max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };\nexports.concatAll = concatAll;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeft = function (f) { return function (as) {\n    return f(exports.head(as), exports.tail(as));\n}; };\nexports.matchLeft = matchLeft;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRight = function (f) { return function (as) {\n    return f(exports.init(as), exports.last(as));\n}; };\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyHead = function (f) { return function (as) { return __spreadArray([\n    f(exports.head(as))\n], exports.tail(as)); }; };\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateHead = function (a) { return exports.modifyHead(function () { return a; }); };\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyLast = function (f) { return function (as) {\n    return function_1.pipe(exports.init(as), exports.append(f(exports.last(as))));\n}; };\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateLast = function (a) { return exports.modifyLast(function () { return a; }); };\nexports.updateLast = updateLast;\nfunction groupSort(O) {\n    var sortO = exports.sort(O);\n    var groupO = group(O);\n    return function (as) { return (exports.isNonEmpty(as) ? groupO(sortO(as)) : exports.empty); };\n}\nexports.groupSort = groupSort;\nfunction filter(predicate) {\n    return exports.filterWithIndex(function (_, a) { return predicate(a); });\n}\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) { return function (as) { return exports.fromReadonlyArray(as.filter(function (a, i) { return predicate(i, a); })); }; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));\n}\nexports.cons = cons;\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nvar snoc = function (init, end) { return function_1.pipe(init, concat([end])); };\nexports.snoc = snoc;\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = exports.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyNonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.semigroupProduct = exports.semigroupSum = exports.semigroupString = exports.getFunctionSemigroup = exports.semigroupAny = exports.semigroupAll = exports.fold = exports.getIntercalateSemigroup = exports.getMeetSemigroup = exports.getJoinSemigroup = exports.getDualSemigroup = exports.getStructSemigroup = exports.getTupleSemigroup = exports.getFirstSemigroup = exports.getLastSemigroup = exports.getObjectSemigroup = exports.semigroupVoid = exports.concatAll = exports.last = exports.first = exports.intercalate = exports.tuple = exports.struct = exports.reverse = exports.constant = exports.max = exports.min = void 0;\n/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nvar M = __importStar(require(\"./Magma\"));\nvar Or = __importStar(require(\"./Ord\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar min = function (O) { return ({\n    concat: Or.min(O)\n}); };\nexports.min = min;\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar max = function (O) { return ({\n    concat: Or.max(O)\n}); };\nexports.max = max;\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\nexports.constant = constant;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category combinators\n * @since 2.10.0\n */\nvar struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\nexports.struct = struct;\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\nexports.tuple = tuple;\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @category combinators\n * @since 2.10.0\n */\nvar intercalate = function (middle) { return function (S) { return ({\n    concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n}); }; };\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nvar first = function () { return ({ concat: function_1.identity }); };\nexports.first = first;\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nvar last = function () { return ({ concat: function (_, y) { return y; } }); };\nexports.last = last;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nexports.concatAll = M.concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `void` module instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupVoid = exports.constant(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\nexports.getObjectSemigroup = getObjectSemigroup;\n/**\n * Use [`last`](#last) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getLastSemigroup = exports.last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFirstSemigroup = exports.first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleSemigroup = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructSemigroup = exports.struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualSemigroup = exports.reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.getJoinSemigroup = exports.max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.getMeetSemigroup = exports.min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nexports.getIntercalateSemigroup = exports.intercalate;\nfunction fold(S) {\n    var concatAllS = exports.concatAll(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\nexports.fold = fold;\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFunctionSemigroup = function_1.getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndomorphismMonoid = exports.not = exports.SK = exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.unsafeCoerce = exports.identity = exports.apply = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getBooleanAlgebra = function (B) { return function () { return ({\n    meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n    join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n    zero: function () { return B.zero; },\n    one: function () { return B.one; },\n    implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n    not: function (x) { return function (a) { return B.not(x(a)); }; }\n}); }; };\nexports.getBooleanAlgebra = getBooleanAlgebra;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function (S) { return function () { return ({\n    concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n}); }; };\nexports.getSemigroup = getSemigroup;\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getMonoid = function (M) {\n    var getSemigroupM = exports.getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\nexports.getSemiring = getSemiring;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getRing = function (R) {\n    var S = exports.getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\nexports.getRing = getRing;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar apply = function (a) { return function (f) { return f(a); }; };\nexports.apply = apply;\n/**\n * @since 2.0.0\n */\nfunction identity(a) {\n    return a;\n}\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nfunction constant(a) {\n    return function () { return a; };\n}\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexports.constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexports.constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexports.constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexports.constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexports.constVoid = exports.constUndefined;\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nfunction flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexports.flip = flip;\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\nfunction tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\nfunction increment(n) {\n    return n + 1;\n}\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\nfunction decrement(n) {\n    return n - 1;\n}\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\nfunction absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nfunction tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nfunction untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexports.untupled = untupled;\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi, ij, jk, kl, lm, mn, no, op, pq, qr, rs, st) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        case 10:\n            return ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))));\n        case 11:\n            return jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))));\n        case 12:\n            return kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))));\n        case 13:\n            return lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))));\n        case 14:\n            return mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))));\n        case 15:\n            return no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))));\n        case 16:\n            return op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))));\n        case 17:\n            return pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))));\n        case 18:\n            return qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))));\n        case 19:\n            return rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))))));\n        case 20:\n            return st(rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))))));\n    }\n    return;\n}\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexports.hole = absurd;\n/**\n * @since 2.11.0\n */\nvar SK = function (_, b) { return b; };\nexports.SK = SK;\n/**\n * Use `Predicate` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nfunction not(predicate) {\n    return function (a) { return !predicate(a); };\n}\nexports.not = not;\n/**\n * Use `Endomorphism` module instead.\n *\n * @category instances\n * @since 2.10.0\n * @deprecated\n */\nvar getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\nexports.getEndomorphismMonoid = getEndomorphismMonoid;\n","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromReadonlyNonEmptyArray = exports.has = exports.emptyRecord = exports.emptyReadonlyArray = exports.tail = exports.head = exports.isNonEmpty = exports.singleton = exports.right = exports.left = exports.isRight = exports.isLeft = exports.some = exports.none = exports.isSome = exports.isNone = void 0;\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n/** @internal */\nvar isSome = function (fa) { return fa._tag === 'Some'; };\nexports.isSome = isSome;\n/** @internal */\nexports.none = { _tag: 'None' };\n/** @internal */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isLeft = function (ma) { return ma._tag === 'Left'; };\nexports.isLeft = isLeft;\n/** @internal */\nvar isRight = function (ma) { return ma._tag === 'Right'; };\nexports.isRight = isRight;\n/** @internal */\nvar left = function (e) { return ({ _tag: 'Left', left: e }); };\nexports.left = left;\n/** @internal */\nvar right = function (a) { return ({ _tag: 'Right', right: a }); };\nexports.right = right;\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar singleton = function (a) { return [a]; };\nexports.singleton = singleton;\n/** @internal */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/** @internal */\nvar head = function (as) { return as[0]; };\nexports.head = head;\n/** @internal */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.emptyReadonlyArray = [];\n/** @internal */\nexports.emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1)); };\nexports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.endsWith = exports.startsWith = exports.includes = exports.split = exports.size = exports.isEmpty = exports.empty = exports.slice = exports.trimRight = exports.trimLeft = exports.trim = exports.replace = exports.toLowerCase = exports.toUpperCase = exports.isString = exports.Show = exports.Ord = exports.Monoid = exports.Semigroup = exports.Eq = void 0;\nvar ReadonlyNonEmptyArray_1 = require(\"./ReadonlyNonEmptyArray\");\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Eq.equals('a', 'a'), true)\n * assert.deepStrictEqual(S.Eq.equals('a', 'b'), false)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * `string` semigroup under concatenation.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Semigroup.concat('a', 'b'), 'ab')\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Semigroup = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * `string` monoid under concatenation.\n *\n * The `empty` value is `''`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Monoid.concat('a', 'b'), 'ab')\n * assert.deepStrictEqual(S.Monoid.concat('a', S.Monoid.empty), 'a')\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Monoid = {\n    concat: exports.Semigroup.concat,\n    empty: ''\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Ord.compare('a', 'a'), 0)\n * assert.deepStrictEqual(S.Ord.compare('a', 'b'), -1)\n * assert.deepStrictEqual(S.Ord.compare('b', 'a'), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Ord = {\n    equals: exports.Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Show.show('a'), '\"a\"')\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Show = {\n    show: function (s) { return JSON.stringify(s); }\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.isString('a'), true)\n * assert.deepStrictEqual(S.isString(1), false)\n *\n * @category refinements\n * @since 2.11.0\n */\nvar isString = function (u) { return typeof u === 'string'; };\nexports.isString = isString;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('a', S.toUpperCase), 'A')\n *\n * @category combinators\n * @since 2.11.0\n */\nvar toUpperCase = function (s) { return s.toUpperCase(); };\nexports.toUpperCase = toUpperCase;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('A', S.toLowerCase), 'a')\n *\n * @category combinators\n * @since 2.11.0\n */\nvar toLowerCase = function (s) { return s.toLowerCase(); };\nexports.toLowerCase = toLowerCase;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.replace('b', 'd')), 'adc')\n *\n * @category combinators\n * @since 2.11.0\n */\nvar replace = function (searchValue, replaceValue) { return function (s) {\n    return s.replace(searchValue, replaceValue);\n}; };\nexports.replace = replace;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trim), 'a')\n *\n * @category combinators\n * @since 2.11.0\n */\nvar trim = function (s) { return s.trim(); };\nexports.trim = trim;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trimLeft), 'a ')\n *\n * @category combinators\n * @since 2.11.0\n */\nvar trimLeft = function (s) { return s.trimLeft(); };\nexports.trimLeft = trimLeft;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trimRight), ' a')\n *\n * @category combinators\n * @since 2.11.0\n */\nvar trimRight = function (s) { return s.trimRight(); };\nexports.trimRight = trimRight;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abcd', S.slice(1, 3)), 'bc')\n *\n * @category combinators\n * @since 2.11.0\n */\nvar slice = function (start, end) { return function (s) { return s.slice(start, end); }; };\nexports.slice = slice;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty `string`.\n *\n * @since 2.10.0\n */\nexports.empty = '';\n/**\n * Test whether a `string` is empty.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('', S.isEmpty), true)\n * assert.deepStrictEqual(pipe('a', S.isEmpty), false)\n *\n * @since 2.10.0\n */\nvar isEmpty = function (s) { return s.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Calculate the number of characters in a `string`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.size), 3)\n *\n * @since 2.10.0\n */\nvar size = function (s) { return s.length; };\nexports.size = size;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.split('')), ['a', 'b', 'c'])\n * assert.deepStrictEqual(pipe('', S.split('')), [''])\n *\n * @since 2.11.0\n */\nvar split = function (separator) { return function (s) {\n    var out = s.split(separator);\n    return ReadonlyNonEmptyArray_1.isNonEmpty(out) ? out : [s];\n}; };\nexports.split = split;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.includes('b')), true)\n * assert.deepStrictEqual(pipe('abc', S.includes('d')), false)\n *\n * @since 2.11.0\n */\nvar includes = function (searchString, position) { return function (s) {\n    return s.includes(searchString, position);\n}; };\nexports.includes = includes;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.startsWith('a')), true)\n * assert.deepStrictEqual(pipe('bc', S.startsWith('a')), false)\n *\n * @since 2.11.0\n */\nvar startsWith = function (searchString, position) { return function (s) {\n    return s.startsWith(searchString, position);\n}; };\nexports.startsWith = startsWith;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.endsWith('c')), true)\n * assert.deepStrictEqual(pipe('ab', S.endsWith('c')), false)\n *\n * @since 2.11.0\n */\nvar endsWith = function (searchString, position) { return function (s) {\n    return s.endsWith(searchString, position);\n}; };\nexports.endsWith = endsWith;\n","'use strict';\nconst PassThrough = require('stream').PassThrough;\n\nmodule.exports = opts => {\n\topts = Object.assign({}, opts);\n\n\tconst array = opts.array;\n\tlet encoding = opts.encoding;\n\tconst buffer = encoding === 'buffer';\n\tlet objectMode = false;\n\n\tif (array) {\n\t\tobjectMode = !(encoding || buffer);\n\t} else {\n\t\tencoding = encoding || 'utf8';\n\t}\n\n\tif (buffer) {\n\t\tencoding = null;\n\t}\n\n\tlet len = 0;\n\tconst ret = [];\n\tconst stream = new PassThrough({objectMode});\n\n\tif (encoding) {\n\t\tstream.setEncoding(encoding);\n\t}\n\n\tstream.on('data', chunk => {\n\t\tret.push(chunk);\n\n\t\tif (objectMode) {\n\t\t\tlen = ret.length;\n\t\t} else {\n\t\t\tlen += chunk.length;\n\t\t}\n\t});\n\n\tstream.getBufferedValue = () => {\n\t\tif (array) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn buffer ? Buffer.concat(ret, len) : ret.join('');\n\t};\n\n\tstream.getBufferedLength = () => len;\n\n\treturn stream;\n};\n","'use strict';\nconst bufferStream = require('./buffer-stream');\n\nfunction getStream(inputStream, opts) {\n\tif (!inputStream) {\n\t\treturn Promise.reject(new Error('Expected a stream'));\n\t}\n\n\topts = Object.assign({maxBuffer: Infinity}, opts);\n\n\tconst maxBuffer = opts.maxBuffer;\n\tlet stream;\n\tlet clean;\n\n\tconst p = new Promise((resolve, reject) => {\n\t\tconst error = err => {\n\t\t\tif (err) { // null check\n\t\t\t\terr.bufferedData = stream.getBufferedValue();\n\t\t\t}\n\n\t\t\treject(err);\n\t\t};\n\n\t\tstream = bufferStream(opts);\n\t\tinputStream.once('error', error);\n\t\tinputStream.pipe(stream);\n\n\t\tstream.on('data', () => {\n\t\t\tif (stream.getBufferedLength() > maxBuffer) {\n\t\t\t\treject(new Error('maxBuffer exceeded'));\n\t\t\t}\n\t\t});\n\t\tstream.once('error', error);\n\t\tstream.on('end', resolve);\n\n\t\tclean = () => {\n\t\t\t// some streams doesn't implement the `stream.Readable` interface correctly\n\t\t\tif (inputStream.unpipe) {\n\t\t\t\tinputStream.unpipe(stream);\n\t\t\t}\n\t\t};\n\t});\n\n\tp.then(clean, clean);\n\n\treturn p.then(() => stream.getBufferedValue());\n}\n\nmodule.exports = getStream;\nmodule.exports.buffer = (stream, opts) => getStream(stream, Object.assign({}, opts, {encoding: 'buffer'}));\nmodule.exports.array = (stream, opts) => getStream(stream, Object.assign({}, opts, {array: true}));\n","'use strict';\nconst EventEmitter = require('events');\nconst http = require('http');\nconst https = require('https');\nconst PassThrough = require('stream').PassThrough;\nconst urlLib = require('url');\nconst querystring = require('querystring');\nconst duplexer3 = require('duplexer3');\nconst isStream = require('is-stream');\nconst getStream = require('get-stream');\nconst timedOut = require('timed-out');\nconst urlParseLax = require('url-parse-lax');\nconst lowercaseKeys = require('lowercase-keys');\nconst isRedirect = require('is-redirect');\nconst unzipResponse = require('unzip-response');\nconst createErrorClass = require('create-error-class');\nconst isRetryAllowed = require('is-retry-allowed');\nconst Buffer = require('safe-buffer').Buffer;\nconst pkg = require('./package');\n\nfunction requestAsEventEmitter(opts) {\n\topts = opts || {};\n\n\tconst ee = new EventEmitter();\n\tconst requestUrl = opts.href || urlLib.resolve(urlLib.format(opts), opts.path);\n\tlet redirectCount = 0;\n\tlet retryCount = 0;\n\tlet redirectUrl;\n\n\tconst get = opts => {\n\t\tconst fn = opts.protocol === 'https:' ? https : http;\n\n\t\tconst req = fn.request(opts, res => {\n\t\t\tconst statusCode = res.statusCode;\n\n\t\t\tif (isRedirect(statusCode) && opts.followRedirect && 'location' in res.headers && (opts.method === 'GET' || opts.method === 'HEAD')) {\n\t\t\t\tres.resume();\n\n\t\t\t\tif (++redirectCount > 10) {\n\t\t\t\t\tee.emit('error', new got.MaxRedirectsError(statusCode, opts), null, res);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst bufferString = Buffer.from(res.headers.location, 'binary').toString();\n\n\t\t\t\tredirectUrl = urlLib.resolve(urlLib.format(opts), bufferString);\n\t\t\t\tconst redirectOpts = Object.assign({}, opts, urlLib.parse(redirectUrl));\n\n\t\t\t\tee.emit('redirect', res, redirectOpts);\n\n\t\t\t\tget(redirectOpts);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetImmediate(() => {\n\t\t\t\tconst response = typeof unzipResponse === 'function' && req.method !== 'HEAD' ? unzipResponse(res) : res;\n\t\t\t\tresponse.url = redirectUrl || requestUrl;\n\t\t\t\tresponse.requestUrl = requestUrl;\n\n\t\t\t\tee.emit('response', response);\n\t\t\t});\n\t\t});\n\n\t\treq.once('error', err => {\n\t\t\tconst backoff = opts.retries(++retryCount, err);\n\n\t\t\tif (backoff) {\n\t\t\t\tsetTimeout(get, backoff, opts);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tee.emit('error', new got.RequestError(err, opts));\n\t\t});\n\n\t\tif (opts.gotTimeout) {\n\t\t\ttimedOut(req, opts.gotTimeout);\n\t\t}\n\n\t\tsetImmediate(() => {\n\t\t\tee.emit('request', req);\n\t\t});\n\t};\n\n\tget(opts);\n\treturn ee;\n}\n\nfunction asPromise(opts) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ee = requestAsEventEmitter(opts);\n\n\t\tee.on('request', req => {\n\t\t\tif (isStream(opts.body)) {\n\t\t\t\topts.body.pipe(req);\n\t\t\t\topts.body = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treq.end(opts.body);\n\t\t});\n\n\t\tee.on('response', res => {\n\t\t\tconst stream = opts.encoding === null ? getStream.buffer(res) : getStream(res, opts);\n\n\t\t\tstream\n\t\t\t\t.catch(err => reject(new got.ReadError(err, opts)))\n\t\t\t\t.then(data => {\n\t\t\t\t\tconst statusCode = res.statusCode;\n\t\t\t\t\tconst limitStatusCode = opts.followRedirect ? 299 : 399;\n\n\t\t\t\t\tres.body = data;\n\n\t\t\t\t\tif (opts.json && res.body) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tres.body = JSON.parse(res.body);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow new got.ParseError(e, statusCode, opts, data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (statusCode < 200 || statusCode > limitStatusCode) {\n\t\t\t\t\t\tthrow new got.HTTPError(statusCode, opts);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(res);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tObject.defineProperty(err, 'response', {value: res});\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t});\n\n\t\tee.on('error', reject);\n\t});\n}\n\nfunction asStream(opts) {\n\tconst input = new PassThrough();\n\tconst output = new PassThrough();\n\tconst proxy = duplexer3(input, output);\n\n\tif (opts.json) {\n\t\tthrow new Error('got can not be used as stream when options.json is used');\n\t}\n\n\tif (opts.body) {\n\t\tproxy.write = () => {\n\t\t\tthrow new Error('got\\'s stream is not writable when options.body is used');\n\t\t};\n\t}\n\n\tconst ee = requestAsEventEmitter(opts);\n\n\tee.on('request', req => {\n\t\tproxy.emit('request', req);\n\n\t\tif (isStream(opts.body)) {\n\t\t\topts.body.pipe(req);\n\t\t\treturn;\n\t\t}\n\n\t\tif (opts.body) {\n\t\t\treq.end(opts.body);\n\t\t\treturn;\n\t\t}\n\n\t\tif (opts.method === 'POST' || opts.method === 'PUT' || opts.method === 'PATCH') {\n\t\t\tinput.pipe(req);\n\t\t\treturn;\n\t\t}\n\n\t\treq.end();\n\t});\n\n\tee.on('response', res => {\n\t\tconst statusCode = res.statusCode;\n\n\t\tres.pipe(output);\n\n\t\tif (statusCode < 200 || statusCode > 299) {\n\t\t\tproxy.emit('error', new got.HTTPError(statusCode, opts), null, res);\n\t\t\treturn;\n\t\t}\n\n\t\tproxy.emit('response', res);\n\t});\n\n\tee.on('redirect', proxy.emit.bind(proxy, 'redirect'));\n\tee.on('error', proxy.emit.bind(proxy, 'error'));\n\n\treturn proxy;\n}\n\nfunction normalizeArguments(url, opts) {\n\tif (typeof url !== 'string' && typeof url !== 'object') {\n\t\tthrow new Error(`Parameter \\`url\\` must be a string or object, not ${typeof url}`);\n\t}\n\n\tif (typeof url === 'string') {\n\t\turl = url.replace(/^unix:/, 'http://$&');\n\t\turl = urlParseLax(url);\n\n\t\tif (url.auth) {\n\t\t\tthrow new Error('Basic authentication must be done with auth option');\n\t\t}\n\t}\n\n\topts = Object.assign(\n\t\t{\n\t\t\tprotocol: 'http:',\n\t\t\tpath: '',\n\t\t\tretries: 5\n\t\t},\n\t\turl,\n\t\topts\n\t);\n\n\topts.headers = Object.assign({\n\t\t'user-agent': `${pkg.name}/${pkg.version} (https://github.com/sindresorhus/got)`,\n\t\t'accept-encoding': 'gzip,deflate'\n\t}, lowercaseKeys(opts.headers));\n\n\tconst query = opts.query;\n\n\tif (query) {\n\t\tif (typeof query !== 'string') {\n\t\t\topts.query = querystring.stringify(query);\n\t\t}\n\n\t\topts.path = `${opts.path.split('?')[0]}?${opts.query}`;\n\t\tdelete opts.query;\n\t}\n\n\tif (opts.json && opts.headers.accept === undefined) {\n\t\topts.headers.accept = 'application/json';\n\t}\n\n\tlet body = opts.body;\n\n\tif (body) {\n\t\tif (typeof body !== 'string' && !(body !== null && typeof body === 'object')) {\n\t\t\tthrow new Error('options.body must be a ReadableStream, string, Buffer or plain Object');\n\t\t}\n\n\t\topts.method = opts.method || 'POST';\n\n\t\tif (isStream(body) && typeof body.getBoundary === 'function') {\n\t\t\t// Special case for https://github.com/form-data/form-data\n\t\t\topts.headers['content-type'] = opts.headers['content-type'] || `multipart/form-data; boundary=${body.getBoundary()}`;\n\t\t} else if (body !== null && typeof body === 'object' && !Buffer.isBuffer(body) && !isStream(body)) {\n\t\t\topts.headers['content-type'] = opts.headers['content-type'] || 'application/x-www-form-urlencoded';\n\t\t\tbody = opts.body = querystring.stringify(body);\n\t\t}\n\n\t\tif (opts.headers['content-length'] === undefined && opts.headers['transfer-encoding'] === undefined && !isStream(body)) {\n\t\t\tconst length = typeof body === 'string' ? Buffer.byteLength(body) : body.length;\n\t\t\topts.headers['content-length'] = length;\n\t\t}\n\t}\n\n\topts.method = (opts.method || 'GET').toUpperCase();\n\n\tif (opts.hostname === 'unix') {\n\t\tconst matches = /(.+):(.+)/.exec(opts.path);\n\n\t\tif (matches) {\n\t\t\topts.socketPath = matches[1];\n\t\t\topts.path = matches[2];\n\t\t\topts.host = null;\n\t\t}\n\t}\n\n\tif (typeof opts.retries !== 'function') {\n\t\tconst retries = opts.retries;\n\n\t\topts.retries = (iter, err) => {\n\t\t\tif (iter > retries || !isRetryAllowed(err)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst noise = Math.random() * 100;\n\n\t\t\treturn ((1 << iter) * 1000) + noise;\n\t\t};\n\t}\n\n\tif (opts.followRedirect === undefined) {\n\t\topts.followRedirect = true;\n\t}\n\n\tif (opts.timeout) {\n\t\topts.gotTimeout = opts.timeout;\n\t\tdelete opts.timeout;\n\t}\n\n\treturn opts;\n}\n\nfunction got(url, opts) {\n\ttry {\n\t\treturn asPromise(normalizeArguments(url, opts));\n\t} catch (err) {\n\t\treturn Promise.reject(err);\n\t}\n}\n\nconst helpers = [\n\t'get',\n\t'post',\n\t'put',\n\t'patch',\n\t'head',\n\t'delete'\n];\n\nhelpers.forEach(el => {\n\tgot[el] = (url, opts) => got(url, Object.assign({}, opts, {method: el}));\n});\n\ngot.stream = (url, opts) => asStream(normalizeArguments(url, opts));\n\nfor (const el of helpers) {\n\tgot.stream[el] = (url, opts) => got.stream(url, Object.assign({}, opts, {method: el}));\n}\n\nfunction stdError(error, opts) {\n\tif (error.code !== undefined) {\n\t\tthis.code = error.code;\n\t}\n\n\tObject.assign(this, {\n\t\tmessage: error.message,\n\t\thost: opts.host,\n\t\thostname: opts.hostname,\n\t\tmethod: opts.method,\n\t\tpath: opts.path\n\t});\n}\n\ngot.RequestError = createErrorClass('RequestError', stdError);\ngot.ReadError = createErrorClass('ReadError', stdError);\ngot.ParseError = createErrorClass('ParseError', function (e, statusCode, opts, data) {\n\tstdError.call(this, e, opts);\n\tthis.statusCode = statusCode;\n\tthis.statusMessage = http.STATUS_CODES[this.statusCode];\n\tthis.message = `${e.message} in \"${urlLib.format(opts)}\": \\n${data.slice(0, 77)}...`;\n});\n\ngot.HTTPError = createErrorClass('HTTPError', function (statusCode, opts) {\n\tstdError.call(this, {}, opts);\n\tthis.statusCode = statusCode;\n\tthis.statusMessage = http.STATUS_CODES[this.statusCode];\n\tthis.message = `Response code ${this.statusCode} (${this.statusMessage})`;\n});\n\ngot.MaxRedirectsError = createErrorClass('MaxRedirectsError', function (statusCode, opts) {\n\tstdError.call(this, {}, opts);\n\tthis.statusCode = statusCode;\n\tthis.statusMessage = http.STATUS_CODES[this.statusCode];\n\tthis.message = 'Redirected 10 times. Aborting.';\n});\n\nmodule.exports = got;\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","/* Hjson https://hjson.github.io */\n\"use strict\";\n\nvar common=require(\"./hjson-common\");\n\nfunction makeComment(b, a, x) {\n  var c;\n  if (b) c={ b: b };\n  if (a) (c=c||{}).a=a;\n  if (x) (c=c||{}).x=x;\n  return c;\n}\n\nfunction extractComments(value, root) {\n\n  if (value===null || typeof value!=='object') return;\n  var comments=common.getComment(value);\n  if (comments) common.removeComment(value);\n\n  var i, length; // loop\n  var any, res;\n  if (Object.prototype.toString.apply(value) === '[object Array]') {\n    res={ a: {} };\n    for (i=0, length=value.length; i<length; i++) {\n      if (saveComment(res.a, i, comments.a[i], extractComments(value[i])))\n        any=true;\n    }\n    if (!any && comments.e){\n      res.e=makeComment(comments.e[0], comments.e[1]);\n      any=true;\n    }\n  } else {\n    res={ s: {} };\n\n    // get key order (comments and current)\n    var keys, currentKeys=Object.keys(value);\n    if (comments && comments.o) {\n      keys=[];\n      comments.o.concat(currentKeys).forEach(function(key) {\n        if (Object.prototype.hasOwnProperty.call(value, key) && keys.indexOf(key)<0)\n          keys.push(key);\n      });\n    } else keys=currentKeys;\n    res.o=keys;\n\n    // extract comments\n    for (i=0, length=keys.length; i<length; i++) {\n      var key=keys[i];\n      if (saveComment(res.s, key, comments.c[key], extractComments(value[key])))\n        any=true;\n    }\n    if (!any && comments.e) {\n      res.e=makeComment(comments.e[0], comments.e[1]);\n      any=true;\n    }\n  }\n\n  if (root && comments && comments.r) {\n    res.r=makeComment(comments.r[0], comments.r[1]);\n  }\n\n  return any?res:undefined;\n}\n\nfunction mergeStr() {\n  var res=\"\";\n  [].forEach.call(arguments, function(c) {\n    if (c && c.trim()!==\"\") {\n      if (res) res+=\"; \";\n      res+=c.trim();\n    }\n  });\n  return res;\n}\n\nfunction mergeComments(comments, value) {\n  var dropped=[];\n  merge(comments, value, dropped, []);\n\n  // append dropped comments:\n  if (dropped.length>0) {\n    var text=rootComment(value, null, 1);\n    text+=\"\\n# Orphaned comments:\\n\";\n    dropped.forEach(function(c) {\n      text+=(\"# \"+c.path.join('/')+\": \"+mergeStr(c.b, c.a, c.e)).replace(\"\\n\", \"\\\\n \")+\"\\n\";\n    });\n    rootComment(value, text, 1);\n  }\n}\n\nfunction saveComment(res, key, item, col) {\n  var c=makeComment(item?item[0]:undefined, item?item[1]:undefined, col);\n  if (c) res[key]=c;\n  return c;\n}\n\nfunction droppedComment(path, c) {\n  var res=makeComment(c.b, c.a);\n  res.path=path;\n  return res;\n}\n\nfunction dropAll(comments, dropped, path) {\n\n  if (!comments) return;\n\n  var i, length; // loop\n\n  if (comments.a) {\n\n    for (i=0, length=comments.a.length; i<length; i++) {\n      var kpath=path.slice().concat([i]);\n      var c=comments.a[i];\n      if (c) {\n        dropped.push(droppedComment(kpath, c));\n        dropAll(c.x, dropped, kpath);\n      }\n    }\n  } else if (comments.o) {\n\n    comments.o.forEach(function(key) {\n      var kpath=path.slice().concat([key]);\n      var c=comments.s[key];\n      if (c) {\n        dropped.push(droppedComment(kpath, c));\n        dropAll(c.x, dropped, kpath);\n      }\n    });\n  }\n\n  if (comments.e)\n    dropped.push(droppedComment(path, comments.e));\n}\n\nfunction merge(comments, value, dropped, path) {\n\n  if (!comments) return;\n  if (value===null || typeof value!=='object') {\n    dropAll(comments, dropped, path);\n    return;\n  }\n\n  var i; // loop\n  var setComments=common.createComment(value);\n\n  if (path.length===0 && comments.r)\n    setComments.r=[comments.r.b, comments.r.a];\n\n  if (Object.prototype.toString.apply(value) === '[object Array]') {\n    setComments.a=[];\n    var a=comments.a||{}; // Treating Array like an Object, so using {} for speed\n    for (var key in a) {\n      if (a.hasOwnProperty(key)) {\n        i=parseInt(key);\n        var c=comments.a[key];\n        if (c) {\n          var kpath=path.slice().concat([i]);\n          if (i<value.length) {\n            setComments.a[i]=[c.b, c.a];\n            merge(c.x, value[i], dropped, kpath);\n          } else {\n            dropped.push(droppedComment(kpath, c));\n            dropAll(c.x, dropped, kpath);\n          }\n        }\n      }\n    }\n    if (i===0 && comments.e) setComments.e=[comments.e.b, comments.e.a];\n  } else {\n    setComments.c={};\n    setComments.o=[];\n    (comments.o||[]).forEach(function(key) {\n      var kpath=path.slice().concat([key]);\n      var c=comments.s[key];\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\n        setComments.o.push(key);\n        if (c) {\n          setComments.c[key]=[c.b, c.a];\n          merge(c.x, value[key], dropped, kpath);\n        }\n      } else if (c) {\n        dropped.push(droppedComment(kpath, c));\n        dropAll(c.x, dropped, kpath);\n      }\n    });\n    if (comments.e) setComments.e=[comments.e.b, comments.e.a];\n  }\n}\n\nfunction rootComment(value, setText, header) {\n  var comment=common.createComment(value, common.getComment(value));\n  if (!comment.r) comment.r=[\"\", \"\"];\n  if (setText || setText===\"\") comment.r[header]=common.forceComment(setText);\n  return comment.r[header]||\"\";\n}\n\nmodule.exports={\n  extract: function(value) { return extractComments(value, true); },\n  merge: mergeComments,\n  header: function(value, setText) { return rootComment(value, setText, 0); },\n  footer: function(value, setText) { return rootComment(value, setText, 1); },\n};\n","/* Hjson https://hjson.github.io */\n\"use strict\";\n\nvar os=require('os'); // will be {} when used in a browser\n\nfunction tryParseNumber(text, stopAtNext) {\n\n  // try to parse a number\n\n  var number, string = '', leadingZeros = 0, testLeading = true;\n  var at = 0;\n  var ch;\n  function next() {\n    ch = text.charAt(at);\n    at++;\n    return ch;\n  }\n\n  next();\n  if (ch === '-') {\n    string = '-';\n    next();\n  }\n  while (ch >= '0' && ch <= '9') {\n    if (testLeading) {\n      if (ch == '0') leadingZeros++;\n      else testLeading = false;\n    }\n    string += ch;\n    next();\n  }\n  if (testLeading) leadingZeros--; // single 0 is allowed\n  if (ch === '.') {\n    string += '.';\n    while (next() && ch >= '0' && ch <= '9')\n      string += ch;\n  }\n  if (ch === 'e' || ch === 'E') {\n    string += ch;\n    next();\n    if (ch === '-' || ch === '+') {\n      string += ch;\n      next();\n    }\n    while (ch >= '0' && ch <= '9') {\n      string += ch;\n      next();\n    }\n  }\n\n  // skip white/to (newline)\n  while (ch && ch <= ' ') next();\n\n  if (stopAtNext) {\n    // end scan if we find a punctuator character like ,}] or a comment\n    if (ch === ',' || ch === '}' || ch === ']' ||\n      ch === '#' || ch === '/' && (text[at] === '/' || text[at] === '*')) ch = 0;\n  }\n\n  number = +string;\n  if (ch || leadingZeros || !isFinite(number)) return undefined;\n  else return number;\n}\n\nfunction createComment(value, comment) {\n  if (Object.defineProperty) Object.defineProperty(value, \"__COMMENTS__\", { enumerable: false, writable: true });\n  return (value.__COMMENTS__ = comment||{});\n}\n\nfunction removeComment(value) {\n  Object.defineProperty(value, \"__COMMENTS__\", { value: undefined });\n}\n\nfunction getComment(value) {\n  return value.__COMMENTS__;\n}\n\nfunction forceComment(text) {\n  if (!text) return \"\";\n  var a = text.split('\\n');\n  var str, i, j, len;\n  for (j = 0; j < a.length; j++) {\n    str = a[j];\n    len = str.length;\n    for (i = 0; i < len; i++) {\n      var c = str[i];\n      if (c === '#') break;\n      else if (c === '/' && (str[i+1] === '/' || str[i+1] === '*')) {\n        if (str[i+1] === '*') j = a.length; // assume /**/ covers whole block, bail out\n        break;\n      }\n      else if (c > ' ') {\n        a[j] = '# ' + str;\n        break;\n      }\n    }\n  }\n  return a.join('\\n');\n}\n\nmodule.exports = {\n  EOL: os.EOL || '\\n',\n  tryParseNumber: tryParseNumber,\n  createComment: createComment,\n  removeComment: removeComment,\n  getComment: getComment,\n  forceComment: forceComment,\n};\n","/* Hjson https://hjson.github.io */\n\"use strict\";\n\nfunction loadDsf(col, type) {\n\n  if (Object.prototype.toString.apply(col) !== '[object Array]') {\n    if (col) throw new Error(\"dsf option must contain an array!\");\n    else return nopDsf;\n  } else if (col.length === 0) return nopDsf;\n\n  var dsf = [];\n  function isFunction(f) { return {}.toString.call(f) === '[object Function]'; }\n\n  col.forEach(function(x) {\n    if (!x.name || !isFunction(x.parse) || !isFunction(x.stringify))\n      throw new Error(\"extension does not match the DSF interface\");\n    dsf.push(function() {\n      try {\n        if (type == \"parse\") {\n          return x.parse.apply(null, arguments);\n        } else if (type == \"stringify\") {\n          var res=x.stringify.apply(null, arguments);\n          // check result\n          if (res !== undefined && (typeof res !== \"string\" ||\n            res.length === 0 ||\n            res[0] === '\"' ||\n            [].some.call(res, function(c) { return isInvalidDsfChar(c); })))\n            throw new Error(\"value may not be empty, start with a quote or contain a punctuator character except colon: \" + res);\n          return res;\n        } else throw new Error(\"Invalid type\");\n      } catch (e) {\n        throw new Error(\"DSF-\"+x.name+\" failed; \"+e.message);\n      }\n    });\n  });\n\n  return runDsf.bind(null, dsf);\n}\n\nfunction runDsf(dsf, value) {\n  if (dsf) {\n    for (var i = 0; i < dsf.length; i++) {\n      var res = dsf[i](value);\n      if (res !== undefined) return res;\n    }\n  }\n}\n\nfunction nopDsf(/*value*/) {\n}\n\nfunction isInvalidDsfChar(c) {\n  return c === '{' || c === '}' || c === '[' || c === ']' || c === ',';\n}\n\n\nfunction math(/*opt*/) {\n  return {\n    name: \"math\",\n    parse: function (value) {\n      switch (value) {\n        case \"+inf\":\n        case \"inf\":\n        case \"+Inf\":\n        case \"Inf\": return Infinity;\n        case \"-inf\":\n        case \"-Inf\": return -Infinity;\n        case \"nan\":\n        case \"NaN\": return NaN;\n      }\n    },\n    stringify: function (value) {\n      if (typeof value !== 'number') return;\n      if (1 / value === -Infinity) return \"-0\"; // 0 === -0\n      if (value === Infinity) return \"Inf\";\n      if (value === -Infinity) return \"-Inf\";\n      if (isNaN(value)) return \"NaN\";\n    },\n  };\n}\nmath.description=\"support for Inf/inf, -Inf/-inf, Nan/naN and -0\";\n\nfunction hex(opt) {\n  var out=opt && opt.out;\n  return {\n    name: \"hex\",\n    parse: function (value) {\n      if (/^0x[0-9A-Fa-f]+$/.test(value))\n        return parseInt(value, 16);\n    },\n    stringify: function (value) {\n      if (out && Number.isInteger(value))\n        return \"0x\"+value.toString(16);\n    },\n  };\n}\nhex.description=\"parse hexadecimal numbers prefixed with 0x\";\n\nfunction date(/*opt*/) {\n  return {\n    name: \"date\",\n    parse: function (value) {\n      if (/^\\d{4}-\\d{2}-\\d{2}$/.test(value) ||\n        /^\\d{4}-\\d{2}-\\d{2}T\\d{2}\\:\\d{2}\\:\\d{2}(?:.\\d+)(?:Z|[+-]\\d{2}:\\d{2})$/.test(value)) {\n        var dt = Date.parse(value);\n        if (!isNaN(dt)) return new Date(dt);\n      }\n    },\n    stringify: function (value) {\n      if (Object.prototype.toString.call(value) === '[object Date]') {\n        var dt = value.toISOString();\n        if (dt.indexOf(\"T00:00:00.000Z\", dt.length - 14) !== -1) return dt.substr(0, 10);\n        else return dt;\n      }\n    },\n  };\n}\ndate.description=\"support ISO dates\";\n\nmodule.exports = {\n  loadDsf: loadDsf,\n  std: {\n    math: math,\n    hex: hex,\n    date: date,\n  },\n};\n","/* Hjson https://hjson.github.io */\n\"use strict\";\n\nmodule.exports = function(source, opt) {\n\n  var common = require(\"./hjson-common\");\n  var dsf = require(\"./hjson-dsf\");\n\n  var text;\n  var at;   // The index of the current character\n  var ch;   // The current character\n  var escapee = {\n    '\"': '\"',\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '/': '/',\n    b:  '\\b',\n    f:  '\\f',\n    n:  '\\n',\n    r:  '\\r',\n    t:  '\\t'\n  };\n\n  var keepComments;\n  var runDsf; // domain specific formats\n\n  function resetAt() {\n    at = 0;\n    ch = ' ';\n  }\n\n  function isPunctuatorChar(c) {\n    return c === '{' || c === '}' || c === '[' || c === ']' || c === ',' || c === ':';\n  }\n\n  // Call error when something is wrong.\n  function error(m) {\n    var i, col=0, line=1;\n    for (i = at-1; i > 0 && text[i] !== '\\n'; i--, col++) {}\n    for (; i > 0; i--) if (text[i] === '\\n') line++;\n    throw new Error(m + \" at line \" + line + \",\" + col + \" >>>\" + text.substr(at-col, 20) + \" ...\");\n  }\n\n  function next() {\n    // get the next character.\n    ch = text.charAt(at);\n    at++;\n    return ch;\n  }\n\n  function peek(offs) {\n    // range check is not required\n    return text.charAt(at + offs);\n  }\n\n  function string(allowML) {\n    // Parse a string value.\n    // callers make sure that (ch === '\"' || ch === \"'\")\n    var string = '';\n\n    // When parsing for string values, we must look for \"/' and \\ characters.\n    var exitCh = ch;\n    while (next()) {\n      if (ch === exitCh) {\n        next();\n        if (allowML && exitCh === \"'\" && ch === \"'\" && string.length === 0) {\n          // ''' indicates a multiline string\n          next();\n          return mlString();\n        } else return string;\n      }\n      if (ch === '\\\\') {\n        next();\n        if (ch === 'u') {\n          var uffff = 0;\n          for (var i = 0; i < 4; i++) {\n            next();\n            var c = ch.charCodeAt(0), hex;\n            if (ch >= '0' && ch <= '9') hex = c - 48;\n            else if (ch >= 'a' && ch <= 'f') hex = c - 97 + 0xa;\n            else if (ch >= 'A' && ch <= 'F') hex = c - 65 + 0xa;\n            else error(\"Bad \\\\u char \" + ch);\n            uffff = uffff * 16 + hex;\n          }\n          string += String.fromCharCode(uffff);\n        } else if (typeof escapee[ch] === 'string') {\n          string += escapee[ch];\n        } else break;\n      } else if (ch === '\\n' || ch === '\\r') {\n        error(\"Bad string containing newline\");\n      } else {\n        string += ch;\n      }\n    }\n    error(\"Bad string\");\n  }\n\n  function mlString() {\n    // Parse a multiline string value.\n    var string = '', triple = 0;\n\n    // we are at ''' +1 - get indent\n    var indent = 0;\n    for (;;) {\n      var c=peek(-indent-5);\n      if (!c || c === '\\n') break;\n      indent++;\n    }\n\n    function skipIndent() {\n      var skip = indent;\n      while (ch && ch <= ' ' && ch !== '\\n' && skip-- > 0) next();\n    }\n\n    // skip white/to (newline)\n    while (ch && ch <= ' ' && ch !== '\\n') next();\n    if (ch === '\\n') { next(); skipIndent(); }\n\n    // When parsing multiline string values, we must look for ' characters.\n    for (;;) {\n      if (!ch) {\n        error(\"Bad multiline string\");\n      } else if (ch === '\\'') {\n        triple++;\n        next();\n        if (triple === 3) {\n          if (string.slice(-1) === '\\n') string=string.slice(0, -1); // remove last EOL\n          return string;\n        } else continue;\n      } else {\n        while (triple > 0) {\n          string += '\\'';\n          triple--;\n        }\n      }\n      if (ch === '\\n') {\n        string += '\\n';\n        next();\n        skipIndent();\n      } else {\n        if (ch !== '\\r') string += ch;\n        next();\n      }\n    }\n  }\n\n  function keyname() {\n    // quotes for keys are optional in Hjson\n    // unless they include {}[],: or whitespace.\n\n    if (ch === '\"' || ch === \"'\") return string(false);\n\n    var name = \"\", start = at, space = -1;\n    for (;;) {\n      if (ch === ':') {\n        if (!name) error(\"Found ':' but no key name (for an empty key name use quotes)\");\n        else if (space >=0 && space !== name.length) { at = start + space; error(\"Found whitespace in your key name (use quotes to include)\"); }\n        return name;\n      } else if (ch <= ' ') {\n        if (!ch) error(\"Found EOF while looking for a key name (check your syntax)\");\n        else if (space < 0) space = name.length;\n      } else if (isPunctuatorChar(ch)) {\n        error(\"Found '\" + ch + \"' where a key name was expected (check your syntax or use quotes if the key name includes {}[],: or whitespace)\");\n      } else {\n        name += ch;\n      }\n      next();\n    }\n  }\n\n  function white() {\n    while (ch) {\n      // Skip whitespace.\n      while (ch && ch <= ' ') next();\n      // Hjson allows comments\n      if (ch === '#' || ch === '/' && peek(0) === '/') {\n        while (ch && ch !== '\\n') next();\n      } else if (ch === '/' && peek(0) === '*') {\n        next(); next();\n        while (ch && !(ch === '*' && peek(0) === '/')) next();\n        if (ch) { next(); next(); }\n      } else break;\n    }\n  }\n\n  function tfnns() {\n    // Hjson strings can be quoteless\n    // returns string, true, false, or null.\n    var value = ch;\n    if (isPunctuatorChar(ch))\n      error(\"Found a punctuator character '\" + ch + \"' when expecting a quoteless string (check your syntax)\");\n\n    for(;;) {\n      next();\n      // (detection of ml strings was moved to string())\n      var isEol = ch === '\\r' || ch === '\\n' || ch === '';\n      if (isEol ||\n        ch === ',' || ch === '}' || ch === ']' ||\n        ch === '#' ||\n        ch === '/' && (peek(0) === '/' || peek(0) === '*')\n        ) {\n        // this tests for the case of {true|false|null|num}\n        // followed by { ',' | '}' | ']' | '#' | '//' | '/*' }\n        // which needs to be parsed as the specified value\n        var chf = value[0];\n        switch (chf) {\n          case 'f': if (value.trim() === \"false\") return false; break;\n          case 'n': if (value.trim() === \"null\") return null; break;\n          case 't': if (value.trim() === \"true\") return true; break;\n          default:\n            if (chf === '-' || chf >= '0' && chf <= '9') {\n              var n = common.tryParseNumber(value);\n              if (n !== undefined) return n;\n            }\n        }\n        if (isEol) {\n          // remove any whitespace at the end (ignored in quoteless strings)\n          value = value.trim();\n          var dsfValue = runDsf(value);\n          return dsfValue !== undefined ? dsfValue : value;\n        }\n      }\n      value += ch;\n    }\n  }\n\n  function getComment(cAt, first) {\n    var i;\n    cAt--;\n    // remove trailing whitespace\n    // but only up to EOL\n    for (i = at - 2; i > cAt && text[i] <= ' ' && text[i] !== '\\n'; i--);\n    if (text[i] === '\\n') i--;\n    if (text[i] === '\\r') i--;\n    var res = text.substr(cAt, i-cAt+1);\n    // return if we find anything other than whitespace\n    for (i = 0; i < res.length; i++) {\n      if (res[i] > ' ') {\n        var j = res.indexOf('\\n');\n        if (j >= 0) {\n          var c = [res.substr(0, j), res.substr(j+1)];\n          if (first && c[0].trim().length === 0) c.shift();\n          return c;\n        } else return [res];\n      }\n    }\n    return [];\n  }\n\n  function errorClosingHint(value) {\n    function search(value, ch) {\n      var i, k, length, res;\n      switch (typeof value) {\n        case 'string':\n          if (value.indexOf(ch) >= 0) res = value;\n          break;\n        case 'object':\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\n            for (i = 0, length = value.length; i < length; i++) {\n              res=search(value[i], ch) || res;\n            }\n          } else {\n            for (k in value) {\n              if (!Object.prototype.hasOwnProperty.call(value, k)) continue;\n              res=search(value[k], ch) || res;\n            }\n          }\n      }\n      return res;\n    }\n\n    function report(ch) {\n      var possibleErr=search(value, ch);\n      if (possibleErr) {\n        return \"found '\"+ch+\"' in a string value, your mistake could be with:\\n\"+\n          \"  > \"+possibleErr+\"\\n\"+\n          \"  (unquoted strings contain everything up to the next line!)\";\n      } else return \"\";\n    }\n\n    return report('}') || report(']');\n  }\n\n  function array() {\n    // Parse an array value.\n    // assuming ch === '['\n\n    var array = [];\n    var comments, cAt, nextComment;\n    try {\n      if (keepComments) comments = common.createComment(array, { a: [] });\n\n      next();\n      cAt = at;\n      white();\n      if (comments) nextComment = getComment(cAt, true).join('\\n');\n      if (ch === ']') {\n        next();\n        if (comments) comments.e = [nextComment];\n        return array;  // empty array\n      }\n\n      while (ch) {\n        array.push(value());\n        cAt = at;\n        white();\n        // in Hjson the comma is optional and trailing commas are allowed\n        // note that we do not keep comments before the , if there are any\n        if (ch === ',') { next(); cAt = at; white(); }\n        if (comments) {\n          var c = getComment(cAt);\n          comments.a.push([nextComment||\"\", c[0]||\"\"]);\n          nextComment = c[1];\n        }\n        if (ch === ']') {\n          next();\n          if (comments) comments.a[comments.a.length-1][1] += nextComment||\"\";\n          return array;\n        }\n        white();\n      }\n\n      error(\"End of input while parsing an array (missing ']')\");\n    } catch (e) {\n      e.hint=e.hint||errorClosingHint(array);\n      throw e;\n    }\n  }\n\n  function object(withoutBraces) {\n    // Parse an object value.\n\n    var key = \"\", object = {};\n    var comments, cAt, nextComment;\n\n    try {\n      if (keepComments) comments = common.createComment(object, { c: {}, o: []  });\n\n      if (!withoutBraces) {\n        // assuming ch === '{'\n        next();\n        cAt = at;\n      } else cAt = 1;\n\n      white();\n      if (comments) nextComment = getComment(cAt, true).join('\\n');\n      if (ch === '}' && !withoutBraces) {\n        if (comments) comments.e = [nextComment];\n        next();\n        return object;  // empty object\n      }\n      while (ch) {\n        key = keyname();\n        white();\n        if (ch !== ':') error(\"Expected ':' instead of '\" + ch + \"'\");\n        next();\n        // duplicate keys overwrite the previous value\n        object[key] = value();\n        cAt = at;\n        white();\n        // in Hjson the comma is optional and trailing commas are allowed\n        // note that we do not keep comments before the , if there are any\n        if (ch === ',') { next(); cAt = at; white(); }\n        if (comments) {\n          var c = getComment(cAt);\n          comments.c[key] = [nextComment||\"\", c[0]||\"\"];\n          nextComment = c[1];\n          comments.o.push(key);\n        }\n        if (ch === '}' && !withoutBraces) {\n          next();\n          if (comments) comments.c[key][1] += nextComment||\"\";\n          return object;\n        }\n        white();\n      }\n\n      if (withoutBraces) return object;\n      else error(\"End of input while parsing an object (missing '}')\");\n    } catch (e) {\n      e.hint=e.hint||errorClosingHint(object);\n      throw e;\n    }\n  }\n\n  function value() {\n    // Parse a Hjson value. It could be an object, an array, a string, a number or a word.\n\n    white();\n    switch (ch) {\n      case '{': return object();\n      case '[': return array();\n      case \"'\":\n      case '\"': return string(true);\n      default: return tfnns();\n    }\n  }\n\n  function checkTrailing(v, c) {\n    var cAt = at;\n    white();\n    if (ch) error(\"Syntax error, found trailing characters\");\n    if (keepComments) {\n      var b = c.join('\\n'), a = getComment(cAt).join('\\n');\n      if (a || b) {\n        var comments = common.createComment(v, common.getComment(v));\n        comments.r = [b, a];\n      }\n    }\n    return v;\n  }\n\n  function rootValue() {\n    white();\n    var c = keepComments ? getComment(1) : null;\n    switch (ch) {\n      case '{': return checkTrailing(object(), c);\n      case '[': return checkTrailing(array(), c);\n      default: return checkTrailing(value(), c);\n    }\n  }\n\n  function legacyRootValue() {\n    // Braces for the root object are optional\n    white();\n    var c = keepComments ? getComment(1) : null;\n    switch (ch) {\n      case '{': return checkTrailing(object(), c);\n      case '[': return checkTrailing(array(), c);\n    }\n\n    try {\n      // assume we have a root object without braces\n      return checkTrailing(object(true), c);\n    } catch (e) {\n      // test if we are dealing with a single JSON value instead (true/false/null/num/\"\")\n      resetAt();\n      try { return checkTrailing(value(), c); }\n      catch (e2) { throw e; } // throw original error\n    }\n  }\n\n  if (typeof source!==\"string\") throw new Error(\"source is not a string\");\n  var dsfDef = null;\n  var legacyRoot = true;\n  if (opt && typeof opt === 'object') {\n    keepComments = opt.keepWsc;\n    dsfDef = opt.dsf;\n    legacyRoot = opt.legacyRoot !== false; // default true\n  }\n  runDsf = dsf.loadDsf(dsfDef, \"parse\");\n  text = source;\n  resetAt();\n  return legacyRoot ? legacyRootValue() : rootValue();\n};\n","/* Hjson https://hjson.github.io */\n\"use strict\";\n\nmodule.exports = function(data, opt) {\n\n  var common = require(\"./hjson-common\");\n  var dsf = require(\"./hjson-dsf\");\n\n  var plainToken = {\n    obj:  [ '{', '}' ],\n    arr:  [ '[', ']' ],\n    key:  [ '',  '' ],\n    qkey: [ '\"', '\"' ],\n    col:  [ ':', '' ],\n    com:  [ ',', '' ],\n    str:  [ '', '' ],\n    qstr: [ '\"', '\"' ],\n    mstr: [ \"'''\", \"'''\" ],\n    num:  [ '', '' ],\n    lit:  [ '', '' ],\n    dsf:  [ '', '' ],\n    esc:  [ '\\\\', '' ],\n    uni:  [ '\\\\u', '' ],\n    rem:  [ '', '' ],\n  };\n\n  // options\n  var eol = common.EOL;\n  var indent = '  ';\n  var keepComments = false;\n  var bracesSameLine = false;\n  var quoteKeys = false;\n  var quoteStrings = false;\n  var condense = 0;\n  var multiline = 1; // std=1, no-tabs=2, off=0\n  var separator = ''; // comma separator\n  var dsfDef = null;\n  var sortProps = false;\n  var token = plainToken;\n\n  if (opt && typeof opt === 'object') {\n    opt.quotes = opt.quotes === 'always' ? 'strings' : opt.quotes; // legacy\n\n    if (opt.eol === '\\n' || opt.eol === '\\r\\n') eol = opt.eol;\n    keepComments = opt.keepWsc;\n    condense = opt.condense || 0;\n    bracesSameLine = opt.bracesSameLine;\n    quoteKeys = opt.quotes === 'all' || opt.quotes === 'keys';\n    quoteStrings = opt.quotes === 'all' || opt.quotes === 'strings' || opt.separator === true;\n    if (quoteStrings || opt.multiline == 'off') multiline = 0;\n    else multiline = opt.multiline == 'no-tabs' ? 2 : 1;\n    separator = opt.separator === true ? token.com[0] : '';\n    dsfDef = opt.dsf;\n    sortProps = opt.sortProps;\n\n    // If the space parameter is a number, make an indent string containing that\n    // many spaces. If it is a string, it will be used as the indent string.\n\n    if (typeof opt.space === 'number') {\n      indent = new Array(opt.space + 1).join(' ');\n    } else if (typeof opt.space === 'string') {\n      indent = opt.space;\n    }\n\n    if (opt.colors === true) {\n      token = {\n        obj:  [ '\\x1b[37m{\\x1b[0m', '\\x1b[37m}\\x1b[0m' ],\n        arr:  [ '\\x1b[37m[\\x1b[0m', '\\x1b[37m]\\x1b[0m' ],\n        key:  [ '\\x1b[33m',  '\\x1b[0m' ],\n        qkey: [ '\\x1b[33m\"', '\"\\x1b[0m' ],\n        col:  [ '\\x1b[37m:\\x1b[0m', '' ],\n        com:  [ '\\x1b[37m,\\x1b[0m', '' ],\n        str:  [ '\\x1b[37;1m', '\\x1b[0m' ],\n        qstr: [ '\\x1b[37;1m\"', '\"\\x1b[0m' ],\n        mstr: [ \"\\x1b[37;1m'''\", \"'''\\x1b[0m\" ],\n        num:  [ '\\x1b[36;1m', '\\x1b[0m' ],\n        lit:  [ '\\x1b[36m', '\\x1b[0m' ],\n        dsf:  [ '\\x1b[37m', '\\x1b[0m' ],\n        esc:  [ '\\x1b[31m\\\\', '\\x1b[0m' ],\n        uni:  [ '\\x1b[31m\\\\u', '\\x1b[0m' ],\n        rem:  [ '\\x1b[35m', '\\x1b[0m' ],\n      };\n    }\n\n    var i, ckeys=Object.keys(plainToken);\n    for (i = ckeys.length - 1; i >= 0; i--) {\n      var k = ckeys[i];\n      token[k].push(plainToken[k][0].length, plainToken[k][1].length);\n    }\n  }\n\n  //\n  var runDsf; // domain specific formats\n\n  var commonRange='\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff';\n  // needsEscape tests if the string can be written without escapes\n  var needsEscape = new RegExp('[\\\\\\\\\\\\\"\\x00-\\x1f'+commonRange+']', 'g');\n  // needsQuotes tests if the string can be written as a quoteless string (like needsEscape but without \\\\ and \\\")\n  var needsQuotes = new RegExp('^\\\\s|^\"|^\\'|^#|^\\\\/\\\\*|^\\\\/\\\\/|^\\\\{|^\\\\}|^\\\\[|^\\\\]|^:|^,|\\\\s$|[\\x00-\\x1f'+commonRange+']', 'g');\n  // needsEscapeML tests if the string can be written as a multiline string (like needsEscape but without \\n, \\r, \\\\, \\\", \\t unless multines is 'std')\n  var needsEscapeML = new RegExp('\\'\\'\\'|^[\\\\s]+$|[\\x00-'+(multiline === 2 ? '\\x09' : '\\x08')+'\\x0b\\x0c\\x0e-\\x1f'+commonRange+']', 'g');\n  // starts with a keyword and optionally is followed by a comment\n  var startsWithKeyword = new RegExp('^(true|false|null)\\\\s*((,|\\\\]|\\\\}|#|//|/\\\\*).*)?$');\n  var meta = {\n    // table of character substitutions\n    '\\b': 'b',\n    '\\t': 't',\n    '\\n': 'n',\n    '\\f': 'f',\n    '\\r': 'r',\n    '\"' : '\"',\n    '\\\\': '\\\\'\n  };\n  var needsEscapeName = /[,\\{\\[\\}\\]\\s:#\"']|\\/\\/|\\/\\*/;\n  var gap = '';\n  //\n  var wrapLen = 0;\n\n  function wrap(tk, v) {\n    wrapLen += tk[0].length + tk[1].length - tk[2] - tk[3];\n    return tk[0] + v + tk[1];\n  }\n\n  function quoteReplace(string) {\n    return string.replace(needsEscape, function (a) {\n      var c = meta[a];\n      if (typeof c === 'string') return wrap(token.esc, c);\n      else return wrap(token.uni, ('0000' + a.charCodeAt(0).toString(16)).slice(-4));\n    });\n  }\n\n  function quote(string, gap, hasComment, isRootObject) {\n    if (!string) return wrap(token.qstr, '');\n\n    needsQuotes.lastIndex = 0;\n    startsWithKeyword.lastIndex = 0;\n\n    // Check if we can insert this string without quotes\n    // see hjson syntax (must not parse as true, false, null or number)\n\n    if (quoteStrings || hasComment ||\n      needsQuotes.test(string) ||\n      common.tryParseNumber(string, true) !== undefined ||\n      startsWithKeyword.test(string)) {\n\n      // If the string contains no control characters, no quote characters, and no\n      // backslash characters, then we can safely slap some quotes around it.\n      // Otherwise we first check if the string can be expressed in multiline\n      // format or we must replace the offending characters with safe escape\n      // sequences.\n\n      needsEscape.lastIndex = 0;\n      needsEscapeML.lastIndex = 0;\n      if (!needsEscape.test(string)) return wrap(token.qstr, string);\n      else if (!needsEscapeML.test(string) && !isRootObject && multiline) return mlString(string, gap);\n      else return wrap(token.qstr, quoteReplace(string));\n    } else {\n      // return without quotes\n      return wrap(token.str, string);\n    }\n  }\n\n  function mlString(string, gap) {\n    // wrap the string into the ''' (multiline) format\n\n    var i, a = string.replace(/\\r/g, \"\").split('\\n');\n    gap += indent;\n\n    if (a.length === 1) {\n      // The string contains only a single line. We still use the multiline\n      // format as it avoids escaping the \\ character (e.g. when used in a\n      // regex).\n      return wrap(token.mstr, a[0]);\n    } else {\n      var res = eol + gap + token.mstr[0];\n      for (i = 0; i < a.length; i++) {\n        res += eol;\n        if (a[i]) res += gap + a[i];\n      }\n      return res + eol + gap + token.mstr[1];\n    }\n  }\n\n  function quoteKey(name) {\n    if (!name) return '\"\"';\n\n    // Check if we can insert this key without quotes\n\n    if (quoteKeys || needsEscapeName.test(name)) {\n      needsEscape.lastIndex = 0;\n      return wrap(token.qkey, needsEscape.test(name) ? quoteReplace(name) : name);\n    } else {\n      // return without quotes\n      return wrap(token.key, name);\n    }\n  }\n\n  function str(value, hasComment, noIndent, isRootObject) {\n    // Produce a string from value.\n\n    function startsWithNL(str) { return str && str[str[0] === '\\r' ? 1 : 0] === '\\n'; }\n    function commentOnThisLine(str) { return str && !startsWithNL(str); }\n    function makeComment(str, prefix, trim) {\n      if (!str) return \"\";\n      str = common.forceComment(str);\n      var i, len = str.length;\n      for (i = 0; i < len && str[i] <= ' '; i++) {}\n      if (trim && i > 0) str = str.substr(i);\n      if (i < len) return prefix + wrap(token.rem, str);\n      else return str;\n    }\n\n    // What happens next depends on the value's type.\n\n    // check for DSF\n    var dsfValue = runDsf(value);\n    if (dsfValue !== undefined) return wrap(token.dsf, dsfValue);\n\n    switch (typeof value) {\n      case 'string':\n        return quote(value, gap, hasComment, isRootObject);\n\n      case 'number':\n        // JSON numbers must be finite. Encode non-finite numbers as null.\n        return isFinite(value) ? wrap(token.num, String(value)) : wrap(token.lit, 'null');\n\n      case 'boolean':\n        return wrap(token.lit, String(value));\n\n      case 'object':\n        // If the type is 'object', we might be dealing with an object or an array or\n        // null.\n\n        // Due to a specification blunder in ECMAScript, typeof null is 'object',\n        // so watch out for that case.\n\n        if (!value) return wrap(token.lit, 'null');\n\n        var comments; // whitespace & comments\n        if (keepComments) comments = common.getComment(value);\n\n        var isArray = Object.prototype.toString.apply(value) === '[object Array]';\n\n        // Make an array to hold the partial results of stringifying this object value.\n        var mind = gap;\n        gap += indent;\n        var eolMind = eol + mind;\n        var eolGap = eol + gap;\n        var prefix = noIndent || bracesSameLine ? '' : eolMind;\n        var partial = [];\n        var setsep;\n        // condense helpers:\n        var cpartial = condense ? [] : null;\n        var saveQuoteStrings = quoteStrings, saveMultiline = multiline;\n        var iseparator = separator ? '' : token.com[0];\n        var cwrapLen = 0;\n\n        var i, length; // loop\n        var k, v, vs; // key, value\n        var c, ca;\n        var res, cres;\n\n        if (isArray) {\n          // The value is an array. Stringify every element. Use null as a placeholder\n          // for non-JSON values.\n\n          for (i = 0, length = value.length; i < length; i++) {\n            setsep = i < length -1;\n            if (comments) {\n              c = comments.a[i]||[];\n              ca = commentOnThisLine(c[1]);\n              partial.push(makeComment(c[0], \"\\n\") + eolGap);\n              if (cpartial && (c[0] || c[1] || ca)) cpartial = null;\n            }\n            else partial.push(eolGap);\n            wrapLen = 0;\n            v = value[i];\n            partial.push(str(v, comments ? ca : false, true) + (setsep ? separator : ''));\n            if (cpartial) {\n              // prepare the condensed version\n              switch (typeof v) {\n                case 'string':\n                  wrapLen = 0;\n                  quoteStrings = true; multiline = 0;\n                  cpartial.push(str(v, false, true) + (setsep ? token.com[0] : ''));\n                  quoteStrings = saveQuoteStrings; multiline = saveMultiline;\n                  break;\n                case 'object': if (v) { cpartial = null; break; } // falls through\n                default: cpartial.push(partial[partial.length - 1] + (setsep ? iseparator : '')); break;\n              }\n              if (setsep) wrapLen += token.com[0].length - token.com[2];\n              cwrapLen += wrapLen;\n            }\n            if (comments && c[1]) partial.push(makeComment(c[1], ca ? \" \" : \"\\n\", ca));\n          }\n\n          if (length === 0) {\n            // when empty\n            if (comments && comments.e) partial.push(makeComment(comments.e[0], \"\\n\") + eolMind);\n          }\n          else partial.push(eolMind);\n\n          // Join all of the elements together, separated with newline, and wrap them in\n          // brackets.\n\n          if (partial.length === 0) res = wrap(token.arr, '');\n          else {\n            res = prefix + wrap(token.arr, partial.join(''));\n            // try if the condensed version can fit (parent key name is not included)\n            if (cpartial) {\n              cres = cpartial.join(' ');\n              if (cres.length - cwrapLen <= condense) res = wrap(token.arr, cres);\n            }\n          }\n        } else {\n          // Otherwise, iterate through all of the keys in the object.\n          var commentKeys = comments ? comments.o.slice() : [];\n          var objectKeys = [];\n          for (k in value) {\n            if (Object.prototype.hasOwnProperty.call(value, k) && commentKeys.indexOf(k) < 0)\n              objectKeys.push(k);\n          }\n          if(sortProps) {\n            objectKeys.sort();\n          }\n          var keys = commentKeys.concat(objectKeys);\n\n          for (i = 0, length = keys.length; i < length; i++) {\n            setsep = i < length - 1;\n            k = keys[i];\n            if (comments) {\n              c = comments.c[k]||[];\n              ca = commentOnThisLine(c[1]);\n              partial.push(makeComment(c[0], \"\\n\") + eolGap);\n              if (cpartial && (c[0] || c[1] || ca)) cpartial = null;\n            }\n            else partial.push(eolGap);\n\n            wrapLen = 0;\n            v = value[k];\n            vs = str(v, comments && ca);\n            partial.push(quoteKey(k) + token.col[0] + (startsWithNL(vs) ? '' : ' ') + vs + (setsep ? separator : ''));\n            if (comments && c[1]) partial.push(makeComment(c[1], ca ? \" \" : \"\\n\", ca));\n            if (cpartial) {\n              // prepare the condensed version\n              switch (typeof v) {\n                case 'string':\n                  wrapLen = 0;\n                  quoteStrings = true; multiline = 0;\n                  vs = str(v, false);\n                  quoteStrings = saveQuoteStrings; multiline = saveMultiline;\n                  cpartial.push(quoteKey(k) + token.col[0] + ' ' + vs + (setsep ? token.com[0] : ''));\n                  break;\n                case 'object': if (v) { cpartial = null; break; } // falls through\n                default: cpartial.push(partial[partial.length - 1] + (setsep ? iseparator : '')); break;\n              }\n              wrapLen += token.col[0].length - token.col[2];\n              if (setsep) wrapLen += token.com[0].length - token.com[2];\n              cwrapLen += wrapLen;\n            }\n          }\n          if (length === 0) {\n            // when empty\n            if (comments && comments.e) partial.push(makeComment(comments.e[0], \"\\n\") + eolMind);\n          }\n          else partial.push(eolMind);\n\n          // Join all of the member texts together, separated with newlines\n          if (partial.length === 0) {\n            res = wrap(token.obj, '');\n          } else {\n            // and wrap them in braces\n            res = prefix + wrap(token.obj, partial.join(''));\n            // try if the condensed version can fit\n            if (cpartial) {\n              cres = cpartial.join(' ');\n              if (cres.length - cwrapLen <= condense) res = wrap(token.obj, cres);\n            }\n          }\n        }\n\n        gap = mind;\n        return res;\n    }\n  }\n\n\n  runDsf = dsf.loadDsf(dsfDef, 'stringify');\n\n  var res = \"\";\n  var comments = keepComments ? comments = (common.getComment(data) || {}).r : null;\n  if (comments && comments[0]) res = comments[0] + '\\n';\n\n  // get the result of stringifying the data.\n  res += str(data, null, true, true);\n\n  if (comments) res += comments[1]||\"\";\n\n  return res;\n};\n","module.exports=\"3.2.1\";\n","/*!\n * Hjson v3.2.1\n * https://hjson.github.io\n *\n * Copyright 2014-2017 Christian Zangl, MIT license\n * Details and documentation:\n * https://github.com/hjson/hjson-js\n *\n * This code is based on the the JSON version by Douglas Crockford:\n * https://github.com/douglascrockford/JSON-js (json_parse.js, json2.js)\n */\n\n/*\n\n  This file creates a Hjson object:\n\n\n    Hjson.parse(text, options)\n\n      options {\n        keepWsc     boolean, keep white space and comments. This is useful\n                    if you want to edit an hjson file and save it while\n                    preserving comments (default false)\n\n        dsf         array of DSF (see Hjson.dsf)\n\n        legacyRoot  boolean, support omitting root braces (default true)\n      }\n\n      This method parses Hjson text to produce an object or array.\n      It can throw a SyntaxError exception.\n\n\n    Hjson.stringify(value, options)\n\n      value         any JavaScript value, usually an object or array.\n\n      options {     all options are\n\n        keepWsc     boolean, keep white space. See parse.\n\n        condense    integer, will try to fit objects/arrays onto one line\n                    when the output is shorter than condense characters\n                    and the fragment contains no comments. Default 0 (off).\n\n        bracesSameLine\n                    boolean, makes braces appear on the same line as the key\n                    name. Default false.\n\n        quotes      string, controls how strings are displayed.\n                    setting separator implies \"strings\"\n                    \"min\"     - no quotes whenever possible (default)\n                    \"keys\"    - use quotes around keys\n                    \"strings\" - use quotes around string values\n                    \"all\"     - use quotes around keys and string values\n\n        multiline   string, controls how multiline strings are displayed.\n                    setting quotes implies \"off\"\n                    \"std\"     - strings containing \\n are shown in\n                                multiline format (default)\n                    \"no-tabs\" - like std but disallow tabs\n                    \"off\"     - show in JSON format\n\n        separator   boolean, output a comma separator between elements. Default false.\n\n        space       specifies the indentation of nested structures. If it is\n                    a number, it will specify the number of spaces to indent\n                    at each level. If it is a string (such as '\\t' or '  '),\n                    it contains the characters used to indent at each level.\n\n        eol         specifies the EOL sequence (default is set by\n                    Hjson.setEndOfLine())\n\n        colors      boolean, output ascii color codes\n\n        dsf         array of DSF (see Hjson.dsf)\n\n        emitRootBraces\n                    obsolete: will always emit braces\n\n        sortProps\n                    When serializing objects into hjson, order the keys based on\n                    their UTF-16 code units order\n      }\n\n      This method produces Hjson text from a JavaScript value.\n\n      Values that do not have JSON representations, such as undefined or\n      functions, will not be serialized. Such values in objects will be\n      dropped; in arrays they will be replaced with null.\n      stringify(undefined) returns undefined.\n\n\n    Hjson.endOfLine()\n    Hjson.setEndOfLine(eol)\n\n      Gets or sets the stringify EOL sequence ('\\n' or '\\r\\n').\n      When running with node.js this defaults to os.EOL.\n\n\n    Hjson.rt { parse, stringify }\n\n      This is a shortcut to roundtrip your comments when reading and updating\n      a config file. It is the same as specifying the keepWsc option for the\n      parse and stringify functions.\n\n\n    Hjson.version\n\n      The version of this library.\n\n\n    Hjson.dsf\n\n      Domain specific formats are extensions to the Hjson syntax (see\n      hjson.github.io). These formats will be parsed and made available to\n      the application in place of strings (e.g. enable math to allow\n      NaN values).\n\n      Hjson.dsf ontains standard DSFs that can be passed to parse\n      and stringify.\n\n\n    Hjson.dsf.math()\n\n      Enables support for Inf/inf, -Inf/-inf, Nan/naN and -0.\n      Will output as Inf, -Inf, NaN and -0.\n\n\n    Hjson.dsf.hex(options)\n\n      Parse hexadecimal numbers prefixed with 0x.\n      set options.out = true to stringify _all_ integers as hex.\n\n\n    Hjson.dsf.date(options)\n\n      support ISO dates\n\n\n  This is a reference implementation. You are free to copy, modify, or\n  redistribute.\n\n*/\n\n\"use strict\";\n\nvar common = require(\"./hjson-common\");\nvar version = require(\"./hjson-version\");\nvar parse = require(\"./hjson-parse\");\nvar stringify = require(\"./hjson-stringify\");\nvar comments = require(\"./hjson-comments\");\nvar dsf = require(\"./hjson-dsf\");\n\nmodule.exports={\n\n  parse: parse,\n  stringify: stringify,\n\n  endOfLine: function() { return common.EOL; },\n  setEndOfLine: function(eol) {\n    if (eol === '\\n' || eol === '\\r\\n') common.EOL = eol;\n  },\n\n  version: version,\n\n  // round trip shortcut\n  rt: {\n    parse: function(text, options) {\n      (options=options||{}).keepWsc=true;\n      return parse(text, options);\n    },\n    stringify: function(value, options) {\n      (options=options||{}).keepWsc=true;\n      return stringify(value, options);\n    },\n  },\n\n  comments: comments,\n\n  dsf: dsf.std,\n\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst net_1 = __importDefault(require(\"net\"));\nconst tls_1 = __importDefault(require(\"tls\"));\nconst url_1 = __importDefault(require(\"url\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst agent_base_1 = require(\"agent-base\");\nconst parse_proxy_response_1 = __importDefault(require(\"./parse-proxy-response\"));\nconst debug = debug_1.default('https-proxy-agent:agent');\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n *\n * @api public\n */\nclass HttpsProxyAgent extends agent_base_1.Agent {\n    constructor(_opts) {\n        let opts;\n        if (typeof _opts === 'string') {\n            opts = url_1.default.parse(_opts);\n        }\n        else {\n            opts = _opts;\n        }\n        if (!opts) {\n            throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n        }\n        debug('creating new HttpsProxyAgent instance: %o', opts);\n        super(opts);\n        const proxy = Object.assign({}, opts);\n        // If `true`, then connect to the proxy server over TLS.\n        // Defaults to `false`.\n        this.secureProxy = opts.secureProxy || isHTTPS(proxy.protocol);\n        // Prefer `hostname` over `host`, and set the `port` if needed.\n        proxy.host = proxy.hostname || proxy.host;\n        if (typeof proxy.port === 'string') {\n            proxy.port = parseInt(proxy.port, 10);\n        }\n        if (!proxy.port && proxy.host) {\n            proxy.port = this.secureProxy ? 443 : 80;\n        }\n        // ALPN is supported by Node.js >= v5.\n        // attempt to negotiate http/1.1 for proxy servers that support http/2\n        if (this.secureProxy && !('ALPNProtocols' in proxy)) {\n            proxy.ALPNProtocols = ['http 1.1'];\n        }\n        if (proxy.host && proxy.path) {\n            // If both a `host` and `path` are specified then it's most likely\n            // the result of a `url.parse()` call... we need to remove the\n            // `path` portion so that `net.connect()` doesn't attempt to open\n            // that as a Unix socket file.\n            delete proxy.path;\n            delete proxy.pathname;\n        }\n        this.proxy = proxy;\n    }\n    /**\n     * Called when the node-core HTTP client library is creating a\n     * new HTTP request.\n     *\n     * @api protected\n     */\n    callback(req, opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { proxy, secureProxy } = this;\n            // Create a socket connection to the proxy server.\n            let socket;\n            if (secureProxy) {\n                debug('Creating `tls.Socket`: %o', proxy);\n                socket = tls_1.default.connect(proxy);\n            }\n            else {\n                debug('Creating `net.Socket`: %o', proxy);\n                socket = net_1.default.connect(proxy);\n            }\n            const headers = Object.assign({}, proxy.headers);\n            const hostname = `${opts.host}:${opts.port}`;\n            let payload = `CONNECT ${hostname} HTTP/1.1\\r\\n`;\n            // Inject the `Proxy-Authorization` header if necessary.\n            if (proxy.auth) {\n                headers['Proxy-Authorization'] = `Basic ${Buffer.from(proxy.auth).toString('base64')}`;\n            }\n            // The `Host` header should only include the port\n            // number when it is not the default port.\n            let { host, port, secureEndpoint } = opts;\n            if (!isDefaultPort(port, secureEndpoint)) {\n                host += `:${port}`;\n            }\n            headers.Host = host;\n            headers.Connection = 'close';\n            for (const name of Object.keys(headers)) {\n                payload += `${name}: ${headers[name]}\\r\\n`;\n            }\n            const proxyResponsePromise = parse_proxy_response_1.default(socket);\n            socket.write(`${payload}\\r\\n`);\n            const { statusCode, buffered } = yield proxyResponsePromise;\n            if (statusCode === 200) {\n                req.once('socket', resume);\n                if (opts.secureEndpoint) {\n                    const servername = opts.servername || opts.host;\n                    if (!servername) {\n                        throw new Error('Could not determine \"servername\"');\n                    }\n                    // The proxy is connecting to a TLS server, so upgrade\n                    // this socket connection to a TLS connection.\n                    debug('Upgrading socket connection to TLS');\n                    return tls_1.default.connect(Object.assign(Object.assign({}, omit(opts, 'host', 'hostname', 'path', 'port')), { socket,\n                        servername }));\n                }\n                return socket;\n            }\n            // Some other status code that's not 200... need to re-play the HTTP\n            // header \"data\" events onto the socket once the HTTP machinery is\n            // attached so that the node core `http` can parse and handle the\n            // error status code.\n            // Close the original socket, and a new \"fake\" socket is returned\n            // instead, so that the proxy doesn't get the HTTP request\n            // written to it (which may contain `Authorization` headers or other\n            // sensitive data).\n            //\n            // See: https://hackerone.com/reports/541502\n            socket.destroy();\n            const fakeSocket = new net_1.default.Socket();\n            fakeSocket.readable = true;\n            // Need to wait for the \"socket\" event to re-play the \"data\" events.\n            req.once('socket', (s) => {\n                debug('replaying proxy buffer for failed request');\n                assert_1.default(s.listenerCount('data') > 0);\n                // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n                // this point the HTTP module machinery has been hooked up for\n                // the user.\n                s.push(buffered);\n                s.push(null);\n            });\n            return fakeSocket;\n        });\n    }\n}\nexports.default = HttpsProxyAgent;\nfunction resume(socket) {\n    socket.resume();\n}\nfunction isDefaultPort(port, secure) {\n    return Boolean((!secure && port === 80) || (secure && port === 443));\n}\nfunction isHTTPS(protocol) {\n    return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;\n}\nfunction omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n//# sourceMappingURL=agent.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst agent_1 = __importDefault(require(\"./agent\"));\nfunction createHttpsProxyAgent(opts) {\n    return new agent_1.default(opts);\n}\n(function (createHttpsProxyAgent) {\n    createHttpsProxyAgent.HttpsProxyAgent = agent_1.default;\n    createHttpsProxyAgent.prototype = agent_1.default.prototype;\n})(createHttpsProxyAgent || (createHttpsProxyAgent = {}));\nmodule.exports = createHttpsProxyAgent;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = debug_1.default('https-proxy-agent:parse-proxy-response');\nfunction parseProxyResponse(socket) {\n    return new Promise((resolve, reject) => {\n        // we need to buffer any HTTP traffic that happens with the proxy before we get\n        // the CONNECT response, so that if the response is anything other than an \"200\"\n        // response code, then we can re-play the \"data\" events on the socket once the\n        // HTTP parser is hooked up...\n        let buffersLength = 0;\n        const buffers = [];\n        function read() {\n            const b = socket.read();\n            if (b)\n                ondata(b);\n            else\n                socket.once('readable', read);\n        }\n        function cleanup() {\n            socket.removeListener('end', onend);\n            socket.removeListener('error', onerror);\n            socket.removeListener('close', onclose);\n            socket.removeListener('readable', read);\n        }\n        function onclose(err) {\n            debug('onclose had error %o', err);\n        }\n        function onend() {\n            debug('onend');\n        }\n        function onerror(err) {\n            cleanup();\n            debug('onerror %o', err);\n            reject(err);\n        }\n        function ondata(b) {\n            buffers.push(b);\n            buffersLength += b.length;\n            const buffered = Buffer.concat(buffers, buffersLength);\n            const endOfHeaders = buffered.indexOf('\\r\\n\\r\\n');\n            if (endOfHeaders === -1) {\n                // keep buffering\n                debug('have not received end of HTTP headers yet...');\n                read();\n                return;\n            }\n            const firstLine = buffered.toString('ascii', 0, buffered.indexOf('\\r\\n'));\n            const statusCode = +firstLine.split(' ')[1];\n            debug('got proxy server response: %o', firstLine);\n            resolve({\n                statusCode,\n                buffered\n            });\n        }\n        socket.on('error', onerror);\n        socket.on('close', onclose);\n        socket.on('end', onend);\n        read();\n    });\n}\nexports.default = parseProxyResponse;\n//# sourceMappingURL=parse-proxy-response.js.map","'use strict';\nmodule.exports = function (x) {\n\tif (typeof x !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n\n\treturn x === 300 ||\n\t\tx === 301 ||\n\t\tx === 302 ||\n\t\tx === 303 ||\n\t\tx === 305 ||\n\t\tx === 307 ||\n\t\tx === 308;\n};\n","'use strict';\n\nvar WHITELIST = [\n\t'ETIMEDOUT',\n\t'ECONNRESET',\n\t'EADDRINUSE',\n\t'ESOCKETTIMEDOUT',\n\t'ECONNREFUSED',\n\t'EPIPE',\n\t'EHOSTUNREACH',\n\t'EAI_AGAIN'\n];\n\nvar BLACKLIST = [\n\t'ENOTFOUND',\n\t'ENETUNREACH',\n\n\t// SSL errors from https://github.com/nodejs/node/blob/ed3d8b13ee9a705d89f9e0397d9e96519e7e47ac/src/node_crypto.cc#L1950\n\t'UNABLE_TO_GET_ISSUER_CERT',\n\t'UNABLE_TO_GET_CRL',\n\t'UNABLE_TO_DECRYPT_CERT_SIGNATURE',\n\t'UNABLE_TO_DECRYPT_CRL_SIGNATURE',\n\t'UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY',\n\t'CERT_SIGNATURE_FAILURE',\n\t'CRL_SIGNATURE_FAILURE',\n\t'CERT_NOT_YET_VALID',\n\t'CERT_HAS_EXPIRED',\n\t'CRL_NOT_YET_VALID',\n\t'CRL_HAS_EXPIRED',\n\t'ERROR_IN_CERT_NOT_BEFORE_FIELD',\n\t'ERROR_IN_CERT_NOT_AFTER_FIELD',\n\t'ERROR_IN_CRL_LAST_UPDATE_FIELD',\n\t'ERROR_IN_CRL_NEXT_UPDATE_FIELD',\n\t'OUT_OF_MEM',\n\t'DEPTH_ZERO_SELF_SIGNED_CERT',\n\t'SELF_SIGNED_CERT_IN_CHAIN',\n\t'UNABLE_TO_GET_ISSUER_CERT_LOCALLY',\n\t'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n\t'CERT_CHAIN_TOO_LONG',\n\t'CERT_REVOKED',\n\t'INVALID_CA',\n\t'PATH_LENGTH_EXCEEDED',\n\t'INVALID_PURPOSE',\n\t'CERT_UNTRUSTED',\n\t'CERT_REJECTED'\n];\n\nmodule.exports = function (err) {\n\tif (!err || !err.code) {\n\t\treturn true;\n\t}\n\n\tif (WHITELIST.indexOf(err.code) !== -1) {\n\t\treturn true;\n\t}\n\n\tif (BLACKLIST.indexOf(err.code) !== -1) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar isStream = module.exports = function (stream) {\n\treturn stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function';\n};\n\nisStream.writable = function (stream) {\n\treturn isStream(stream) && stream.writable !== false && typeof stream._write === 'function' && typeof stream._writableState === 'object';\n};\n\nisStream.readable = function (stream) {\n\treturn isStream(stream) && stream.readable !== false && typeof stream._read === 'function' && typeof stream._readableState === 'object';\n};\n\nisStream.duplex = function (stream) {\n\treturn isStream.writable(stream) && isStream.readable(stream);\n};\n\nisStream.transform = function (stream) {\n\treturn isStream.duplex(stream) && typeof stream._transform === 'function' && typeof stream._transformState === 'object';\n};\n","'use strict';\nmodule.exports = function (obj) {\n\tvar ret = {};\n\tvar keys = Object.keys(Object(obj));\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tret[keys[i].toLowerCase()] = obj[keys[i]];\n\t}\n\n\treturn ret;\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\nmodule.exports = function (url) {\n\tif (typeof url !== 'string') {\n\t\tthrow new TypeError('Expected a string, got ' + typeof url);\n\t}\n\n\turl = url.trim();\n\n\tif (/^\\.*\\/|^(?!localhost)\\w+:/.test(url)) {\n\t\treturn url;\n\t}\n\n\treturn url.replace(/^(?!(?:\\w+:)?\\/\\/)/, 'http://');\n};\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","var url = require('url');\n\nfunction matchDomain(hostname, no_proxy) {\n  var hostnameArray = hostname.split(\".\");\n  // Remove any empty elements from the no_proxy\n  var no_proxyArrayWithBlanks = no_proxy.split(\".\");\n  var no_proxyArray = [];\n  // Get rid of the trailing 0's so we match the broadest subnet\n  for (var i = 0; i < no_proxyArrayWithBlanks.length; i++) {\n    if (no_proxyArrayWithBlanks[i] === \"\") {\n      continue;\n    }\n    no_proxyArray.push(no_proxyArrayWithBlanks[i]);\n  }\n  // Match in reverse order, all of the no_proxy should match\n  // So that subdomains work\n  // for example\n  // [ 'something', 'internal', 'com' ] [ '', 'interal', 'com' ]\n  // match\n  // [ 'something', 'external', 'com' ] [ '', 'interal', 'com' ]\n  // no match\n  // [ 'something', 'internal', 'com' ] [ 'other', 'interal', 'com' ]\n  // no match\n  var matchedAll = no_proxyArray.length;\n  var matches = 0;\n  // Where to start matching\n  var hostnameIndex = hostnameArray.length - 1;\n  // Where to start matching\n  var no_proxyIndex = no_proxyArray.length - 1;\n  // Count all the matched numbers\n  while (hostnameIndex > -1 && no_proxyIndex > -1) {\n    if (hostnameArray[hostnameIndex] === no_proxyArray[no_proxyIndex]) {\n      ++matches;\n    }\n    --hostnameIndex;\n    --no_proxyIndex;\n  }\n  // If its the amount we needed then yes it is in the network\n  if (matchedAll == matches) {\n    return true;\n  }\n  // Ips didnt match its not in the network\n  return false;\n}\n\nfunction matchNetwork(ip, network) {\n  // This is lazy because we ignore whats after the slash\n  // But hey at least we have no_proxy now right\n  network = network.split(\"/\")[0];\n  // Make some arrays of numbers to match\n  var ipArray = ip.split(\".\");\n  var networkArrayWithZeros = network.split(\".\");\n  var networkArray = [];\n  // Get rid of the trailing 0's so we match the broadest subnet\n  for (var i = 0; i < networkArrayWithZeros.length; i++) {\n    if (networkArrayWithZeros[i] === \"0\") {\n      break;\n    }\n    networkArray.push(networkArrayWithZeros[i]);\n  }\n  // The length of the networkArray without zeros is the number\n  // of numbers that need to match, for example\n  // ip: [ '192', '168', '0', '1' ] network: [ '192', '168' ]\n  // match\n  // ip: [ '192', '169', '0', '1' ] network: [ '192', '168' ]\n  // no match\n  // ip: [ '127', '0', '0', '1' ] network: [ '127' ]\n  // match\n  var matchedAll = networkArray.length;\n  var matches = 0;\n  // Count all the matched numbers\n  for (var i = 0; i < ipArray.length && i < networkArray.length; i++) {\n    if (ipArray[i] === networkArray[i]) {\n      ++matches;\n    }\n  }\n  // If its the amount we needed then yes it is in the network\n  if (matchedAll == matches) {\n    return true;\n  }\n  // Ips didnt match its not in the network\n  return false;\n}\n\nfunction getNoProxy(options) {\n  var no_proxy = \"\";\n  if (typeof options !== \"undefined\") {\n    if (typeof options[\"no_proxy\"] !== \"undefined\") {\n      no_proxy = options[\"no_proxy\"];\n    }\n  } else if (typeof process.env[\"no_proxy\"] !== \"undefined\") {\n    no_proxy = process.env[\"no_proxy\"];\n  }\n  return no_proxy.split(\",\");\n}\n\nfunction matchNoProxy(requestUrl, no_proxy) {\n  var parsedUrl = url.parse(requestUrl);\n  var hostname = parsedUrl.hostname;\n  // If the hostname is null then dont proxy, we cant check\n  if (hostname == null) {\n    return false;\n    // If the hostname is the no_proxy then its a match\n  } else if (hostname === no_proxy) {\n    return true;\n    // If the ip matches a no_proxy subnet\n  } else if (matchNetwork(hostname, no_proxy)) {\n    return true;\n    // If the host matches a domain / subdomain\n  } else if (matchDomain(hostname, no_proxy)) {\n    return true;\n  }\n  return false;\n}\n\nfunction shouldProxy(requestUrl, options) {\n  // Get the no_proxy list\n  var no_proxy = getNoProxy(options);\n  // There is no no_proxy list so proxy everything\n  if (no_proxy.length < 1 || no_proxy[0].length < 1) {\n    return true;\n  }\n  // There is a no_proxy list so check if this should be proxied\n  for (var i = 0; i < no_proxy.length; i++) {\n    // If the requestUrl matches the no_proxy string return false\n    // meaning should not proxy\n    if (matchNoProxy(requestUrl, no_proxy[i])) {\n      return false;\n    }\n  }\n  // Url did not match no_proxy list so do proxy\n  return true;\n}\n\nmodule.exports = shouldProxy;\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","'use strict';\n\nmodule.exports = function (req, time) {\n\tif (req.timeoutTimer) {\n\t\treturn req;\n\t}\n\n\tvar delays = isNaN(time) ? time : {socket: time, connect: time};\n\tvar host = req._headers ? (' to ' + req._headers.host) : '';\n\n\tif (delays.connect !== undefined) {\n\t\treq.timeoutTimer = setTimeout(function timeoutHandler() {\n\t\t\treq.abort();\n\t\t\tvar e = new Error('Connection timed out on request' + host);\n\t\t\te.code = 'ETIMEDOUT';\n\t\t\treq.emit('error', e);\n\t\t}, delays.connect);\n\t}\n\n\t// Clear the connection timeout timer once a socket is assigned to the\n\t// request and is connected.\n\treq.on('socket', function assign(socket) {\n\t\t// Socket may come from Agent pool and may be already connected.\n\t\tif (!(socket.connecting || socket._connecting)) {\n\t\t\tconnect();\n\t\t\treturn;\n\t\t}\n\n\t\tsocket.once('connect', connect);\n\t});\n\n\tfunction clear() {\n\t\tif (req.timeoutTimer) {\n\t\t\tclearTimeout(req.timeoutTimer);\n\t\t\treq.timeoutTimer = null;\n\t\t}\n\t}\n\n\tfunction connect() {\n\t\tclear();\n\n\t\tif (delays.socket !== undefined) {\n\t\t\t// Abort the request if there is no activity on the socket for more\n\t\t\t// than `delays.socket` milliseconds.\n\t\t\treq.setTimeout(delays.socket, function socketTimeoutHandler() {\n\t\t\t\treq.abort();\n\t\t\t\tvar e = new Error('Socket timed out on request' + host);\n\t\t\t\te.code = 'ESOCKETTIMEDOUT';\n\t\t\t\treq.emit('error', e);\n\t\t\t});\n\t\t}\n\t}\n\n\treturn req.on('error', clear);\n};\n","'use strict';\nconst PassThrough = require('stream').PassThrough;\nconst zlib = require('zlib');\n\nmodule.exports = res => {\n\t// TODO: use Array#includes when targeting Node.js 6\n\tif (['gzip', 'deflate'].indexOf(res.headers['content-encoding']) === -1) {\n\t\treturn res;\n\t}\n\n\tconst unzip = zlib.createUnzip();\n\tconst stream = new PassThrough();\n\n\tstream.httpVersion = res.httpVersion;\n\tstream.headers = res.headers;\n\tstream.rawHeaders = res.rawHeaders;\n\tstream.trailers = res.trailers;\n\tstream.rawTrailers = res.rawTrailers;\n\tstream.setTimeout = res.setTimeout.bind(res);\n\tstream.statusCode = res.statusCode;\n\tstream.statusMessage = res.statusMessage;\n\tstream.socket = res.socket;\n\n\tunzip.on('error', err => {\n\t\tif (err.code === 'Z_BUF_ERROR') {\n\t\t\tstream.end();\n\t\t\treturn;\n\t\t}\n\n\t\tstream.emit('error', err);\n\t});\n\n\tres.pipe(unzip).pipe(stream);\n\n\treturn stream;\n};\n","'use strict';\nvar url = require('url');\nvar prependHttp = require('prepend-http');\n\nmodule.exports = function (x) {\n\tvar withProtocol = prependHttp(x);\n\tvar parsed = url.parse(withProtocol);\n\n\tif (withProtocol !== x) {\n\t\tparsed.protocol = null;\n\t}\n\n\treturn parsed;\n};\n","// Generated by CoffeeScript 1.10.0\nvar slice = [].slice;\n\n(function(root, factory) {\n  if (('function' === typeof define) && (define.amd != null)) {\n    return define([], factory);\n  } else if (typeof exports !== \"undefined\" && exports !== null) {\n    return module.exports = factory();\n  } else {\n    return root.UrlPattern = factory();\n  }\n})(this, function() {\n  var P, UrlPattern, astNodeContainsSegmentsForProvidedParams, astNodeToNames, astNodeToRegexString, baseAstNodeToRegexString, concatMap, defaultOptions, escapeForRegex, getParam, keysAndValuesToObject, newParser, regexGroupCount, stringConcatMap, stringify;\n  escapeForRegex = function(string) {\n    return string.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  };\n  concatMap = function(array, f) {\n    var i, length, results;\n    results = [];\n    i = -1;\n    length = array.length;\n    while (++i < length) {\n      results = results.concat(f(array[i]));\n    }\n    return results;\n  };\n  stringConcatMap = function(array, f) {\n    var i, length, result;\n    result = '';\n    i = -1;\n    length = array.length;\n    while (++i < length) {\n      result += f(array[i]);\n    }\n    return result;\n  };\n  regexGroupCount = function(regex) {\n    return (new RegExp(regex.toString() + '|')).exec('').length - 1;\n  };\n  keysAndValuesToObject = function(keys, values) {\n    var i, key, length, object, value;\n    object = {};\n    i = -1;\n    length = keys.length;\n    while (++i < length) {\n      key = keys[i];\n      value = values[i];\n      if (value == null) {\n        continue;\n      }\n      if (object[key] != null) {\n        if (!Array.isArray(object[key])) {\n          object[key] = [object[key]];\n        }\n        object[key].push(value);\n      } else {\n        object[key] = value;\n      }\n    }\n    return object;\n  };\n  P = {};\n  P.Result = function(value, rest) {\n    this.value = value;\n    this.rest = rest;\n  };\n  P.Tagged = function(tag, value) {\n    this.tag = tag;\n    this.value = value;\n  };\n  P.tag = function(tag, parser) {\n    return function(input) {\n      var result, tagged;\n      result = parser(input);\n      if (result == null) {\n        return;\n      }\n      tagged = new P.Tagged(tag, result.value);\n      return new P.Result(tagged, result.rest);\n    };\n  };\n  P.regex = function(regex) {\n    return function(input) {\n      var matches, result;\n      matches = regex.exec(input);\n      if (matches == null) {\n        return;\n      }\n      result = matches[0];\n      return new P.Result(result, input.slice(result.length));\n    };\n  };\n  P.sequence = function() {\n    var parsers;\n    parsers = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return function(input) {\n      var i, length, parser, rest, result, values;\n      i = -1;\n      length = parsers.length;\n      values = [];\n      rest = input;\n      while (++i < length) {\n        parser = parsers[i];\n        result = parser(rest);\n        if (result == null) {\n          return;\n        }\n        values.push(result.value);\n        rest = result.rest;\n      }\n      return new P.Result(values, rest);\n    };\n  };\n  P.pick = function() {\n    var indexes, parsers;\n    indexes = arguments[0], parsers = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return function(input) {\n      var array, result;\n      result = P.sequence.apply(P, parsers)(input);\n      if (result == null) {\n        return;\n      }\n      array = result.value;\n      result.value = array[indexes];\n      return result;\n    };\n  };\n  P.string = function(string) {\n    var length;\n    length = string.length;\n    return function(input) {\n      if (input.slice(0, length) === string) {\n        return new P.Result(string, input.slice(length));\n      }\n    };\n  };\n  P.lazy = function(fn) {\n    var cached;\n    cached = null;\n    return function(input) {\n      if (cached == null) {\n        cached = fn();\n      }\n      return cached(input);\n    };\n  };\n  P.baseMany = function(parser, end, stringResult, atLeastOneResultRequired, input) {\n    var endResult, parserResult, rest, results;\n    rest = input;\n    results = stringResult ? '' : [];\n    while (true) {\n      if (end != null) {\n        endResult = end(rest);\n        if (endResult != null) {\n          break;\n        }\n      }\n      parserResult = parser(rest);\n      if (parserResult == null) {\n        break;\n      }\n      if (stringResult) {\n        results += parserResult.value;\n      } else {\n        results.push(parserResult.value);\n      }\n      rest = parserResult.rest;\n    }\n    if (atLeastOneResultRequired && results.length === 0) {\n      return;\n    }\n    return new P.Result(results, rest);\n  };\n  P.many1 = function(parser) {\n    return function(input) {\n      return P.baseMany(parser, null, false, true, input);\n    };\n  };\n  P.concatMany1Till = function(parser, end) {\n    return function(input) {\n      return P.baseMany(parser, end, true, true, input);\n    };\n  };\n  P.firstChoice = function() {\n    var parsers;\n    parsers = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return function(input) {\n      var i, length, parser, result;\n      i = -1;\n      length = parsers.length;\n      while (++i < length) {\n        parser = parsers[i];\n        result = parser(input);\n        if (result != null) {\n          return result;\n        }\n      }\n    };\n  };\n  newParser = function(options) {\n    var U;\n    U = {};\n    U.wildcard = P.tag('wildcard', P.string(options.wildcardChar));\n    U.optional = P.tag('optional', P.pick(1, P.string(options.optionalSegmentStartChar), P.lazy(function() {\n      return U.pattern;\n    }), P.string(options.optionalSegmentEndChar)));\n    U.name = P.regex(new RegExp(\"^[\" + options.segmentNameCharset + \"]+\"));\n    U.named = P.tag('named', P.pick(1, P.string(options.segmentNameStartChar), P.lazy(function() {\n      return U.name;\n    })));\n    U.escapedChar = P.pick(1, P.string(options.escapeChar), P.regex(/^./));\n    U[\"static\"] = P.tag('static', P.concatMany1Till(P.firstChoice(P.lazy(function() {\n      return U.escapedChar;\n    }), P.regex(/^./)), P.firstChoice(P.string(options.segmentNameStartChar), P.string(options.optionalSegmentStartChar), P.string(options.optionalSegmentEndChar), U.wildcard)));\n    U.token = P.lazy(function() {\n      return P.firstChoice(U.wildcard, U.optional, U.named, U[\"static\"]);\n    });\n    U.pattern = P.many1(P.lazy(function() {\n      return U.token;\n    }));\n    return U;\n  };\n  defaultOptions = {\n    escapeChar: '\\\\',\n    segmentNameStartChar: ':',\n    segmentValueCharset: 'a-zA-Z0-9-_~ %',\n    segmentNameCharset: 'a-zA-Z0-9',\n    optionalSegmentStartChar: '(',\n    optionalSegmentEndChar: ')',\n    wildcardChar: '*'\n  };\n  baseAstNodeToRegexString = function(astNode, segmentValueCharset) {\n    if (Array.isArray(astNode)) {\n      return stringConcatMap(astNode, function(node) {\n        return baseAstNodeToRegexString(node, segmentValueCharset);\n      });\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return '(.*?)';\n      case 'named':\n        return \"([\" + segmentValueCharset + \"]+)\";\n      case 'static':\n        return escapeForRegex(astNode.value);\n      case 'optional':\n        return '(?:' + baseAstNodeToRegexString(astNode.value, segmentValueCharset) + ')?';\n    }\n  };\n  astNodeToRegexString = function(astNode, segmentValueCharset) {\n    if (segmentValueCharset == null) {\n      segmentValueCharset = defaultOptions.segmentValueCharset;\n    }\n    return '^' + baseAstNodeToRegexString(astNode, segmentValueCharset) + '$';\n  };\n  astNodeToNames = function(astNode) {\n    if (Array.isArray(astNode)) {\n      return concatMap(astNode, astNodeToNames);\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return ['_'];\n      case 'named':\n        return [astNode.value];\n      case 'static':\n        return [];\n      case 'optional':\n        return astNodeToNames(astNode.value);\n    }\n  };\n  getParam = function(params, key, nextIndexes, sideEffects) {\n    var index, maxIndex, result, value;\n    if (sideEffects == null) {\n      sideEffects = false;\n    }\n    value = params[key];\n    if (value == null) {\n      if (sideEffects) {\n        throw new Error(\"no values provided for key `\" + key + \"`\");\n      } else {\n        return;\n      }\n    }\n    index = nextIndexes[key] || 0;\n    maxIndex = Array.isArray(value) ? value.length - 1 : 0;\n    if (index > maxIndex) {\n      if (sideEffects) {\n        throw new Error(\"too few values provided for key `\" + key + \"`\");\n      } else {\n        return;\n      }\n    }\n    result = Array.isArray(value) ? value[index] : value;\n    if (sideEffects) {\n      nextIndexes[key] = index + 1;\n    }\n    return result;\n  };\n  astNodeContainsSegmentsForProvidedParams = function(astNode, params, nextIndexes) {\n    var i, length;\n    if (Array.isArray(astNode)) {\n      i = -1;\n      length = astNode.length;\n      while (++i < length) {\n        if (astNodeContainsSegmentsForProvidedParams(astNode[i], params, nextIndexes)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return getParam(params, '_', nextIndexes, false) != null;\n      case 'named':\n        return getParam(params, astNode.value, nextIndexes, false) != null;\n      case 'static':\n        return false;\n      case 'optional':\n        return astNodeContainsSegmentsForProvidedParams(astNode.value, params, nextIndexes);\n    }\n  };\n  stringify = function(astNode, params, nextIndexes) {\n    if (Array.isArray(astNode)) {\n      return stringConcatMap(astNode, function(node) {\n        return stringify(node, params, nextIndexes);\n      });\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return getParam(params, '_', nextIndexes, true);\n      case 'named':\n        return getParam(params, astNode.value, nextIndexes, true);\n      case 'static':\n        return astNode.value;\n      case 'optional':\n        if (astNodeContainsSegmentsForProvidedParams(astNode.value, params, nextIndexes)) {\n          return stringify(astNode.value, params, nextIndexes);\n        } else {\n          return '';\n        }\n    }\n  };\n  UrlPattern = function(arg1, arg2) {\n    var groupCount, options, parsed, parser, withoutWhitespace;\n    if (arg1 instanceof UrlPattern) {\n      this.isRegex = arg1.isRegex;\n      this.regex = arg1.regex;\n      this.ast = arg1.ast;\n      this.names = arg1.names;\n      return;\n    }\n    this.isRegex = arg1 instanceof RegExp;\n    if (!(('string' === typeof arg1) || this.isRegex)) {\n      throw new TypeError('argument must be a regex or a string');\n    }\n    if (this.isRegex) {\n      this.regex = arg1;\n      if (arg2 != null) {\n        if (!Array.isArray(arg2)) {\n          throw new Error('if first argument is a regex the second argument may be an array of group names but you provided something else');\n        }\n        groupCount = regexGroupCount(this.regex);\n        if (arg2.length !== groupCount) {\n          throw new Error(\"regex contains \" + groupCount + \" groups but array of group names contains \" + arg2.length);\n        }\n        this.names = arg2;\n      }\n      return;\n    }\n    if (arg1 === '') {\n      throw new Error('argument must not be the empty string');\n    }\n    withoutWhitespace = arg1.replace(/\\s+/g, '');\n    if (withoutWhitespace !== arg1) {\n      throw new Error('argument must not contain whitespace');\n    }\n    options = {\n      escapeChar: (arg2 != null ? arg2.escapeChar : void 0) || defaultOptions.escapeChar,\n      segmentNameStartChar: (arg2 != null ? arg2.segmentNameStartChar : void 0) || defaultOptions.segmentNameStartChar,\n      segmentNameCharset: (arg2 != null ? arg2.segmentNameCharset : void 0) || defaultOptions.segmentNameCharset,\n      segmentValueCharset: (arg2 != null ? arg2.segmentValueCharset : void 0) || defaultOptions.segmentValueCharset,\n      optionalSegmentStartChar: (arg2 != null ? arg2.optionalSegmentStartChar : void 0) || defaultOptions.optionalSegmentStartChar,\n      optionalSegmentEndChar: (arg2 != null ? arg2.optionalSegmentEndChar : void 0) || defaultOptions.optionalSegmentEndChar,\n      wildcardChar: (arg2 != null ? arg2.wildcardChar : void 0) || defaultOptions.wildcardChar\n    };\n    parser = newParser(options);\n    parsed = parser.pattern(arg1);\n    if (parsed == null) {\n      throw new Error(\"couldn't parse pattern\");\n    }\n    if (parsed.rest !== '') {\n      throw new Error(\"could only partially parse pattern\");\n    }\n    this.ast = parsed.value;\n    this.regex = new RegExp(astNodeToRegexString(this.ast, options.segmentValueCharset));\n    this.names = astNodeToNames(this.ast);\n  };\n  UrlPattern.prototype.match = function(url) {\n    var groups, match;\n    match = this.regex.exec(url);\n    if (match == null) {\n      return null;\n    }\n    groups = match.slice(1);\n    if (this.names) {\n      return keysAndValuesToObject(this.names, groups);\n    } else {\n      return groups;\n    }\n  };\n  UrlPattern.prototype.stringify = function(params) {\n    if (params == null) {\n      params = {};\n    }\n    if (this.isRegex) {\n      throw new Error(\"can't stringify patterns generated from a regex\");\n    }\n    if (params !== Object(params)) {\n      throw new Error(\"argument must be an object or undefined\");\n    }\n    return stringify(this.ast, params, {});\n  };\n  UrlPattern.escapeForRegex = escapeForRegex;\n  UrlPattern.concatMap = concatMap;\n  UrlPattern.stringConcatMap = stringConcatMap;\n  UrlPattern.regexGroupCount = regexGroupCount;\n  UrlPattern.keysAndValuesToObject = keysAndValuesToObject;\n  UrlPattern.P = P;\n  UrlPattern.newParser = newParser;\n  UrlPattern.defaultOptions = defaultOptions;\n  UrlPattern.astNodeToRegexString = astNodeToRegexString;\n  UrlPattern.astNodeToNames = astNodeToNames;\n  UrlPattern.getParam = getParam;\n  UrlPattern.astNodeContainsSegmentsForProvidedParams = astNodeContainsSegmentsForProvidedParams;\n  UrlPattern.stringify = stringify;\n  return UrlPattern;\n});\n","module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"querystring\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4063);\n"],"mappingsrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnjjtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvnjtrlbzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvrttWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrnRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACztctnLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AChttIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACbnbA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;ACDA;AACA;AACA;AACA;;;;A","sourceRoot":""}